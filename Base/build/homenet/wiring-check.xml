<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="72:BaseC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ee91360"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef82930"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ef82930"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef81eb8"/></to>
    </wire>
    <wire loc="74:BaseC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7ee82190"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ed21e38"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ed21e38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ea72970"/></to>
    </wire>
    <wire loc="75:BaseC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7ee73ae8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e2cbc40"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e2cbc40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e269ef8"/></to>
    </wire>
    <wire loc="77:BaseC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7ee72288"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e2ca4c8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e2ca4c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e2c55c8"/></to>
    </wire>
    <wire loc="78:BaseC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7ede0c18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e2cadf8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e2cadf8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e2c5d08"/></to>
    </wire>
    <wire loc="79:BaseC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7edc4498"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e2c9318"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e2c9318"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e2c4b68"/></to>
    </wire>
    <wire loc="80:BaseC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7edb2a08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e2c99c0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e2c99c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e2c4230"/></to>
    </wire>
    <wire loc="82:BaseC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7edd36b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ea866c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ea866c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ea711e8"/></to>
    </wire>
    <wire loc="83:BaseC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7edb1028"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ea85010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ea85010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ea71b18"/></to>
    </wire>
    <wire loc="84:BaseC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7edb1538"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ea85c88"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ea85c88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ea66158"/></to>
    </wire>
    <wire loc="85:BaseC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x7edb1c10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ea84400"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ea84400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ea707a8"/></to>
    </wire>
    <wire loc="87:BaseC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ed92aa0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed201d8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ed201d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed14e68"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef730b8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7e082030"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef730b8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7e0807c8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef730b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e0e0518"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef730b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e269bd0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef730b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e322d20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef730b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7dc0e3c0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef730b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e5d6358"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef730b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e9d3990"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef730b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e955e50"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef730b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e3ddcf0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef730b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e382010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7eec1230"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f230970"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f230970"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f070960"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7eec1760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ef71e70"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ef71e70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ef43d70"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7eec1ad0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7ef730b8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef62068"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df83488"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef62068"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e8465e0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef62068"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e759b28"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef52940"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef03d40"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7ef42518"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ef03a18"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ef421a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ecc1848"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ef421a8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ef51b00"/></to>
    </wire>
    <wire loc="28:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ef51b00"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ef20010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef51e68"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ef62068"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef20378"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ef51e68"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f062120"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f051540"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f202c20"/></to>
    </wire>
    <wire loc="86:BaseP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7ed90640"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:BaseP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x7ed90df0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ecc1848"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ed14b48"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7ecf4f08"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7ecc3b20"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7ecc3b20"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7ecb0348"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7ed03888"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7ecc2528"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7ecc2528"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7ecb1980"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7ed02268"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7ecc2eb8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7ecc2eb8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7ecb1010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7ecb0348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ebd5ba8"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7ecb1980"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ebd5250"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7ecb1010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ebe08e0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7ec51190"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7eb013b0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7ec80508"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7eb946b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7eb946b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de2c718"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7ec64508"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7eb80030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7eb80030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dde1010"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7ec54190"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7eb646b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7eb646b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd946c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7eca39d8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ebd1250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ebd1250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7df059e8"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7ec61e78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7eb70330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7eb70330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd97228"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7eca2d98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ebc3010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ebc3010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dec62b0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7ec84010"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ebb0968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ebb0968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de72c08"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7ec73190"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eb92330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eb92330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de27570"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7ec62190"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eb75c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eb75c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ddd3010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ebd5250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7df0d538"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7eca0af8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ebc2c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ebc2c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dec10f8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7ec83cb8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eba46b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eba46b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de6ca88"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7ec72e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eb90030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eb90030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de22538"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7ec53e78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eb62330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eb62330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd8e538"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7ec43068"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7eaf0cb8"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7ec70190"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7eb82cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7eb82cf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dde59e8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7eca46c8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ebd3f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ebd3f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7df08538"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7ec93878"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ebc0988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ebc0988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7deb2010"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7ec51d00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7eaf56c0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7ec92bd8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ebb1680"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ebb1680"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de757f8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7ec80e78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7eb93030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7eb93030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de2a0f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7ec64e78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eb80988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eb80988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dde09e8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7ec54b00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eb63030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eb63030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd920b0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7eca2428"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ebd1ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ebd1ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7df03538"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7eca17a8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ebc3968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ebc3968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dec5c78"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7ec84980"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7eba5330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7eba5330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de706c0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7ec73b00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eb92c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eb92c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de25010"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7ec62b00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eb746b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eb746b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ddd29e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ebd5ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7df0b010"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7ec94508"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ebc16b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ebc16b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dec0ac8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7ec826c8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eba3030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eba3030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de6a538"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7ec52808"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eb62c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eb62c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd8c010"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7ec819d8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7eb95d10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7eb95d10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de30d08"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7ec70b00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7eb816b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7eb816b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dde3538"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7ec60808"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7eb70c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7eb70c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd96c08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7ec439d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7eae3050"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7eca3068"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ebd2890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ebd2890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7df06010"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7ec92268"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ebb4330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ebb4330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7deb19e8"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7ec61508"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7eb719c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7eb719c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dda17f8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7ec905e8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ebb0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ebb0010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de73228"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7ec74808"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7eb93988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7eb93988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de29ac8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7ec63808"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eb75330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eb75330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ddd5538"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7ec53508"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eb63988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eb63988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd90a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ebe08e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7df0fa30"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7eca0188"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ebc2330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ebc2330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dec3718"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7ec83348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eba5c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eba5c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de6e0b0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7ec72508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eb916b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eb916b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de249e8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7ec506c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7eaf2998"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7ec71808"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7eb823a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7eb823a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dde6010"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7ec81068"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eba3988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eba3988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de68010"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7ecb0cb8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ebd35d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ebd35d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7df0a9e8"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7ec94ef8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ebc0030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ebc0030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7deb4570"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ea72970"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e9d6010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ea711e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ea548f8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7ea857a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7ea702c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7ea702c0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7ea539f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ea66158"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ea51828"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ea71b18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ea53258"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ea81010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ea64248"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ea64248"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7e2ea290"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ea707a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ea53ed8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e9d6010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e9d3cd8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ea60c50"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7e2f0c20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ea416c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e9d65f0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e9d65f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e9d0338"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ea41d98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e9d6cb0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e9d6cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e382c80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x7ea454b8"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x7e2ef140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e9d5260"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ea53ed8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e382c80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e37dc80"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e9a0260"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e9d5260"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e951978"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e9d5260"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e9c1be8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e9541c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e9541c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e941858"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e9b4d40"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e951010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e951010"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e9408a0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e9b0d98"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7e3d9060"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e9b0d98"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7e382358"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7e382358"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7e37d358"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7e3d9060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7e3d1180"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7e9a25e0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7e3d9488"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7e3d9488"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e3d15d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x7e997670"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x7e3d9d10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x7e3d9d10"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x7e3d1e58"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e995e00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e310b38"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e310b38"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e30da00"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e9a0bc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed201d8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e382010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e37d010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e3ddcf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e8b3828"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e3ddcf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e3d6d98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e955e50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e941510"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7e993df8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7e9935c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7e994e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e945618"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e941f20"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e906a60"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e951978"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7e930d00"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e8b3cd0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7e8b3cd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e8a7640"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e927458"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e6a09d8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e6a09d8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7eca2d98"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e927de8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7e6997a8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e6997a8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7eca39d8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e9267c8"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7e698af8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e698af8"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7eca3068"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e921c98"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7e68a500"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e68a500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e60ade0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e923370"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e3f56e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e3f56e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4f4018"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7e904c90"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7e3f4840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e3f4840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e906030"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7e3f4b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e3f4b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e906718"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7e3f35b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e3f35b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e9063a8"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7e3f3910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e3f3910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e913010"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7e3f3c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e3f3c68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e913460"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7e3f10b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e3f10b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e913930"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7e3f14f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e3f14f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e913d88"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7e3f19a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e3f19a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e912290"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7e3f1de0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e3f1de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7e915d88"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7e3f0ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e3f0ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7e905450"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e3ebd28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e3ebd28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4f4018"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e905b10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed201d8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <from><interface-ref name="syncDone_task" scoped="" ref="0x7e900010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e8b3828"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e8a6d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7e8a6d40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e6a4560"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7e8a7640"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7dd0b180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7dd0b180"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7dd05488"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7dd02d08"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7dd08cd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7dd08cd8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7dce50f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7dd03ca0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e7114b8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e7114b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e6f1980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7dce4880"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e875a10"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e875a10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e7f1438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7dce16f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e8529b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7e866220"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e7e71f0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7e8650d8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e7e7dc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e8529b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7e7e5930"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e8529b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7e7e2148"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e8529b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7e7e08c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7e7d7010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e836220"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e759f10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e875a10"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7e6d89f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e7088d8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e7088d8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e703320"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e7022f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e875a10"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7e69a428"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7ec92268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7e69ad98"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7ec62190"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7e6a0068"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7ec72508"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7e698188"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7ec73190"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7e688ed0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e685690"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e68ab18"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7e673180"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7e685d18"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e8650d8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e673778"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7e6575f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7e6575f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e617228"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CCATimer" scoped="" ref="0x7e600a78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e5eb428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e5eb428"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7e5e11e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7e609468"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e6a0068"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7e65ae28"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e626010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7e6585f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e61b0b0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7e657da8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e6152d0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7e659630"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e624010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7e658da8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e619150"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7e65a670"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e636010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7e659de8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e622010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e6367c8"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7e649618"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e6267c8"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7e649990"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e6247c8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7e649d08"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e6227c8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7e64a0a0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e61b868"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7e64a418"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e619908"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7e64a790"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e6179e0"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7e64ab08"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e615a88"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7e64ae80"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7e5f63b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7e5fa4b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7e5e11e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7e5d69f0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7e5d69f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e54b810"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e5d6358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e5c7010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7e5ca230"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7e512e90"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e5c7010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e5c3af0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7e521840"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e56c6b8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7e554700"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7e5c74b8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7e5c74b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e5a61b0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e5177d0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7e5c6d40"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7e5c6d40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e57ba48"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e5c3ed8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e8469c8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7e5b86c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e8469c8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7e5b54f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e836a70"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e5b1e90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e8469c8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7e578c00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e5bbef8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7e579af8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e5b3eb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x7e552e48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7e51b708"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e3f3260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e3f0270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e3ee368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e3f4190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e3f0f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e3f44e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e3ee7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e4f4998"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e3f06a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e3f5dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e3f4ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e3eee78"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e4f4998"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7e4f4998"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e4ece40"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4ea800"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4eaee0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e4f4018"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4ec4c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4e95e8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e4e9960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4b6220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e4b6220"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4b0a10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7e4e4188"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7e4b68d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x7e4b68d8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7e4b0010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7e4e09a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7e4b6c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7e4b6c10"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7e4b0358"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e4e0dc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed201d8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7e4b0358"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7e4a99d8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7e4b0010"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7e4a96b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7e4b7e98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e4b4c40"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e4b4c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e4a9390"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e4b0a10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4a8100"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7e4a5500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e43a0c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e43a0c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dc0c6f0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4901e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7e43ac10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e43ac10"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7dc0b270"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7e496998"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7e470670"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7e470670"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7e4683e8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7e4905e8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7e464808"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7e4661b8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7eca2d98"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7e466b28"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7eca17a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7e465508"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7eca0188"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7e465e78"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7eca0af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7e43a808"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7dc0ce30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7dc0b730"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e3fd0f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7dc0bb58"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7dc0e6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7dc0a190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e3e60b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e3e8880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e3e6920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e3e5ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e3e77a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e3ea788"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e3e7010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e3e64e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e3e8bd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e3e56a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e3eaae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e3e5f18"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e4f4998"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e3e7bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e3e7368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e3eae38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e3e5270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e3e6d58"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e3ea430"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e3e8528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e3e81d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e3e4608"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e4f4998"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x7e3d4bf8"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x7e3d02d8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7e3d0860"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e8b3cd0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7e3cd620"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e6a0068"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e3cc010"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e6a09d8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7e3cc9a0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7e698188"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7e3cd010"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7e688ed0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e3cb370"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e38f650"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e38f650"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4f4018"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7e3caad0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7e38e408"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e38e408"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7e3cae40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7e38ee10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e38ee10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e3c91f0"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7e38d190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e38d190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e3c9568"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7e38e0b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e38e0b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e3ca680"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7e38a190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e38a190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e3cba60"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7e389dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e389dc0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e4f4998"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e3ca1b0"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e3892b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e3892b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7e3c45b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7e382780"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7e382780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7e37d780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e3c4ab8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed201d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e38b900"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e38b010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e38d840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e38bd38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e38d4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e38ae38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e3896e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e4f4998"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e38b448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e38db98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e38e760"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e38aa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e38a5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e38fd28"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e38eab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e378b00"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed201d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e37c288"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e6a09d8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7e37cc18"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7e69a428"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7e37a608"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7e69ad98"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e379010"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e68ab18"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e379628"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e345690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e345690"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e4f4018"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e379d18"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7e3307a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e3307a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e4f4998"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e3787c0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7e345d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e345d68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7e374178"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e3419a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e342260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e340270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e330368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e3410b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e344190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e342910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e341de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e3425b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e340f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e3444e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e3414f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e342c68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e344840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e340ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e3406a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e344ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e344b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e330e78"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e4f4998"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e30da00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7e308968"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7e310288"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7e30d150"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7e30d150"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7e3080b8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e3245f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e322d20"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e322d20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e30cc78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e269ef8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e22e9e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e2c8328"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e26c230"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e269bd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e22e6c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e251de0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e2c8838"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7e26c758"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e266e88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7e26ce10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e266738"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7e251900"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7df68010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e266e88"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e180c18"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e266738"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e180698"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7e1243f8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7e251900"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e223790"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e251de0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e1233f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e251de0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e10d158"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7e251de0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7e1248e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7e225b30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7e124db8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7e228518"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7e220f10"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7e1104d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7e20eb88"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e111978"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7e111978"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e0e5250"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7e108818"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7e111da0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7e111da0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7e0e5aa0"/></to>
    </wire>
    <wire loc="324:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7e1ca788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7e202258"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="319:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7e1cb828"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x7e122030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7e122468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7e0ea010"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7e0e5678"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7e0e5678"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7e0e0c68"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7e0e5aa0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7e0d2098"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7e0e5250"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7e0e0850"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e0e4470"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e026798"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e026798"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e022980"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e0a5ea8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e0e4470"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7e0d2930"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7e0894f8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7e0894f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7e0823a8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7e0d2d68"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7e089930"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7e089930"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7e082800"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7e0a5270"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7e089d68"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7e089d68"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7e082c58"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7e087270"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7e073468"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7e088970"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7e080b40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7e088da8"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7e073010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e072010"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef52940"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7e0726d8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7df6f9f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e021b60"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e021b60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7df85438"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7df74478"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e00fa00"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e00fa00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e003c00"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7e00d7a8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e0009b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7e00b3f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7dff35b0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e009158"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7dff00b8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e009158"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7dfef890"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e009158"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7dfec030"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7df83870"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e00fa00"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="20:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <documentation loc="20:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="20:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformP.nc">
      <documentation loc="20:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.1.2.6 2006/09/22 19:12:14 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseP" loc="49:BaseP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.11 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="35:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/08/04 00:34:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.11 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.12 $ $Date: 2006/07/17 05:04:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.22 $ $Date: 2006/09/07 17:53:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f081e80"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10;</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.1.2.6 2006/06/20 18:56:06 jwhui Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.&#10;</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="65:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.1.2.4 2006/06/20 18:56:06 jwhui Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @version @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.TimerMilliC" loc="36(HplCC2420InterruptsC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HplCC2420InterruptsC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.MilliInit" loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliAlarm" loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliCounter" loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.Transform32" loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <documentation loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiImplP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.12 $ $Date: 2006/09/28 19:26:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiP.HplCC2420SpiC" loc="37(CC2420SpiP.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="37(CC2420SpiP.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.1.2.9 2006/08/15 11:59:08 klueska Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.1.2.10 2006/09/28 19:26:21 jwhui Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.1.2.4 2006/03/13 23:07:53 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="51(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="51(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TransmitC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.14 $ $Date: 2006/08/15 11:59:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.5 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.10 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10;</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="34(SerialActiveMessageC.AM):/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="37(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/10/30 18:40:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/10/30 18:40:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="40(Atm128Uart0C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="40(Atm128Uart0C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/10/30 18:40:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10;</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10;</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitThreeP.InitThree):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterThree16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120e58"/>
            <typename><typedef-ref name="TThree" ref="0x7f081ca0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(CounterMicro32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120e58"/>
            <typename><typedef-ref name="TMicro" ref="0x7f112010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120e58"/>
            <typename><typedef-ref name="TThree" ref="0x7f081ca0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f072078"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ec41e90" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ec33030" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ec331c0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ec20378" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ec20518" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ec206b8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ec20850" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7eb51390" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7eb51530" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7eb516d0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7eb51868" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="66:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7e761f08" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e761f08"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7e7570b8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7e747410" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7e747410"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7e7476d0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e7476d0"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7e747860" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7e704b28" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7e704b28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7e704de8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e704de8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e6ea958" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e6ea958"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e6eac18" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e6eac18"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e6eade0" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e6eade0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e6e80b8" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e6e80b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e6e8258" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7e6e8520" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7e6e8520"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e719c80" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e719c80"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e6d2010" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e6d2010"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e6d21d8" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e6d21d8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e6d2498" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e6d2498"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e6d2638" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7e635310" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7e6354b0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7e635650" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7e6357e8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TransformAlarmCounterC" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e5a5720" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e5a5720"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e5a59e0" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e5a59e0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e5a5ba8" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e5a5ba8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e5a5e68" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e5a5e68"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e5a4030" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7e5a42f8" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7e5a42f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e571ee0" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e571ee0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e54a900" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e54a900"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7e54aa88" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e516630" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e516630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7e4390a8" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7e42c328" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/10/30 18:40:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7ef730b8" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ef730b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef73290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ef82930" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ef82930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ef82b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef62068" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef62068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef62240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ef71e70" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ef71e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef70070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ef52940" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef52940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ef52b18"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ef52bf8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ef52cd8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ef52db8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ef52e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7ef421a8" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7ef421a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef42380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ef43d70" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ef43d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef42010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7ef42518" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7ef42518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef426f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef51e68" loc="23:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef51e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef30050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ef51b00" loc="22:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ef51b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef51cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef20378" loc="23:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef20378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef20550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ef20010" loc="22:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ef20010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef201e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ef03a18" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ef03a18"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f250308"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f250308"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef03bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ef03d40" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef03d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ef03f18"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ef02010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ef020f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ef021d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ef022b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7eec1ad0" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7eec1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eec1ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ef81eb8" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ef81eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7eec10c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7eec1760" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7eec1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eec1938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7eec1230" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7eec1230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eec1408"/>
        <function-ref name="taskLoop" scoped="" ref="0x7eec14e8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7eec15c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2109b8" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f210b90"/>
        <function-ref name="runTask" scoped="" ref="0x7f210c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f230970" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f230970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f230b48"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f230c28"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f230d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f062120" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f062120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0622f8"/>
        <function-ref name="runTask" scoped="" ref="0x7f0623d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f051540" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f051540"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f051718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f070960" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f070960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f070b38"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f070c18"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f070cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efe01a0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7efe0378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f202c20" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f202c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f202df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7eff0078" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7eff0250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7ee91360" loc="51:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ee91360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ee91538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7ee73ae8" loc="52:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7ee73ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ee73cc0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ee73da0"/>
        <function-ref name="start" scoped="" ref="0x7ee73e80"/>
        <function-ref name="stop" scoped="" ref="0x7ee82010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7ede0c18" loc="56:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x7ede0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7ede0df0"/>
        <function-ref name="receive" scoped="" ref="0x7ede0ed0"/>
        <function-ref name="getPayload" scoped="" ref="0x7edf0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x7edb1c10" loc="63:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x7edb1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7edb1de8"/>
        <function-ref name="address" scoped="" ref="0x7edb1ec8"/>
        <function-ref name="destination" scoped="" ref="0x7edb0010"/>
        <function-ref name="setSource" scoped="" ref="0x7edb00f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7edb01d0"/>
        <function-ref name="type" scoped="" ref="0x7edb02b0"/>
        <function-ref name="setType" scoped="" ref="0x7edb0390"/>
        <function-ref name="isForMe" scoped="" ref="0x7edb0470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7ed90640" loc="86:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x7ed90640"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ed90898"/>
        <function-ref name="runTask" scoped="" ref="0x7ed90978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7ee82190" loc="53:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7ee82190"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ee82368"/>
        <function-ref name="stopDone" scoped="" ref="0x7ee82448"/>
        <function-ref name="start" scoped="" ref="0x7ee82528"/>
        <function-ref name="stop" scoped="" ref="0x7ee82608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7edb1538" loc="62:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7edb1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7edb1710"/>
        <function-ref name="payloadLength" scoped="" ref="0x7edb17f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7edb18d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7edb19b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7edb1a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7edb1028" loc="61:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7edb1028"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7edb1200"/>
        <function-ref name="receive" scoped="" ref="0x7edb12e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7edb13c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x7ed90df0" loc="87:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x7ed90df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ed84010"/>
        <function-ref name="runTask" scoped="" ref="0x7ed840f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ed92aa0" loc="65:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7ed92aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ed92c78"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ed92d58"/>
        <function-ref name="led1On" scoped="" ref="0x7ed92e38"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ed92f18"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7eda3010"/>
        <function-ref name="get" scoped="" ref="0x7eda30f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7eda31d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7eda3550"/>
        <function-ref name="set" scoped="" ref="0x7eda32b0"/>
        <function-ref name="led0On" scoped="" ref="0x7eda3390"/>
        <function-ref name="led2On" scoped="" ref="0x7eda3470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7edc4498" loc="57:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x7edc4498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7edc4670"/>
        <function-ref name="payloadLength" scoped="" ref="0x7edc4750"/>
        <function-ref name="getPayload" scoped="" ref="0x7edc4830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7edc4910"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7edc49f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7edd36b8" loc="60:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7edd36b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7edd3890"/>
        <function-ref name="getPayload" scoped="" ref="0x7edd3970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7edd3a50"/>
        <function-ref name="cancel" scoped="" ref="0x7edd3b30"/>
        <function-ref name="sendDone" scoped="" ref="0x7edd3c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7ee72288" loc="55:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x7ee72288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ee72460"/>
        <function-ref name="getPayload" scoped="" ref="0x7ee72540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ee72620"/>
        <function-ref name="cancel" scoped="" ref="0x7ee72700"/>
        <function-ref name="sendDone" scoped="" ref="0x7ee727e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7edb2a08" loc="58:BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x7edb2a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7edb2be0"/>
        <function-ref name="address" scoped="" ref="0x7edb2cc0"/>
        <function-ref name="destination" scoped="" ref="0x7edb2da0"/>
        <function-ref name="setSource" scoped="" ref="0x7edb2e80"/>
        <function-ref name="setDestination" scoped="" ref="0x7edd3010"/>
        <function-ref name="type" scoped="" ref="0x7edd30f0"/>
        <function-ref name="setType" scoped="" ref="0x7edd31d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7edd32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7ed201d8" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7ed201d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ed203b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ed20490"/>
        <function-ref name="led1On" scoped="" ref="0x7ed20570"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ed20650"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ed20730"/>
        <function-ref name="get" scoped="" ref="0x7ed20810"/>
        <function-ref name="led1Off" scoped="" ref="0x7ed208f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ed20c70"/>
        <function-ref name="set" scoped="" ref="0x7ed209d0"/>
        <function-ref name="led0On" scoped="" ref="0x7ed20ab0"/>
        <function-ref name="led2On" scoped="" ref="0x7ed20b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7ecf4f08" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7ecf4f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed030f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ed031d0"/>
        <function-ref name="toggle" scoped="" ref="0x7ed032b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed03390"/>
        <function-ref name="get" scoped="" ref="0x7ed03470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed03550"/>
        <function-ref name="set" scoped="" ref="0x7ed03630"/>
        <function-ref name="clr" scoped="" ref="0x7ed03710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ed14b48" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ed14b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ed14d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7ed03888" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7ed03888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed03a60"/>
        <function-ref name="isInput" scoped="" ref="0x7ed03b40"/>
        <function-ref name="toggle" scoped="" ref="0x7ed03c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed03d00"/>
        <function-ref name="get" scoped="" ref="0x7ed03de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed03ec0"/>
        <function-ref name="set" scoped="" ref="0x7ed02010"/>
        <function-ref name="clr" scoped="" ref="0x7ed020f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7ed14e68" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7ed14e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ed10050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ed10130"/>
        <function-ref name="led1On" scoped="" ref="0x7ed10210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ed102f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ed103d0"/>
        <function-ref name="get" scoped="" ref="0x7ed104b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ed10590"/>
        <function-ref name="led2Off" scoped="" ref="0x7ed10910"/>
        <function-ref name="set" scoped="" ref="0x7ed10670"/>
        <function-ref name="led0On" scoped="" ref="0x7ed10750"/>
        <function-ref name="led2On" scoped="" ref="0x7ed10830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7ed02268" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7ed02268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ed02440"/>
        <function-ref name="isInput" scoped="" ref="0x7ed02520"/>
        <function-ref name="toggle" scoped="" ref="0x7ed02600"/>
        <function-ref name="isOutput" scoped="" ref="0x7ed026e0"/>
        <function-ref name="get" scoped="" ref="0x7ed027c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ed028a0"/>
        <function-ref name="set" scoped="" ref="0x7ed02980"/>
        <function-ref name="clr" scoped="" ref="0x7ed02a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7ecc3b20" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7ecc3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc3cf8"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc3dd8"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc3eb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc2010"/>
        <function-ref name="get" scoped="" ref="0x7ecc20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc21d0"/>
        <function-ref name="set" scoped="" ref="0x7ecc22b0"/>
        <function-ref name="clr" scoped="" ref="0x7ecc2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7ecc2528" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7ecc2528"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc2700"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc27e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc28c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc29a0"/>
        <function-ref name="get" scoped="" ref="0x7ecc2a80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc2b60"/>
        <function-ref name="set" scoped="" ref="0x7ecc2c40"/>
        <function-ref name="clr" scoped="" ref="0x7ecc2d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7ecc1848" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ecc1848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ecc1a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7ecc2eb8" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7ecc2eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecc10c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ecc11a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ecc1280"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecc1360"/>
        <function-ref name="get" scoped="" ref="0x7ecc1440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecc1520"/>
        <function-ref name="set" scoped="" ref="0x7ecc1600"/>
        <function-ref name="clr" scoped="" ref="0x7ecc16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7ec51190" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7ec51190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec51568"/>
        <function-ref name="isInput" scoped="" ref="0x7ec51648"/>
        <function-ref name="toggle" scoped="" ref="0x7ec51728"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec51808"/>
        <function-ref name="get" scoped="" ref="0x7ec518e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec519c8"/>
        <function-ref name="set" scoped="" ref="0x7ec51aa8"/>
        <function-ref name="clr" scoped="" ref="0x7ec51b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7ec80508" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7ec80508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec806e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec807c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec808a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec80980"/>
        <function-ref name="get" scoped="" ref="0x7ec80a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec80b40"/>
        <function-ref name="set" scoped="" ref="0x7ec80c20"/>
        <function-ref name="clr" scoped="" ref="0x7ec80d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7ec64508" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7ec64508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec646e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec647c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec648a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec64980"/>
        <function-ref name="get" scoped="" ref="0x7ec64a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec64b40"/>
        <function-ref name="set" scoped="" ref="0x7ec64c20"/>
        <function-ref name="clr" scoped="" ref="0x7ec64d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7ec54190" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7ec54190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec54368"/>
        <function-ref name="isInput" scoped="" ref="0x7ec54448"/>
        <function-ref name="toggle" scoped="" ref="0x7ec54528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec54608"/>
        <function-ref name="get" scoped="" ref="0x7ec546e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec547c8"/>
        <function-ref name="set" scoped="" ref="0x7ec548a8"/>
        <function-ref name="clr" scoped="" ref="0x7ec54988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7eca39d8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7eca39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca3bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7eca3c90"/>
        <function-ref name="toggle" scoped="" ref="0x7eca3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca3e50"/>
        <function-ref name="get" scoped="" ref="0x7eca2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca20f0"/>
        <function-ref name="set" scoped="" ref="0x7eca21d0"/>
        <function-ref name="clr" scoped="" ref="0x7eca22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7ec61e78" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7ec61e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec60070"/>
        <function-ref name="isInput" scoped="" ref="0x7ec60150"/>
        <function-ref name="toggle" scoped="" ref="0x7ec60230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec60310"/>
        <function-ref name="get" scoped="" ref="0x7ec603f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec604d0"/>
        <function-ref name="set" scoped="" ref="0x7ec605b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec60690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7eca2d98" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7eca2d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca1010"/>
        <function-ref name="isInput" scoped="" ref="0x7eca10f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eca11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca12b0"/>
        <function-ref name="get" scoped="" ref="0x7eca1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca1470"/>
        <function-ref name="set" scoped="" ref="0x7eca1550"/>
        <function-ref name="clr" scoped="" ref="0x7eca1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7ec84010" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7ec84010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec841e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec842c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec843a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec84488"/>
        <function-ref name="get" scoped="" ref="0x7ec84568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec84648"/>
        <function-ref name="set" scoped="" ref="0x7ec84728"/>
        <function-ref name="clr" scoped="" ref="0x7ec84808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7ec73190" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7ec73190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec73368"/>
        <function-ref name="isInput" scoped="" ref="0x7ec73448"/>
        <function-ref name="toggle" scoped="" ref="0x7ec73528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec73608"/>
        <function-ref name="get" scoped="" ref="0x7ec736e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec737c8"/>
        <function-ref name="set" scoped="" ref="0x7ec738a8"/>
        <function-ref name="clr" scoped="" ref="0x7ec73988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7ec62190" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7ec62190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec62368"/>
        <function-ref name="isInput" scoped="" ref="0x7ec62448"/>
        <function-ref name="toggle" scoped="" ref="0x7ec62528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec62608"/>
        <function-ref name="get" scoped="" ref="0x7ec626e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec627c8"/>
        <function-ref name="set" scoped="" ref="0x7ec628a8"/>
        <function-ref name="clr" scoped="" ref="0x7ec62988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7ecb1980" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7ecb1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb1b58"/>
        <function-ref name="isInput" scoped="" ref="0x7ecb1c38"/>
        <function-ref name="toggle" scoped="" ref="0x7ecb1d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecb1df8"/>
        <function-ref name="get" scoped="" ref="0x7ecb1ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb0010"/>
        <function-ref name="set" scoped="" ref="0x7ecb00f0"/>
        <function-ref name="clr" scoped="" ref="0x7ecb01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7eca0af8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7eca0af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca0cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7eca0db0"/>
        <function-ref name="toggle" scoped="" ref="0x7eca0e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec94010"/>
        <function-ref name="get" scoped="" ref="0x7ec940f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec941d0"/>
        <function-ref name="set" scoped="" ref="0x7ec942b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec94390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7ec83cb8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7ec83cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec83e90"/>
        <function-ref name="isInput" scoped="" ref="0x7ec82010"/>
        <function-ref name="toggle" scoped="" ref="0x7ec820f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec821d0"/>
        <function-ref name="get" scoped="" ref="0x7ec822b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec82390"/>
        <function-ref name="set" scoped="" ref="0x7ec82470"/>
        <function-ref name="clr" scoped="" ref="0x7ec82550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7ec72e78" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7ec72e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec71070"/>
        <function-ref name="isInput" scoped="" ref="0x7ec71150"/>
        <function-ref name="toggle" scoped="" ref="0x7ec71230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec71310"/>
        <function-ref name="get" scoped="" ref="0x7ec713f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec714d0"/>
        <function-ref name="set" scoped="" ref="0x7ec715b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec71690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7ec53e78" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7ec53e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec52070"/>
        <function-ref name="isInput" scoped="" ref="0x7ec52150"/>
        <function-ref name="toggle" scoped="" ref="0x7ec52230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec52310"/>
        <function-ref name="get" scoped="" ref="0x7ec523f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec524d0"/>
        <function-ref name="set" scoped="" ref="0x7ec525b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec52690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7ec43068" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7ec43068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec43240"/>
        <function-ref name="isInput" scoped="" ref="0x7ec43320"/>
        <function-ref name="toggle" scoped="" ref="0x7ec43400"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec434e0"/>
        <function-ref name="get" scoped="" ref="0x7ec435c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec436a0"/>
        <function-ref name="set" scoped="" ref="0x7ec43780"/>
        <function-ref name="clr" scoped="" ref="0x7ec43860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7ec70190" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7ec70190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec70368"/>
        <function-ref name="isInput" scoped="" ref="0x7ec70448"/>
        <function-ref name="toggle" scoped="" ref="0x7ec70528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec70608"/>
        <function-ref name="get" scoped="" ref="0x7ec706e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec707c8"/>
        <function-ref name="set" scoped="" ref="0x7ec708a8"/>
        <function-ref name="clr" scoped="" ref="0x7ec70988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7eca46c8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7eca46c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca48a0"/>
        <function-ref name="isInput" scoped="" ref="0x7eca4980"/>
        <function-ref name="toggle" scoped="" ref="0x7eca4a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca4b40"/>
        <function-ref name="get" scoped="" ref="0x7eca4c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca4d00"/>
        <function-ref name="set" scoped="" ref="0x7eca4de0"/>
        <function-ref name="clr" scoped="" ref="0x7eca4ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7ec93878" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7ec93878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec93a50"/>
        <function-ref name="isInput" scoped="" ref="0x7ec93b30"/>
        <function-ref name="toggle" scoped="" ref="0x7ec93c10"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec93cf0"/>
        <function-ref name="get" scoped="" ref="0x7ec93dd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec93eb0"/>
        <function-ref name="set" scoped="" ref="0x7ec92010"/>
        <function-ref name="clr" scoped="" ref="0x7ec920f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7ec51d00" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7ec51d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec51ed8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec50010"/>
        <function-ref name="toggle" scoped="" ref="0x7ec500f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec501d0"/>
        <function-ref name="get" scoped="" ref="0x7ec502b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec50390"/>
        <function-ref name="set" scoped="" ref="0x7ec50470"/>
        <function-ref name="clr" scoped="" ref="0x7ec50550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7ec92bd8" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7ec92bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec92db0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec92e90"/>
        <function-ref name="toggle" scoped="" ref="0x7ec90010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec900f0"/>
        <function-ref name="get" scoped="" ref="0x7ec901d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec902b0"/>
        <function-ref name="set" scoped="" ref="0x7ec90390"/>
        <function-ref name="clr" scoped="" ref="0x7ec90470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7ec80e78" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7ec80e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec74070"/>
        <function-ref name="isInput" scoped="" ref="0x7ec74150"/>
        <function-ref name="toggle" scoped="" ref="0x7ec74230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec74310"/>
        <function-ref name="get" scoped="" ref="0x7ec743f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec744d0"/>
        <function-ref name="set" scoped="" ref="0x7ec745b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec74690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7ec64e78" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7ec64e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec63070"/>
        <function-ref name="isInput" scoped="" ref="0x7ec63150"/>
        <function-ref name="toggle" scoped="" ref="0x7ec63230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec63310"/>
        <function-ref name="get" scoped="" ref="0x7ec633f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec634d0"/>
        <function-ref name="set" scoped="" ref="0x7ec635b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec63690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7ec54b00" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7ec54b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec54cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec54db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec54e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec53010"/>
        <function-ref name="get" scoped="" ref="0x7ec530f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec531d0"/>
        <function-ref name="set" scoped="" ref="0x7ec532b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec53390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7eca2428" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7eca2428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca2600"/>
        <function-ref name="isInput" scoped="" ref="0x7eca26e0"/>
        <function-ref name="toggle" scoped="" ref="0x7eca27c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca28a0"/>
        <function-ref name="get" scoped="" ref="0x7eca2980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca2a60"/>
        <function-ref name="set" scoped="" ref="0x7eca2b40"/>
        <function-ref name="clr" scoped="" ref="0x7eca2c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7eca17a8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7eca17a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca1980"/>
        <function-ref name="isInput" scoped="" ref="0x7eca1a60"/>
        <function-ref name="toggle" scoped="" ref="0x7eca1b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca1c20"/>
        <function-ref name="get" scoped="" ref="0x7eca1d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca1de0"/>
        <function-ref name="set" scoped="" ref="0x7eca1ec0"/>
        <function-ref name="clr" scoped="" ref="0x7eca0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7ec84980" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7ec84980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec84b58"/>
        <function-ref name="isInput" scoped="" ref="0x7ec84c38"/>
        <function-ref name="toggle" scoped="" ref="0x7ec84d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec84df8"/>
        <function-ref name="get" scoped="" ref="0x7ec84ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec83010"/>
        <function-ref name="set" scoped="" ref="0x7ec830f0"/>
        <function-ref name="clr" scoped="" ref="0x7ec831d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7ec73b00" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7ec73b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec73cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec73db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec73e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec72010"/>
        <function-ref name="get" scoped="" ref="0x7ec720f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec721d0"/>
        <function-ref name="set" scoped="" ref="0x7ec722b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec72390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7ec62b00" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7ec62b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec62cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec62db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec62e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec61010"/>
        <function-ref name="get" scoped="" ref="0x7ec610f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec611d0"/>
        <function-ref name="set" scoped="" ref="0x7ec612b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec61390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7ecb0348" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7ecb0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb0520"/>
        <function-ref name="isInput" scoped="" ref="0x7ecb0600"/>
        <function-ref name="toggle" scoped="" ref="0x7ecb06e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecb07c0"/>
        <function-ref name="get" scoped="" ref="0x7ecb08a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb0980"/>
        <function-ref name="set" scoped="" ref="0x7ecb0a60"/>
        <function-ref name="clr" scoped="" ref="0x7ecb0b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7ec94508" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7ec94508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec94760"/>
        <function-ref name="isInput" scoped="" ref="0x7ec94840"/>
        <function-ref name="toggle" scoped="" ref="0x7ec94920"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec94a00"/>
        <function-ref name="get" scoped="" ref="0x7ec94ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec94bc0"/>
        <function-ref name="set" scoped="" ref="0x7ec94ca0"/>
        <function-ref name="clr" scoped="" ref="0x7ec94d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7ec826c8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7ec826c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec828a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec82980"/>
        <function-ref name="toggle" scoped="" ref="0x7ec82a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec82b40"/>
        <function-ref name="get" scoped="" ref="0x7ec82c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec82d00"/>
        <function-ref name="set" scoped="" ref="0x7ec82de0"/>
        <function-ref name="clr" scoped="" ref="0x7ec82ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7ec52808" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7ec52808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec529e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec52ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec52ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec52c80"/>
        <function-ref name="get" scoped="" ref="0x7ec52d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec52e40"/>
        <function-ref name="set" scoped="" ref="0x7ec52f20"/>
        <function-ref name="clr" scoped="" ref="0x7ec51018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7ec819d8" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7ec819d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec81cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec81d90"/>
        <function-ref name="toggle" scoped="" ref="0x7ec81e70"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec80010"/>
        <function-ref name="get" scoped="" ref="0x7ec800f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec801d0"/>
        <function-ref name="set" scoped="" ref="0x7ec802b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec80390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7ec70b00" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7ec70b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec70cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec70db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec70e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec64010"/>
        <function-ref name="get" scoped="" ref="0x7ec640f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec641d0"/>
        <function-ref name="set" scoped="" ref="0x7ec642b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec64390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7ec60808" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7ec60808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec609e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec60ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec60ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec60c80"/>
        <function-ref name="get" scoped="" ref="0x7ec60d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec60e40"/>
        <function-ref name="set" scoped="" ref="0x7ec60f20"/>
        <function-ref name="clr" scoped="" ref="0x7ec54018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7ec439d8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7ec439d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec43bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec43c90"/>
        <function-ref name="toggle" scoped="" ref="0x7ec43d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec43e50"/>
        <function-ref name="get" scoped="" ref="0x7ec42010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec420f0"/>
        <function-ref name="set" scoped="" ref="0x7ec421d0"/>
        <function-ref name="clr" scoped="" ref="0x7ec422b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7eca3068" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7eca3068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca3240"/>
        <function-ref name="isInput" scoped="" ref="0x7eca3320"/>
        <function-ref name="toggle" scoped="" ref="0x7eca3400"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca34e0"/>
        <function-ref name="get" scoped="" ref="0x7eca35c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca36a0"/>
        <function-ref name="set" scoped="" ref="0x7eca3780"/>
        <function-ref name="clr" scoped="" ref="0x7eca3860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7ec92268" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7ec92268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec92440"/>
        <function-ref name="isInput" scoped="" ref="0x7ec92520"/>
        <function-ref name="toggle" scoped="" ref="0x7ec92600"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec926e0"/>
        <function-ref name="get" scoped="" ref="0x7ec927c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec928a0"/>
        <function-ref name="set" scoped="" ref="0x7ec92980"/>
        <function-ref name="clr" scoped="" ref="0x7ec92a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7ec61508" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7ec61508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec616e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec617c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec618a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec61980"/>
        <function-ref name="get" scoped="" ref="0x7ec61a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec61b40"/>
        <function-ref name="set" scoped="" ref="0x7ec61c20"/>
        <function-ref name="clr" scoped="" ref="0x7ec61d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7ec905e8" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7ec905e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec907c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec908a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec90980"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec90a60"/>
        <function-ref name="get" scoped="" ref="0x7ec90b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec90c20"/>
        <function-ref name="set" scoped="" ref="0x7ec90d00"/>
        <function-ref name="clr" scoped="" ref="0x7ec90de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7ec74808" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7ec74808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec749e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec74ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec74ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec74c80"/>
        <function-ref name="get" scoped="" ref="0x7ec74d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec74e40"/>
        <function-ref name="set" scoped="" ref="0x7ec74f20"/>
        <function-ref name="clr" scoped="" ref="0x7ec73018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7ec63808" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7ec63808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec639e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec63ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec63ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec63c80"/>
        <function-ref name="get" scoped="" ref="0x7ec63d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec63e40"/>
        <function-ref name="set" scoped="" ref="0x7ec63f20"/>
        <function-ref name="clr" scoped="" ref="0x7ec62018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7ec53508" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7ec53508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec536e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec537c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec538a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec53980"/>
        <function-ref name="get" scoped="" ref="0x7ec53a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec53b40"/>
        <function-ref name="set" scoped="" ref="0x7ec53c20"/>
        <function-ref name="clr" scoped="" ref="0x7ec53d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7ecb1010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7ecb1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb11e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ecb12c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ecb13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecb1488"/>
        <function-ref name="get" scoped="" ref="0x7ecb1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecb1648"/>
        <function-ref name="set" scoped="" ref="0x7ecb1728"/>
        <function-ref name="clr" scoped="" ref="0x7ecb1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7eca0188" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7eca0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca0360"/>
        <function-ref name="isInput" scoped="" ref="0x7eca0440"/>
        <function-ref name="toggle" scoped="" ref="0x7eca0520"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca0600"/>
        <function-ref name="get" scoped="" ref="0x7eca06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca07c0"/>
        <function-ref name="set" scoped="" ref="0x7eca08a0"/>
        <function-ref name="clr" scoped="" ref="0x7eca0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7ec83348" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7ec83348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec83520"/>
        <function-ref name="isInput" scoped="" ref="0x7ec83600"/>
        <function-ref name="toggle" scoped="" ref="0x7ec836e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec837c0"/>
        <function-ref name="get" scoped="" ref="0x7ec838a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec83980"/>
        <function-ref name="set" scoped="" ref="0x7ec83a60"/>
        <function-ref name="clr" scoped="" ref="0x7ec83b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7ec72508" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7ec72508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec726e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec727c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec728a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec72980"/>
        <function-ref name="get" scoped="" ref="0x7ec72a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec72b40"/>
        <function-ref name="set" scoped="" ref="0x7ec72c20"/>
        <function-ref name="clr" scoped="" ref="0x7ec72d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7ec506c8" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7ec506c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec508a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec50980"/>
        <function-ref name="toggle" scoped="" ref="0x7ec50a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec50b40"/>
        <function-ref name="get" scoped="" ref="0x7ec50c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec50d00"/>
        <function-ref name="set" scoped="" ref="0x7ec50de0"/>
        <function-ref name="clr" scoped="" ref="0x7ec50ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7ec71808" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7ec71808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec719e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec71ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec71ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec71c80"/>
        <function-ref name="get" scoped="" ref="0x7ec71d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec71e40"/>
        <function-ref name="set" scoped="" ref="0x7ec71f20"/>
        <function-ref name="clr" scoped="" ref="0x7ec70018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7ec81068" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7ec81068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec81240"/>
        <function-ref name="isInput" scoped="" ref="0x7ec81320"/>
        <function-ref name="toggle" scoped="" ref="0x7ec81400"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec814e0"/>
        <function-ref name="get" scoped="" ref="0x7ec815c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec816a0"/>
        <function-ref name="set" scoped="" ref="0x7ec81780"/>
        <function-ref name="clr" scoped="" ref="0x7ec81860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7ecb0cb8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7ecb0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecb0e90"/>
        <function-ref name="isInput" scoped="" ref="0x7eca4010"/>
        <function-ref name="toggle" scoped="" ref="0x7eca40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca41d0"/>
        <function-ref name="get" scoped="" ref="0x7eca42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca4390"/>
        <function-ref name="set" scoped="" ref="0x7eca4470"/>
        <function-ref name="clr" scoped="" ref="0x7eca4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7ec94ef8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7ec94ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec930e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec931c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec932a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec93380"/>
        <function-ref name="get" scoped="" ref="0x7ec93460"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec93540"/>
        <function-ref name="set" scoped="" ref="0x7ec93620"/>
        <function-ref name="clr" scoped="" ref="0x7ec93700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ebd5ba8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ebd5ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebd5d80"/>
        <function-ref name="isInput" scoped="" ref="0x7ebd5e60"/>
        <function-ref name="toggle" scoped="" ref="0x7ebd3010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebd30f0"/>
        <function-ref name="get" scoped="" ref="0x7ebd31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebd32b0"/>
        <function-ref name="set" scoped="" ref="0x7ebd3390"/>
        <function-ref name="clr" scoped="" ref="0x7ebd3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ebd2890" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ebd2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebd2a68"/>
        <function-ref name="isInput" scoped="" ref="0x7ebd2b48"/>
        <function-ref name="toggle" scoped="" ref="0x7ebd2c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebd2d08"/>
        <function-ref name="get" scoped="" ref="0x7ebd2de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebd2ec8"/>
        <function-ref name="set" scoped="" ref="0x7ebd1010"/>
        <function-ref name="clr" scoped="" ref="0x7ebd10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ebe08e0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ebe08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebe0ab8"/>
        <function-ref name="isInput" scoped="" ref="0x7ebe0b98"/>
        <function-ref name="toggle" scoped="" ref="0x7ebe0c78"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebe0d58"/>
        <function-ref name="get" scoped="" ref="0x7ebe0e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebe0f18"/>
        <function-ref name="set" scoped="" ref="0x7ebd5010"/>
        <function-ref name="clr" scoped="" ref="0x7ebd50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ebd35d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ebd35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebd37a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ebd3888"/>
        <function-ref name="toggle" scoped="" ref="0x7ebd3968"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebd3a48"/>
        <function-ref name="get" scoped="" ref="0x7ebd3b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebd3c08"/>
        <function-ref name="set" scoped="" ref="0x7ebd3ce8"/>
        <function-ref name="clr" scoped="" ref="0x7ebd3dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ebd1250" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ebd1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebd1428"/>
        <function-ref name="isInput" scoped="" ref="0x7ebd1508"/>
        <function-ref name="toggle" scoped="" ref="0x7ebd15e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebd16c8"/>
        <function-ref name="get" scoped="" ref="0x7ebd17a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebd1888"/>
        <function-ref name="set" scoped="" ref="0x7ebd1968"/>
        <function-ref name="clr" scoped="" ref="0x7ebd1a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ebd5250" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ebd5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebd5428"/>
        <function-ref name="isInput" scoped="" ref="0x7ebd5508"/>
        <function-ref name="toggle" scoped="" ref="0x7ebd55e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebd56c8"/>
        <function-ref name="get" scoped="" ref="0x7ebd57a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebd5888"/>
        <function-ref name="set" scoped="" ref="0x7ebd5968"/>
        <function-ref name="clr" scoped="" ref="0x7ebd5a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ebd3f28" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ebd3f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebd2110"/>
        <function-ref name="isInput" scoped="" ref="0x7ebd21f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ebd22d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebd23b0"/>
        <function-ref name="get" scoped="" ref="0x7ebd2490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebd2570"/>
        <function-ref name="set" scoped="" ref="0x7ebd2650"/>
        <function-ref name="clr" scoped="" ref="0x7ebd2730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ebd1ba8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ebd1ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebd1d80"/>
        <function-ref name="isInput" scoped="" ref="0x7ebd1e60"/>
        <function-ref name="toggle" scoped="" ref="0x7ebd0010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebd00f0"/>
        <function-ref name="get" scoped="" ref="0x7ebd01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebd02b0"/>
        <function-ref name="set" scoped="" ref="0x7ebd0390"/>
        <function-ref name="clr" scoped="" ref="0x7ebd0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7df0fa30" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7df0fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df0fc08"/>
        <function-ref name="isInput" scoped="" ref="0x7df0fce8"/>
        <function-ref name="toggle" scoped="" ref="0x7df0fdc8"/>
        <function-ref name="isOutput" scoped="" ref="0x7df0fea8"/>
        <function-ref name="get" scoped="" ref="0x7df0e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df0e0f0"/>
        <function-ref name="set" scoped="" ref="0x7df0e1d0"/>
        <function-ref name="clr" scoped="" ref="0x7df0e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7df0d538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7df0d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df0d710"/>
        <function-ref name="isInput" scoped="" ref="0x7df0d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7df0d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df0d9b0"/>
        <function-ref name="get" scoped="" ref="0x7df0da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df0db70"/>
        <function-ref name="set" scoped="" ref="0x7df0dc50"/>
        <function-ref name="clr" scoped="" ref="0x7df0dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7df0b010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7df0b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df0b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7df0b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7df0b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7df0b488"/>
        <function-ref name="get" scoped="" ref="0x7df0b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df0b648"/>
        <function-ref name="set" scoped="" ref="0x7df0b728"/>
        <function-ref name="clr" scoped="" ref="0x7df0b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7df0a9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7df0a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df0abc0"/>
        <function-ref name="isInput" scoped="" ref="0x7df0aca0"/>
        <function-ref name="toggle" scoped="" ref="0x7df0ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x7df0ae60"/>
        <function-ref name="get" scoped="" ref="0x7df09010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df090f0"/>
        <function-ref name="set" scoped="" ref="0x7df091d0"/>
        <function-ref name="clr" scoped="" ref="0x7df092b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7df08538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7df08538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df08710"/>
        <function-ref name="isInput" scoped="" ref="0x7df087f0"/>
        <function-ref name="toggle" scoped="" ref="0x7df088d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df089b0"/>
        <function-ref name="get" scoped="" ref="0x7df08a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df08b70"/>
        <function-ref name="set" scoped="" ref="0x7df08c50"/>
        <function-ref name="clr" scoped="" ref="0x7df08d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7df06010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7df06010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df061e8"/>
        <function-ref name="isInput" scoped="" ref="0x7df062c8"/>
        <function-ref name="toggle" scoped="" ref="0x7df063a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7df06488"/>
        <function-ref name="get" scoped="" ref="0x7df06568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df06648"/>
        <function-ref name="set" scoped="" ref="0x7df06728"/>
        <function-ref name="clr" scoped="" ref="0x7df06808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7df059e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7df059e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df05bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7df05ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7df05d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7df05e60"/>
        <function-ref name="get" scoped="" ref="0x7df04010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df040f0"/>
        <function-ref name="set" scoped="" ref="0x7df041d0"/>
        <function-ref name="clr" scoped="" ref="0x7df042b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7df03538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7df03538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df03710"/>
        <function-ref name="isInput" scoped="" ref="0x7df037f0"/>
        <function-ref name="toggle" scoped="" ref="0x7df038d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df039b0"/>
        <function-ref name="get" scoped="" ref="0x7df03a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df03b70"/>
        <function-ref name="set" scoped="" ref="0x7df03c50"/>
        <function-ref name="clr" scoped="" ref="0x7df03d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ebc2330" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ebc2330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebc2508"/>
        <function-ref name="isInput" scoped="" ref="0x7ebc25e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ebc26c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebc27a8"/>
        <function-ref name="get" scoped="" ref="0x7ebc2888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebc2968"/>
        <function-ref name="set" scoped="" ref="0x7ebc2a48"/>
        <function-ref name="clr" scoped="" ref="0x7ebc2b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ebc0030" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ebc0030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebc0208"/>
        <function-ref name="isInput" scoped="" ref="0x7ebc02e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ebc03c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebc04a8"/>
        <function-ref name="get" scoped="" ref="0x7ebc0588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebc0668"/>
        <function-ref name="set" scoped="" ref="0x7ebc0748"/>
        <function-ref name="clr" scoped="" ref="0x7ebc0828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ebc3010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ebc3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebc31e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ebc32c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ebc33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebc3488"/>
        <function-ref name="get" scoped="" ref="0x7ebc3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebc3648"/>
        <function-ref name="set" scoped="" ref="0x7ebc3728"/>
        <function-ref name="clr" scoped="" ref="0x7ebc3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ebc2c88" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ebc2c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebc2e60"/>
        <function-ref name="isInput" scoped="" ref="0x7ebc1010"/>
        <function-ref name="toggle" scoped="" ref="0x7ebc10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebc11d0"/>
        <function-ref name="get" scoped="" ref="0x7ebc12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebc1390"/>
        <function-ref name="set" scoped="" ref="0x7ebc1470"/>
        <function-ref name="clr" scoped="" ref="0x7ebc1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ebc0988" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ebc0988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebc0b60"/>
        <function-ref name="isInput" scoped="" ref="0x7ebc0c40"/>
        <function-ref name="toggle" scoped="" ref="0x7ebc0d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebc0e00"/>
        <function-ref name="get" scoped="" ref="0x7ebc0ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebb4010"/>
        <function-ref name="set" scoped="" ref="0x7ebb40f0"/>
        <function-ref name="clr" scoped="" ref="0x7ebb41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ebc3968" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ebc3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebc3b40"/>
        <function-ref name="isInput" scoped="" ref="0x7ebc3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ebc3d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebc3de0"/>
        <function-ref name="get" scoped="" ref="0x7ebc3ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebc2010"/>
        <function-ref name="set" scoped="" ref="0x7ebc20f0"/>
        <function-ref name="clr" scoped="" ref="0x7ebc21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ebc16b0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ebc16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebc1888"/>
        <function-ref name="isInput" scoped="" ref="0x7ebc1968"/>
        <function-ref name="toggle" scoped="" ref="0x7ebc1a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebc1b28"/>
        <function-ref name="get" scoped="" ref="0x7ebc1c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebc1ce8"/>
        <function-ref name="set" scoped="" ref="0x7ebc1dc8"/>
        <function-ref name="clr" scoped="" ref="0x7ebc1ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ebb4330" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ebb4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebb4508"/>
        <function-ref name="isInput" scoped="" ref="0x7ebb45e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ebb46c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebb47a8"/>
        <function-ref name="get" scoped="" ref="0x7ebb4888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebb4968"/>
        <function-ref name="set" scoped="" ref="0x7ebb4a48"/>
        <function-ref name="clr" scoped="" ref="0x7ebb4b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dec62b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dec62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dec6488"/>
        <function-ref name="isInput" scoped="" ref="0x7dec6568"/>
        <function-ref name="toggle" scoped="" ref="0x7dec6648"/>
        <function-ref name="isOutput" scoped="" ref="0x7dec6728"/>
        <function-ref name="get" scoped="" ref="0x7dec6808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dec68e8"/>
        <function-ref name="set" scoped="" ref="0x7dec69c8"/>
        <function-ref name="clr" scoped="" ref="0x7dec6aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dec5c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dec5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dec5e50"/>
        <function-ref name="isInput" scoped="" ref="0x7dec4010"/>
        <function-ref name="toggle" scoped="" ref="0x7dec40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dec41d0"/>
        <function-ref name="get" scoped="" ref="0x7dec42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dec4390"/>
        <function-ref name="set" scoped="" ref="0x7dec4470"/>
        <function-ref name="clr" scoped="" ref="0x7dec4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dec3718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dec3718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dec38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7dec39d0"/>
        <function-ref name="toggle" scoped="" ref="0x7dec3ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dec3b90"/>
        <function-ref name="get" scoped="" ref="0x7dec3c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dec3d50"/>
        <function-ref name="set" scoped="" ref="0x7dec3e30"/>
        <function-ref name="clr" scoped="" ref="0x7dec3f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dec10f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dec10f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dec12d0"/>
        <function-ref name="isInput" scoped="" ref="0x7dec13b0"/>
        <function-ref name="toggle" scoped="" ref="0x7dec1490"/>
        <function-ref name="isOutput" scoped="" ref="0x7dec1570"/>
        <function-ref name="get" scoped="" ref="0x7dec1650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dec1730"/>
        <function-ref name="set" scoped="" ref="0x7dec1810"/>
        <function-ref name="clr" scoped="" ref="0x7dec18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dec0ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dec0ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dec0ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7dec0d80"/>
        <function-ref name="toggle" scoped="" ref="0x7dec0e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb5010"/>
        <function-ref name="get" scoped="" ref="0x7deb50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb51d0"/>
        <function-ref name="set" scoped="" ref="0x7deb52b0"/>
        <function-ref name="clr" scoped="" ref="0x7deb5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7deb4570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7deb4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb4748"/>
        <function-ref name="isInput" scoped="" ref="0x7deb4828"/>
        <function-ref name="toggle" scoped="" ref="0x7deb4908"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb49e8"/>
        <function-ref name="get" scoped="" ref="0x7deb4ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb4ba8"/>
        <function-ref name="set" scoped="" ref="0x7deb4c88"/>
        <function-ref name="clr" scoped="" ref="0x7deb4d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7deb2010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7deb2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb21e8"/>
        <function-ref name="isInput" scoped="" ref="0x7deb22c8"/>
        <function-ref name="toggle" scoped="" ref="0x7deb23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb2488"/>
        <function-ref name="get" scoped="" ref="0x7deb2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb2648"/>
        <function-ref name="set" scoped="" ref="0x7deb2728"/>
        <function-ref name="clr" scoped="" ref="0x7deb2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7deb19e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7deb19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7deb1bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7deb1ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7deb1d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7deb1e60"/>
        <function-ref name="get" scoped="" ref="0x7deb0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7deb00f0"/>
        <function-ref name="set" scoped="" ref="0x7deb01d0"/>
        <function-ref name="clr" scoped="" ref="0x7deb02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ebb0968" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ebb0968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebb0b40"/>
        <function-ref name="isInput" scoped="" ref="0x7ebb0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ebb0d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebb0de0"/>
        <function-ref name="get" scoped="" ref="0x7ebb0ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba5010"/>
        <function-ref name="set" scoped="" ref="0x7eba50f0"/>
        <function-ref name="clr" scoped="" ref="0x7eba51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eba46b0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eba46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eba4888"/>
        <function-ref name="isInput" scoped="" ref="0x7eba4968"/>
        <function-ref name="toggle" scoped="" ref="0x7eba4a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7eba4b28"/>
        <function-ref name="get" scoped="" ref="0x7eba4c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba4ce8"/>
        <function-ref name="set" scoped="" ref="0x7eba4dc8"/>
        <function-ref name="clr" scoped="" ref="0x7eba4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ebb1680" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ebb1680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebb1858"/>
        <function-ref name="isInput" scoped="" ref="0x7ebb1938"/>
        <function-ref name="toggle" scoped="" ref="0x7ebb1a18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebb1af8"/>
        <function-ref name="get" scoped="" ref="0x7ebb1bd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebb1cb8"/>
        <function-ref name="set" scoped="" ref="0x7ebb1d98"/>
        <function-ref name="clr" scoped="" ref="0x7ebb1e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7eba5330" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7eba5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eba5508"/>
        <function-ref name="isInput" scoped="" ref="0x7eba55e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eba56c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eba57a8"/>
        <function-ref name="get" scoped="" ref="0x7eba5888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba5968"/>
        <function-ref name="set" scoped="" ref="0x7eba5a48"/>
        <function-ref name="clr" scoped="" ref="0x7eba5b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eba3030" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eba3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eba3208"/>
        <function-ref name="isInput" scoped="" ref="0x7eba32e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eba33c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eba34a8"/>
        <function-ref name="get" scoped="" ref="0x7eba3588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba3668"/>
        <function-ref name="set" scoped="" ref="0x7eba3748"/>
        <function-ref name="clr" scoped="" ref="0x7eba3828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ebb0010" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ebb0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebb01e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ebb02c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ebb03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebb0488"/>
        <function-ref name="get" scoped="" ref="0x7ebb0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebb0648"/>
        <function-ref name="set" scoped="" ref="0x7ebb0728"/>
        <function-ref name="clr" scoped="" ref="0x7ebb0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eba5c88" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eba5c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eba5e60"/>
        <function-ref name="isInput" scoped="" ref="0x7eba4010"/>
        <function-ref name="toggle" scoped="" ref="0x7eba40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eba41d0"/>
        <function-ref name="get" scoped="" ref="0x7eba42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba4390"/>
        <function-ref name="set" scoped="" ref="0x7eba4470"/>
        <function-ref name="clr" scoped="" ref="0x7eba4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eba3988" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eba3988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eba3b60"/>
        <function-ref name="isInput" scoped="" ref="0x7eba3c40"/>
        <function-ref name="toggle" scoped="" ref="0x7eba3d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7eba3e00"/>
        <function-ref name="get" scoped="" ref="0x7eba3ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba2010"/>
        <function-ref name="set" scoped="" ref="0x7eba20f0"/>
        <function-ref name="clr" scoped="" ref="0x7eba21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de757f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de757f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de759d0"/>
        <function-ref name="isInput" scoped="" ref="0x7de75ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7de75b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7de75c70"/>
        <function-ref name="get" scoped="" ref="0x7de75d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de75e30"/>
        <function-ref name="set" scoped="" ref="0x7de75f10"/>
        <function-ref name="clr" scoped="" ref="0x7de74010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de73228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de73228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de73400"/>
        <function-ref name="isInput" scoped="" ref="0x7de734e0"/>
        <function-ref name="toggle" scoped="" ref="0x7de735c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de736a0"/>
        <function-ref name="get" scoped="" ref="0x7de73780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de73860"/>
        <function-ref name="set" scoped="" ref="0x7de73940"/>
        <function-ref name="clr" scoped="" ref="0x7de73a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de72c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de72c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de72de0"/>
        <function-ref name="isInput" scoped="" ref="0x7de72ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7de71010"/>
        <function-ref name="isOutput" scoped="" ref="0x7de710f0"/>
        <function-ref name="get" scoped="" ref="0x7de711d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de712b0"/>
        <function-ref name="set" scoped="" ref="0x7de71390"/>
        <function-ref name="clr" scoped="" ref="0x7de71470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de706c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de706c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de70898"/>
        <function-ref name="isInput" scoped="" ref="0x7de70978"/>
        <function-ref name="toggle" scoped="" ref="0x7de70a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7de70b38"/>
        <function-ref name="get" scoped="" ref="0x7de70c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de70cf8"/>
        <function-ref name="set" scoped="" ref="0x7de70dd8"/>
        <function-ref name="clr" scoped="" ref="0x7de70eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de6e0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de6e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de6e288"/>
        <function-ref name="isInput" scoped="" ref="0x7de6e368"/>
        <function-ref name="toggle" scoped="" ref="0x7de6e448"/>
        <function-ref name="isOutput" scoped="" ref="0x7de6e528"/>
        <function-ref name="get" scoped="" ref="0x7de6e608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de6e6e8"/>
        <function-ref name="set" scoped="" ref="0x7de6e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7de6e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de6ca88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de6ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de6cc60"/>
        <function-ref name="isInput" scoped="" ref="0x7de6cd40"/>
        <function-ref name="toggle" scoped="" ref="0x7de6ce20"/>
        <function-ref name="isOutput" scoped="" ref="0x7de6cf00"/>
        <function-ref name="get" scoped="" ref="0x7de6b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de6b0f0"/>
        <function-ref name="set" scoped="" ref="0x7de6b1d0"/>
        <function-ref name="clr" scoped="" ref="0x7de6b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de6a538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de6a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de6a710"/>
        <function-ref name="isInput" scoped="" ref="0x7de6a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7de6a8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de6a9b0"/>
        <function-ref name="get" scoped="" ref="0x7de6aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de6ab70"/>
        <function-ref name="set" scoped="" ref="0x7de6ac50"/>
        <function-ref name="clr" scoped="" ref="0x7de6ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de68010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de68010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de681e8"/>
        <function-ref name="isInput" scoped="" ref="0x7de682c8"/>
        <function-ref name="toggle" scoped="" ref="0x7de683a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de68488"/>
        <function-ref name="get" scoped="" ref="0x7de68568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de68648"/>
        <function-ref name="set" scoped="" ref="0x7de68728"/>
        <function-ref name="clr" scoped="" ref="0x7de68808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7eb93030" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7eb93030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb93208"/>
        <function-ref name="isInput" scoped="" ref="0x7eb932e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb933c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb934a8"/>
        <function-ref name="get" scoped="" ref="0x7eb93588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb93668"/>
        <function-ref name="set" scoped="" ref="0x7eb93748"/>
        <function-ref name="clr" scoped="" ref="0x7eb93828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eb92c88" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eb92c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb92e60"/>
        <function-ref name="isInput" scoped="" ref="0x7eb91010"/>
        <function-ref name="toggle" scoped="" ref="0x7eb910f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb911d0"/>
        <function-ref name="get" scoped="" ref="0x7eb912b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb91390"/>
        <function-ref name="set" scoped="" ref="0x7eb91470"/>
        <function-ref name="clr" scoped="" ref="0x7eb91550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7eb95d10" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7eb95d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb95ee8"/>
        <function-ref name="isInput" scoped="" ref="0x7eb94010"/>
        <function-ref name="toggle" scoped="" ref="0x7eb940f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb941d0"/>
        <function-ref name="get" scoped="" ref="0x7eb942b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb94390"/>
        <function-ref name="set" scoped="" ref="0x7eb94470"/>
        <function-ref name="clr" scoped="" ref="0x7eb94550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7eb93988" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7eb93988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb93b60"/>
        <function-ref name="isInput" scoped="" ref="0x7eb93c40"/>
        <function-ref name="toggle" scoped="" ref="0x7eb93d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb93e00"/>
        <function-ref name="get" scoped="" ref="0x7eb93ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb92010"/>
        <function-ref name="set" scoped="" ref="0x7eb920f0"/>
        <function-ref name="clr" scoped="" ref="0x7eb921d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eb916b0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eb916b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb91888"/>
        <function-ref name="isInput" scoped="" ref="0x7eb91968"/>
        <function-ref name="toggle" scoped="" ref="0x7eb91a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb91b28"/>
        <function-ref name="get" scoped="" ref="0x7eb91c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb91ce8"/>
        <function-ref name="set" scoped="" ref="0x7eb91dc8"/>
        <function-ref name="clr" scoped="" ref="0x7eb91ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7eb946b0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7eb946b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb94888"/>
        <function-ref name="isInput" scoped="" ref="0x7eb94968"/>
        <function-ref name="toggle" scoped="" ref="0x7eb94a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb94b28"/>
        <function-ref name="get" scoped="" ref="0x7eb94c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb94ce8"/>
        <function-ref name="set" scoped="" ref="0x7eb94dc8"/>
        <function-ref name="clr" scoped="" ref="0x7eb94ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eb92330" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eb92330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb92508"/>
        <function-ref name="isInput" scoped="" ref="0x7eb925e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb926c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb927a8"/>
        <function-ref name="get" scoped="" ref="0x7eb92888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb92968"/>
        <function-ref name="set" scoped="" ref="0x7eb92a48"/>
        <function-ref name="clr" scoped="" ref="0x7eb92b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eb90030" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eb90030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb90208"/>
        <function-ref name="isInput" scoped="" ref="0x7eb902e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb903c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb904a8"/>
        <function-ref name="get" scoped="" ref="0x7eb90588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb90668"/>
        <function-ref name="set" scoped="" ref="0x7eb90748"/>
        <function-ref name="clr" scoped="" ref="0x7eb90828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de30d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de30d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de30ee0"/>
        <function-ref name="isInput" scoped="" ref="0x7de2d010"/>
        <function-ref name="toggle" scoped="" ref="0x7de2d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de2d1d0"/>
        <function-ref name="get" scoped="" ref="0x7de2d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de2d390"/>
        <function-ref name="set" scoped="" ref="0x7de2d470"/>
        <function-ref name="clr" scoped="" ref="0x7de2d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de2c718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de2c718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de2c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7de2c9d0"/>
        <function-ref name="toggle" scoped="" ref="0x7de2cab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de2cb90"/>
        <function-ref name="get" scoped="" ref="0x7de2cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de2cd50"/>
        <function-ref name="set" scoped="" ref="0x7de2ce30"/>
        <function-ref name="clr" scoped="" ref="0x7de2cf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de2a0f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de2a0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de2a2d0"/>
        <function-ref name="isInput" scoped="" ref="0x7de2a3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7de2a490"/>
        <function-ref name="isOutput" scoped="" ref="0x7de2a570"/>
        <function-ref name="get" scoped="" ref="0x7de2a650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de2a730"/>
        <function-ref name="set" scoped="" ref="0x7de2a810"/>
        <function-ref name="clr" scoped="" ref="0x7de2a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de29ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de29ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de29ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7de29d80"/>
        <function-ref name="toggle" scoped="" ref="0x7de29e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7de28010"/>
        <function-ref name="get" scoped="" ref="0x7de280f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de281d0"/>
        <function-ref name="set" scoped="" ref="0x7de282b0"/>
        <function-ref name="clr" scoped="" ref="0x7de28390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de27570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de27570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de27748"/>
        <function-ref name="isInput" scoped="" ref="0x7de27828"/>
        <function-ref name="toggle" scoped="" ref="0x7de27908"/>
        <function-ref name="isOutput" scoped="" ref="0x7de279e8"/>
        <function-ref name="get" scoped="" ref="0x7de27ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de27ba8"/>
        <function-ref name="set" scoped="" ref="0x7de27c88"/>
        <function-ref name="clr" scoped="" ref="0x7de27d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de25010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de25010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de251e8"/>
        <function-ref name="isInput" scoped="" ref="0x7de252c8"/>
        <function-ref name="toggle" scoped="" ref="0x7de253a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de25488"/>
        <function-ref name="get" scoped="" ref="0x7de25568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de25648"/>
        <function-ref name="set" scoped="" ref="0x7de25728"/>
        <function-ref name="clr" scoped="" ref="0x7de25808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de249e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de249e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de24bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7de24ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7de24d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7de24e60"/>
        <function-ref name="get" scoped="" ref="0x7de23010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de230f0"/>
        <function-ref name="set" scoped="" ref="0x7de231d0"/>
        <function-ref name="clr" scoped="" ref="0x7de232b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de22538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de22538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de22710"/>
        <function-ref name="isInput" scoped="" ref="0x7de227f0"/>
        <function-ref name="toggle" scoped="" ref="0x7de228d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de229b0"/>
        <function-ref name="get" scoped="" ref="0x7de22a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de22b70"/>
        <function-ref name="set" scoped="" ref="0x7de22c50"/>
        <function-ref name="clr" scoped="" ref="0x7de22d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7eb816b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7eb816b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb81888"/>
        <function-ref name="isInput" scoped="" ref="0x7eb81968"/>
        <function-ref name="toggle" scoped="" ref="0x7eb81a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb81b28"/>
        <function-ref name="get" scoped="" ref="0x7eb81c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb81ce8"/>
        <function-ref name="set" scoped="" ref="0x7eb81dc8"/>
        <function-ref name="clr" scoped="" ref="0x7eb81ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eb75330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eb75330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb75508"/>
        <function-ref name="isInput" scoped="" ref="0x7eb755e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb756c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb757a8"/>
        <function-ref name="get" scoped="" ref="0x7eb75888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb75968"/>
        <function-ref name="set" scoped="" ref="0x7eb75a48"/>
        <function-ref name="clr" scoped="" ref="0x7eb75b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7eb823a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7eb823a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb82578"/>
        <function-ref name="isInput" scoped="" ref="0x7eb82658"/>
        <function-ref name="toggle" scoped="" ref="0x7eb82738"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb82818"/>
        <function-ref name="get" scoped="" ref="0x7eb828f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb829d8"/>
        <function-ref name="set" scoped="" ref="0x7eb82ab8"/>
        <function-ref name="clr" scoped="" ref="0x7eb82b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7eb80030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7eb80030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb80208"/>
        <function-ref name="isInput" scoped="" ref="0x7eb802e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb803c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb804a8"/>
        <function-ref name="get" scoped="" ref="0x7eb80588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb80668"/>
        <function-ref name="set" scoped="" ref="0x7eb80748"/>
        <function-ref name="clr" scoped="" ref="0x7eb80828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eb75c88" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eb75c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb75e60"/>
        <function-ref name="isInput" scoped="" ref="0x7eb74010"/>
        <function-ref name="toggle" scoped="" ref="0x7eb740f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb741d0"/>
        <function-ref name="get" scoped="" ref="0x7eb742b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb74390"/>
        <function-ref name="set" scoped="" ref="0x7eb74470"/>
        <function-ref name="clr" scoped="" ref="0x7eb74550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7eb82cf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7eb82cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb82ed0"/>
        <function-ref name="isInput" scoped="" ref="0x7eb81010"/>
        <function-ref name="toggle" scoped="" ref="0x7eb810f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb811d0"/>
        <function-ref name="get" scoped="" ref="0x7eb812b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb81390"/>
        <function-ref name="set" scoped="" ref="0x7eb81470"/>
        <function-ref name="clr" scoped="" ref="0x7eb81550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eb80988" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eb80988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb80b60"/>
        <function-ref name="isInput" scoped="" ref="0x7eb80c40"/>
        <function-ref name="toggle" scoped="" ref="0x7eb80d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb80e00"/>
        <function-ref name="get" scoped="" ref="0x7eb80ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb75010"/>
        <function-ref name="set" scoped="" ref="0x7eb750f0"/>
        <function-ref name="clr" scoped="" ref="0x7eb751d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eb746b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eb746b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb74888"/>
        <function-ref name="isInput" scoped="" ref="0x7eb74968"/>
        <function-ref name="toggle" scoped="" ref="0x7eb74a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb74b28"/>
        <function-ref name="get" scoped="" ref="0x7eb74c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb74ce8"/>
        <function-ref name="set" scoped="" ref="0x7eb74dc8"/>
        <function-ref name="clr" scoped="" ref="0x7eb74ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dde6010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dde6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dde61e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dde62c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dde63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dde6488"/>
        <function-ref name="get" scoped="" ref="0x7dde6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dde6648"/>
        <function-ref name="set" scoped="" ref="0x7dde6728"/>
        <function-ref name="clr" scoped="" ref="0x7dde6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dde59e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dde59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dde5bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7dde5ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7dde5d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7dde5e60"/>
        <function-ref name="get" scoped="" ref="0x7dde4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dde40f0"/>
        <function-ref name="set" scoped="" ref="0x7dde41d0"/>
        <function-ref name="clr" scoped="" ref="0x7dde42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dde3538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dde3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dde3710"/>
        <function-ref name="isInput" scoped="" ref="0x7dde37f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dde38d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dde39b0"/>
        <function-ref name="get" scoped="" ref="0x7dde3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dde3b70"/>
        <function-ref name="set" scoped="" ref="0x7dde3c50"/>
        <function-ref name="clr" scoped="" ref="0x7dde3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dde1010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dde1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dde11e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dde12c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dde13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dde1488"/>
        <function-ref name="get" scoped="" ref="0x7dde1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dde1648"/>
        <function-ref name="set" scoped="" ref="0x7dde1728"/>
        <function-ref name="clr" scoped="" ref="0x7dde1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dde09e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dde09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dde0bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7dde0ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7dde0d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7dde0e60"/>
        <function-ref name="get" scoped="" ref="0x7ddd6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd60f0"/>
        <function-ref name="set" scoped="" ref="0x7ddd61d0"/>
        <function-ref name="clr" scoped="" ref="0x7ddd62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddd5538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddd5538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd5710"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd57f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd58d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd59b0"/>
        <function-ref name="get" scoped="" ref="0x7ddd5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd5b70"/>
        <function-ref name="set" scoped="" ref="0x7ddd5c50"/>
        <function-ref name="clr" scoped="" ref="0x7ddd5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddd3010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddd3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd31e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd32c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd3488"/>
        <function-ref name="get" scoped="" ref="0x7ddd3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd3648"/>
        <function-ref name="set" scoped="" ref="0x7ddd3728"/>
        <function-ref name="clr" scoped="" ref="0x7ddd3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddd29e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddd29e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd2bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd2ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd2d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd2e60"/>
        <function-ref name="get" scoped="" ref="0x7ddd1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd10f0"/>
        <function-ref name="set" scoped="" ref="0x7ddd11d0"/>
        <function-ref name="clr" scoped="" ref="0x7ddd12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7eb70c88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7eb70c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb70e60"/>
        <function-ref name="isInput" scoped="" ref="0x7eb64010"/>
        <function-ref name="toggle" scoped="" ref="0x7eb640f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb641d0"/>
        <function-ref name="get" scoped="" ref="0x7eb642b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb64390"/>
        <function-ref name="set" scoped="" ref="0x7eb64470"/>
        <function-ref name="clr" scoped="" ref="0x7eb64550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eb63988" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eb63988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb63b60"/>
        <function-ref name="isInput" scoped="" ref="0x7eb63c40"/>
        <function-ref name="toggle" scoped="" ref="0x7eb63d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb63e00"/>
        <function-ref name="get" scoped="" ref="0x7eb63ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb62010"/>
        <function-ref name="set" scoped="" ref="0x7eb620f0"/>
        <function-ref name="clr" scoped="" ref="0x7eb621d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7eb719c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7eb719c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb71b98"/>
        <function-ref name="isInput" scoped="" ref="0x7eb71c78"/>
        <function-ref name="toggle" scoped="" ref="0x7eb71d58"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb71e38"/>
        <function-ref name="get" scoped="" ref="0x7eb71f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb70010"/>
        <function-ref name="set" scoped="" ref="0x7eb700f0"/>
        <function-ref name="clr" scoped="" ref="0x7eb701d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7eb646b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7eb646b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb64888"/>
        <function-ref name="isInput" scoped="" ref="0x7eb64968"/>
        <function-ref name="toggle" scoped="" ref="0x7eb64a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb64b28"/>
        <function-ref name="get" scoped="" ref="0x7eb64c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb64ce8"/>
        <function-ref name="set" scoped="" ref="0x7eb64dc8"/>
        <function-ref name="clr" scoped="" ref="0x7eb64ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eb62330" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eb62330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb62508"/>
        <function-ref name="isInput" scoped="" ref="0x7eb625e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb626c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb627a8"/>
        <function-ref name="get" scoped="" ref="0x7eb62888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb62968"/>
        <function-ref name="set" scoped="" ref="0x7eb62a48"/>
        <function-ref name="clr" scoped="" ref="0x7eb62b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7eb70330" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7eb70330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb70508"/>
        <function-ref name="isInput" scoped="" ref="0x7eb705e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb706c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb707a8"/>
        <function-ref name="get" scoped="" ref="0x7eb70888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb70968"/>
        <function-ref name="set" scoped="" ref="0x7eb70a48"/>
        <function-ref name="clr" scoped="" ref="0x7eb70b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eb63030" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eb63030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb63208"/>
        <function-ref name="isInput" scoped="" ref="0x7eb632e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb633c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb634a8"/>
        <function-ref name="get" scoped="" ref="0x7eb63588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb63668"/>
        <function-ref name="set" scoped="" ref="0x7eb63748"/>
        <function-ref name="clr" scoped="" ref="0x7eb63828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eb62c88" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eb62c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb62e60"/>
        <function-ref name="isInput" scoped="" ref="0x7eb61010"/>
        <function-ref name="toggle" scoped="" ref="0x7eb610f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb611d0"/>
        <function-ref name="get" scoped="" ref="0x7eb612b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb61390"/>
        <function-ref name="set" scoped="" ref="0x7eb61470"/>
        <function-ref name="clr" scoped="" ref="0x7eb61550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dda17f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dda17f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dda19d0"/>
        <function-ref name="isInput" scoped="" ref="0x7dda1ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7dda1b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7dda1c70"/>
        <function-ref name="get" scoped="" ref="0x7dda1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dda1e30"/>
        <function-ref name="set" scoped="" ref="0x7dda1f10"/>
        <function-ref name="clr" scoped="" ref="0x7dda0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd97228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd97228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd97400"/>
        <function-ref name="isInput" scoped="" ref="0x7dd974e0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd975c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd976a0"/>
        <function-ref name="get" scoped="" ref="0x7dd97780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd97860"/>
        <function-ref name="set" scoped="" ref="0x7dd97940"/>
        <function-ref name="clr" scoped="" ref="0x7dd97a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd96c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd96c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd96de0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd96ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd95010"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd950f0"/>
        <function-ref name="get" scoped="" ref="0x7dd951d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd952b0"/>
        <function-ref name="set" scoped="" ref="0x7dd95390"/>
        <function-ref name="clr" scoped="" ref="0x7dd95470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd946c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd946c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd94898"/>
        <function-ref name="isInput" scoped="" ref="0x7dd94978"/>
        <function-ref name="toggle" scoped="" ref="0x7dd94a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd94b38"/>
        <function-ref name="get" scoped="" ref="0x7dd94c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd94cf8"/>
        <function-ref name="set" scoped="" ref="0x7dd94dd8"/>
        <function-ref name="clr" scoped="" ref="0x7dd94eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd920b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd920b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd92288"/>
        <function-ref name="isInput" scoped="" ref="0x7dd92368"/>
        <function-ref name="toggle" scoped="" ref="0x7dd92448"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd92528"/>
        <function-ref name="get" scoped="" ref="0x7dd92608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd926e8"/>
        <function-ref name="set" scoped="" ref="0x7dd927c8"/>
        <function-ref name="clr" scoped="" ref="0x7dd928a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd90a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd90a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd90c60"/>
        <function-ref name="isInput" scoped="" ref="0x7dd90d40"/>
        <function-ref name="toggle" scoped="" ref="0x7dd90e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd90f00"/>
        <function-ref name="get" scoped="" ref="0x7dd8f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd8f0f0"/>
        <function-ref name="set" scoped="" ref="0x7dd8f1d0"/>
        <function-ref name="clr" scoped="" ref="0x7dd8f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd8e538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd8e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd8e710"/>
        <function-ref name="isInput" scoped="" ref="0x7dd8e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd8e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd8e9b0"/>
        <function-ref name="get" scoped="" ref="0x7dd8ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd8eb70"/>
        <function-ref name="set" scoped="" ref="0x7dd8ec50"/>
        <function-ref name="clr" scoped="" ref="0x7dd8ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd8c010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd8c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd8c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dd8c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dd8c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd8c488"/>
        <function-ref name="get" scoped="" ref="0x7dd8c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd8c648"/>
        <function-ref name="set" scoped="" ref="0x7dd8c728"/>
        <function-ref name="clr" scoped="" ref="0x7dd8c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb533e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb533e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb535c0"/>
        <function-ref name="isInput" scoped="" ref="0x7eb536a0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb53780"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb53860"/>
        <function-ref name="get" scoped="" ref="0x7eb53940"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb53a20"/>
        <function-ref name="set" scoped="" ref="0x7eb53b00"/>
        <function-ref name="clr" scoped="" ref="0x7eb53be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb327a8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb327a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb32980"/>
        <function-ref name="isInput" scoped="" ref="0x7eb32a60"/>
        <function-ref name="toggle" scoped="" ref="0x7eb32b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb32c20"/>
        <function-ref name="get" scoped="" ref="0x7eb32d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb32de0"/>
        <function-ref name="set" scoped="" ref="0x7eb32ec0"/>
        <function-ref name="clr" scoped="" ref="0x7eb31010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb25bc0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb25bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb25d98"/>
        <function-ref name="isInput" scoped="" ref="0x7eb25e78"/>
        <function-ref name="toggle" scoped="" ref="0x7eb24010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb240f0"/>
        <function-ref name="get" scoped="" ref="0x7eb241d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb242b0"/>
        <function-ref name="set" scoped="" ref="0x7eb24390"/>
        <function-ref name="clr" scoped="" ref="0x7eb24470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb22030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb22030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb22208"/>
        <function-ref name="isInput" scoped="" ref="0x7eb222e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb223c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb224a8"/>
        <function-ref name="get" scoped="" ref="0x7eb22588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb22668"/>
        <function-ref name="set" scoped="" ref="0x7eb22748"/>
        <function-ref name="clr" scoped="" ref="0x7eb22828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb20418" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb20418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb205f0"/>
        <function-ref name="isInput" scoped="" ref="0x7eb206d0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb207b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb20890"/>
        <function-ref name="get" scoped="" ref="0x7eb20970"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb20a50"/>
        <function-ref name="set" scoped="" ref="0x7eb20b30"/>
        <function-ref name="clr" scoped="" ref="0x7eb20c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb137f8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb137f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb139d0"/>
        <function-ref name="isInput" scoped="" ref="0x7eb13ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb13b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb13c70"/>
        <function-ref name="get" scoped="" ref="0x7eb13d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb13e30"/>
        <function-ref name="set" scoped="" ref="0x7eb13f10"/>
        <function-ref name="clr" scoped="" ref="0x7eb12010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb11c40" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb11c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb11e18"/>
        <function-ref name="isInput" scoped="" ref="0x7eb11ef8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb10010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb100f0"/>
        <function-ref name="get" scoped="" ref="0x7eb101d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb102b0"/>
        <function-ref name="set" scoped="" ref="0x7eb10390"/>
        <function-ref name="clr" scoped="" ref="0x7eb10470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb03030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb03030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb03208"/>
        <function-ref name="isInput" scoped="" ref="0x7eb032e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb033c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb034a8"/>
        <function-ref name="get" scoped="" ref="0x7eb03588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb03668"/>
        <function-ref name="set" scoped="" ref="0x7eb03748"/>
        <function-ref name="clr" scoped="" ref="0x7eb03828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb013b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb013b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb01588"/>
        <function-ref name="isInput" scoped="" ref="0x7eb01668"/>
        <function-ref name="toggle" scoped="" ref="0x7eb01748"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb01828"/>
        <function-ref name="get" scoped="" ref="0x7eb01908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb019e8"/>
        <function-ref name="set" scoped="" ref="0x7eb01ac8"/>
        <function-ref name="clr" scoped="" ref="0x7eb01ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eaf56c0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eaf56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eaf5898"/>
        <function-ref name="isInput" scoped="" ref="0x7eaf5978"/>
        <function-ref name="toggle" scoped="" ref="0x7eaf5a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7eaf5b38"/>
        <function-ref name="get" scoped="" ref="0x7eaf5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eaf5cf8"/>
        <function-ref name="set" scoped="" ref="0x7eaf5dd8"/>
        <function-ref name="clr" scoped="" ref="0x7eaf5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eaf2998" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eaf2998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eaf2b70"/>
        <function-ref name="isInput" scoped="" ref="0x7eaf2c50"/>
        <function-ref name="toggle" scoped="" ref="0x7eaf2d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7eaf2e10"/>
        <function-ref name="get" scoped="" ref="0x7eaf2ef0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eaf1010"/>
        <function-ref name="set" scoped="" ref="0x7eaf10f0"/>
        <function-ref name="clr" scoped="" ref="0x7eaf11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eaf0cb8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eaf0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eaf0e90"/>
        <function-ref name="isInput" scoped="" ref="0x7eae6010"/>
        <function-ref name="toggle" scoped="" ref="0x7eae60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eae61d0"/>
        <function-ref name="get" scoped="" ref="0x7eae62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eae6390"/>
        <function-ref name="set" scoped="" ref="0x7eae6470"/>
        <function-ref name="clr" scoped="" ref="0x7eae6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eae3050" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eae3050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eae3228"/>
        <function-ref name="isInput" scoped="" ref="0x7eae3308"/>
        <function-ref name="toggle" scoped="" ref="0x7eae33e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eae34c8"/>
        <function-ref name="get" scoped="" ref="0x7eae35a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eae3688"/>
        <function-ref name="set" scoped="" ref="0x7eae3768"/>
        <function-ref name="clr" scoped="" ref="0x7eae3848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ed21e38" loc="49:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7ed21e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ea86050"/>
        <function-ref name="stopDone" scoped="" ref="0x7ea86130"/>
        <function-ref name="start" scoped="" ref="0x7ea86210"/>
        <function-ref name="stop" scoped="" ref="0x7ea862f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ea866c8" loc="51:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7ea866c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ea868a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea86980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea86a60"/>
        <function-ref name="cancel" scoped="" ref="0x7ea86b40"/>
        <function-ref name="sendDone" scoped="" ref="0x7ea86c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ea857a8" loc="53:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7ea857a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7ea85980"/>
        <function-ref name="receive" scoped="" ref="0x7ea85a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea85b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ea85c88" loc="55:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7ea85c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ea85e60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ea84010"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea840f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea841d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ea842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ea85010" loc="52:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7ea85010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7ea851e8"/>
        <function-ref name="receive" scoped="" ref="0x7ea852c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea853a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ea81010" loc="57:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ea81010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ea811e8"/>
        <function-ref name="noAck" scoped="" ref="0x7ea812c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ea813a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ea84400" loc="56:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7ea84400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7ea845d8"/>
        <function-ref name="address" scoped="" ref="0x7ea846b8"/>
        <function-ref name="destination" scoped="" ref="0x7ea84798"/>
        <function-ref name="setSource" scoped="" ref="0x7ea84878"/>
        <function-ref name="setDestination" scoped="" ref="0x7ea84958"/>
        <function-ref name="type" scoped="" ref="0x7ea84a38"/>
        <function-ref name="setType" scoped="" ref="0x7ea84b18"/>
        <function-ref name="isForMe" scoped="" ref="0x7ea84bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ea72970" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7ea72970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ea72b48"/>
        <function-ref name="stopDone" scoped="" ref="0x7ea72c28"/>
        <function-ref name="start" scoped="" ref="0x7ea72d08"/>
        <function-ref name="stop" scoped="" ref="0x7ea72de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ea711e8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7ea711e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ea713c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea714a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea71580"/>
        <function-ref name="cancel" scoped="" ref="0x7ea71660"/>
        <function-ref name="sendDone" scoped="" ref="0x7ea71740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ea702c0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7ea702c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7ea70498"/>
        <function-ref name="receive" scoped="" ref="0x7ea70578"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea70658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ea66158" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7ea66158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ea66330"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ea66410"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea664f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea665d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ea666b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ea60c50" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7ea60c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ea60e28"/>
        <function-ref name="getRssi" scoped="" ref="0x7ea60f08"/>
        <function-ref name="getPower" scoped="" ref="0x7ea64010"/>
        <function-ref name="getLqi" scoped="" ref="0x7ea640f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ea71b18" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7ea71b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7ea71cf0"/>
        <function-ref name="receive" scoped="" ref="0x7ea71dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea71eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ea64248" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ea64248"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ea64420"/>
        <function-ref name="noAck" scoped="" ref="0x7ea64500"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ea645e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ea707a8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7ea707a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7ea70980"/>
        <function-ref name="address" scoped="" ref="0x7ea70a60"/>
        <function-ref name="destination" scoped="" ref="0x7ea70b40"/>
        <function-ref name="setSource" scoped="" ref="0x7ea70c20"/>
        <function-ref name="setDestination" scoped="" ref="0x7ea70d00"/>
        <function-ref name="type" scoped="" ref="0x7ea70de0"/>
        <function-ref name="setType" scoped="" ref="0x7ea70ec0"/>
        <function-ref name="isForMe" scoped="" ref="0x7ea66010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ea416c8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7ea416c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ea418a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea41980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea41a60"/>
        <function-ref name="cancel" scoped="" ref="0x7ea41b40"/>
        <function-ref name="sendDone" scoped="" ref="0x7ea41c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ea41d98" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7ea41d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7ea45010"/>
        <function-ref name="receive" scoped="" ref="0x7ea450f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea451d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ea548f8" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7ea548f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ea54ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea54bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea54c90"/>
        <function-ref name="cancel" scoped="" ref="0x7ea54d70"/>
        <function-ref name="sendDone" scoped="" ref="0x7ea54e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ea539f0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7ea539f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7ea53bc8"/>
        <function-ref name="receive" scoped="" ref="0x7ea53ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea53d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ea51828" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7ea51828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ea51a00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ea51ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea51bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ea51ca0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ea51d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ea53258" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7ea53258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7ea53430"/>
        <function-ref name="receive" scoped="" ref="0x7ea53510"/>
        <function-ref name="getPayload" scoped="" ref="0x7ea535f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ea53ed8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7ea53ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7ea510c0"/>
        <function-ref name="address" scoped="" ref="0x7ea511a0"/>
        <function-ref name="destination" scoped="" ref="0x7ea51280"/>
        <function-ref name="setSource" scoped="" ref="0x7ea51360"/>
        <function-ref name="setDestination" scoped="" ref="0x7ea51440"/>
        <function-ref name="type" scoped="" ref="0x7ea51520"/>
        <function-ref name="setType" scoped="" ref="0x7ea51600"/>
        <function-ref name="isForMe" scoped="" ref="0x7ea516e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e9d6010" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e9d6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e9d61e8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e9d62c8"/>
        <function-ref name="start" scoped="" ref="0x7e9d63a8"/>
        <function-ref name="stop" scoped="" ref="0x7e9d6488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e9d65f0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e9d65f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e9d67c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e9d68a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e9d6988"/>
        <function-ref name="cancel" scoped="" ref="0x7e9d6a68"/>
        <function-ref name="sendDone" scoped="" ref="0x7e9d6b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e9d6cb0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e9d6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e9d6e88"/>
        <function-ref name="receive" scoped="" ref="0x7e9d5010"/>
        <function-ref name="getPayload" scoped="" ref="0x7e9d50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e9d5260" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e9d5260"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e9d5438"/>
        <function-ref name="address" scoped="" ref="0x7e9d5518"/>
        <function-ref name="destination" scoped="" ref="0x7e9d55f8"/>
        <function-ref name="setSource" scoped="" ref="0x7e9d56d8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e9d57b8"/>
        <function-ref name="type" scoped="" ref="0x7e9d5898"/>
        <function-ref name="setType" scoped="" ref="0x7e9d5978"/>
        <function-ref name="isForMe" scoped="" ref="0x7e9d5a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e9d3cd8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e9d3cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e9d3eb0"/>
        <function-ref name="stopDone" scoped="" ref="0x7e9d0010"/>
        <function-ref name="start" scoped="" ref="0x7e9d00f0"/>
        <function-ref name="stop" scoped="" ref="0x7e9d01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7e9a25e0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7e9a25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e9a27b8"/>
        <function-ref name="cancel" scoped="" ref="0x7e9a2898"/>
        <function-ref name="modify" scoped="" ref="0x7e9a2978"/>
        <function-ref name="sendDone" scoped="" ref="0x7e9a2a58"/>
        <function-ref name="resendCCA" scoped="" ref="0x7e9a2b38"/>
        <function-ref name="resend" scoped="" ref="0x7e9a2c18"/>
        <function-ref name="sendCCA" scoped="" ref="0x7e9a2cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e9d0338" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e9d0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e9d0510"/>
        <function-ref name="getPayload" scoped="" ref="0x7e9d05f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e9d06d0"/>
        <function-ref name="cancel" scoped="" ref="0x7e9d07b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e9d0890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e995e00" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e995e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e9a0010"/>
        <function-ref name="rand32" scoped="" ref="0x7e9a00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e9d3990" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e9d3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e9d3b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7e9b0d98" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7e9b0d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e9b2010"/>
        <function-ref name="stop" scoped="" ref="0x7e9b20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7e9b4d40" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e9b4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e9b4f18"/>
        <function-ref name="rfOff" scoped="" ref="0x7e9c0010"/>
        <function-ref name="rxOn" scoped="" ref="0x7e9c00f0"/>
        <function-ref name="startVReg" scoped="" ref="0x7e9c01d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e9c02b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e9c0390"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e9c0470"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e9c0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e9a0bc0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e9a0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e9a0d98"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e9a0e78"/>
        <function-ref name="led1On" scoped="" ref="0x7e996010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e9960f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e9961d0"/>
        <function-ref name="get" scoped="" ref="0x7e9962b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e996390"/>
        <function-ref name="led2Off" scoped="" ref="0x7e996710"/>
        <function-ref name="set" scoped="" ref="0x7e996470"/>
        <function-ref name="led0On" scoped="" ref="0x7e996550"/>
        <function-ref name="led2On" scoped="" ref="0x7e996630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e9c1be8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e9c1be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e9c1dc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e9c1ea0"/>
        <function-ref name="request" scoped="" ref="0x7e9c5010"/>
        <function-ref name="granted" scoped="" ref="0x7e9c50f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e9c51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CsmaBackoff" ref="0x7e997670" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7e997670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7e997848"/>
        <function-ref name="initial" scoped="" ref="0x7e997928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e9a0260" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e9a0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e9a0438"/>
        <function-ref name="address" scoped="" ref="0x7e9a0518"/>
        <function-ref name="destination" scoped="" ref="0x7e9a05f8"/>
        <function-ref name="setSource" scoped="" ref="0x7e9a06d8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e9a07b8"/>
        <function-ref name="type" scoped="" ref="0x7e9a0898"/>
        <function-ref name="setType" scoped="" ref="0x7e9a0978"/>
        <function-ref name="isForMe" scoped="" ref="0x7e9a0a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7e993df8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7e993df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e991010"/>
        <function-ref name="runTask" scoped="" ref="0x7e9910f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7e9935c8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7e9935c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e993820"/>
        <function-ref name="runTask" scoped="" ref="0x7e993900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7e994e80" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7e994e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e993070"/>
        <function-ref name="runTask" scoped="" ref="0x7e993150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e945618" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e945618"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7e9457f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7e9458d0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e9459b0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e945a90"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e945b70"/>
        <function-ref name="sync" scoped="" ref="0x7e945c50"/>
        <function-ref name="getChannel" scoped="" ref="0x7e945d30"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e945e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e955e50" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e955e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e954050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e951010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e951010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e9511e8"/>
        <function-ref name="rfOff" scoped="" ref="0x7e9512c8"/>
        <function-ref name="rxOn" scoped="" ref="0x7e9513a8"/>
        <function-ref name="startVReg" scoped="" ref="0x7e951488"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e951568"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e951648"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e951728"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e951808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e9541c0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e9541c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e954398"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e954478"/>
        <function-ref name="request" scoped="" ref="0x7e954558"/>
        <function-ref name="granted" scoped="" ref="0x7e954638"/>
        <function-ref name="isOwner" scoped="" ref="0x7e954718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e951978" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e951978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e951b50"/>
        <function-ref name="address" scoped="" ref="0x7e951c30"/>
        <function-ref name="destination" scoped="" ref="0x7e951d10"/>
        <function-ref name="setSource" scoped="" ref="0x7e951df0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e951ed0"/>
        <function-ref name="type" scoped="" ref="0x7e950010"/>
        <function-ref name="setType" scoped="" ref="0x7e9500f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e9501d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e941f20" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e941f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7e940110"/>
        <function-ref name="setChannel" scoped="" ref="0x7e9401f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e9402d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e9403b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e940490"/>
        <function-ref name="sync" scoped="" ref="0x7e940570"/>
        <function-ref name="getChannel" scoped="" ref="0x7e940650"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e940730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7e930d00" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7e930d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e927068"/>
        <function-ref name="fired" scoped="" ref="0x7e934918"/>
        <function-ref name="startAt" scoped="" ref="0x7e934d18"/>
        <function-ref name="isRunning" scoped="" ref="0x7e934b18"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e927268"/>
        <function-ref name="start" scoped="" ref="0x7e934478"/>
        <function-ref name="stop" scoped="" ref="0x7e934718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7e913d88" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e913d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e912010"/>
        <function-ref name="write" scoped="" ref="0x7e9120f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7e927de8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e927de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e926010"/>
        <function-ref name="isInput" scoped="" ref="0x7e9260f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e9261d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9262b0"/>
        <function-ref name="get" scoped="" ref="0x7e926390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e926470"/>
        <function-ref name="set" scoped="" ref="0x7e926550"/>
        <function-ref name="clr" scoped="" ref="0x7e926630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7e913460" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e913460"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e9136b8"/>
        <function-ref name="write" scoped="" ref="0x7e913798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e927458" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e927458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e927630"/>
        <function-ref name="isInput" scoped="" ref="0x7e927710"/>
        <function-ref name="toggle" scoped="" ref="0x7e9277f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e9278d0"/>
        <function-ref name="get" scoped="" ref="0x7e9279b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e927a90"/>
        <function-ref name="set" scoped="" ref="0x7e927b70"/>
        <function-ref name="clr" scoped="" ref="0x7e927c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7e9267c8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e9267c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e9269a0"/>
        <function-ref name="isInput" scoped="" ref="0x7e926a80"/>
        <function-ref name="toggle" scoped="" ref="0x7e926b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7e926c40"/>
        <function-ref name="get" scoped="" ref="0x7e926d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e926e00"/>
        <function-ref name="set" scoped="" ref="0x7e926ee0"/>
        <function-ref name="clr" scoped="" ref="0x7e925010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e941510" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e941510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e9416e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7e912290" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e912290"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e912468"/>
        <function-ref name="write" scoped="" ref="0x7e912548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e923370" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e923370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e923548"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e923628"/>
        <function-ref name="request" scoped="" ref="0x7e923708"/>
        <function-ref name="granted" scoped="" ref="0x7e9237e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e9238c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7e9063a8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e9063a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e906580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7e906718" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e906718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e9068f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7e905450" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7e905450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e905628"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e905708"/>
        <function-ref name="request" scoped="" ref="0x7e9057e8"/>
        <function-ref name="granted" scoped="" ref="0x7e9058c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e9059a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e9408a0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e9408a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e940a78"/>
        <function-ref name="rfOff" scoped="" ref="0x7e940b58"/>
        <function-ref name="rxOn" scoped="" ref="0x7e940c38"/>
        <function-ref name="startVReg" scoped="" ref="0x7e940d18"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e940df8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e940ed8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e937010"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e9370f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7e913010" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e913010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e9131e8"/>
        <function-ref name="write" scoped="" ref="0x7e9132c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7e913930" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e913930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e913b08"/>
        <function-ref name="write" scoped="" ref="0x7e913be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e941858" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e941858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e941a30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e941b10"/>
        <function-ref name="request" scoped="" ref="0x7e941bf0"/>
        <function-ref name="granted" scoped="" ref="0x7e941cd0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e941db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7e915d88" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e915d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e920010"/>
        <function-ref name="write" scoped="" ref="0x7e9200f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7e904c90" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e904c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e904e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7e921c98" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e921c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e921e70"/>
        <function-ref name="disable" scoped="" ref="0x7e923010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e9230f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e9231d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e906a60" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e906a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e906c38"/>
        <function-ref name="address" scoped="" ref="0x7e906d18"/>
        <function-ref name="destination" scoped="" ref="0x7e906df8"/>
        <function-ref name="setSource" scoped="" ref="0x7e906ed8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e905010"/>
        <function-ref name="type" scoped="" ref="0x7e9050f0"/>
        <function-ref name="setType" scoped="" ref="0x7e9051d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e9052b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e905b10" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e905b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e905ce8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e905dc8"/>
        <function-ref name="led1On" scoped="" ref="0x7e905ea8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e903010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e9030f0"/>
        <function-ref name="get" scoped="" ref="0x7e9031d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e9032b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e903630"/>
        <function-ref name="set" scoped="" ref="0x7e903390"/>
        <function-ref name="led0On" scoped="" ref="0x7e903470"/>
        <function-ref name="led2On" scoped="" ref="0x7e903550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7e906030" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e906030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e906208"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone_task" ref="0x7e900010" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone_task" scoped="" ref="0x7e900010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e9001e8"/>
        <function-ref name="runTask" scoped="" ref="0x7e9002c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e8b3828" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e8b3828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8b3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7e8b3cd0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7e8b3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8b1048"/>
        <function-ref name="fired" scoped="" ref="0x7e8b28d8"/>
        <function-ref name="startAt" scoped="" ref="0x7e8b2cd8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8b2ad8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e8b1248"/>
        <function-ref name="start" scoped="" ref="0x7e8b2438"/>
        <function-ref name="stop" scoped="" ref="0x7e8b26d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e8a7640" loc="67:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e8a7640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8a6988"/>
        <function-ref name="fired" scoped="" ref="0x7e8a6248"/>
        <function-ref name="startAt" scoped="" ref="0x7e8a6648"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8a6448"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e8a6b88"/>
        <function-ref name="start" scoped="" ref="0x7e8a7d90"/>
        <function-ref name="stop" scoped="" ref="0x7e8a6048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e8a6d40" loc="68:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e8a6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8a6f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7dd0b180" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7dd0b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dd0a550"/>
        <function-ref name="fired" scoped="" ref="0x7dd0bd70"/>
        <function-ref name="startAt" scoped="" ref="0x7dd0a210"/>
        <function-ref name="isRunning" scoped="" ref="0x7dd0a010"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dd0a750"/>
        <function-ref name="start" scoped="" ref="0x7dd0b8d0"/>
        <function-ref name="stop" scoped="" ref="0x7dd0bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7dd08cd8" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7dd08cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dd06068"/>
        <function-ref name="fired" scoped="" ref="0x7dd07918"/>
        <function-ref name="startAt" scoped="" ref="0x7dd07d18"/>
        <function-ref name="isRunning" scoped="" ref="0x7dd07b18"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dd06268"/>
        <function-ref name="start" scoped="" ref="0x7dd07478"/>
        <function-ref name="stop" scoped="" ref="0x7dd07718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e866220" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e866220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e8663f8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e8664d8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e8665b8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e866698"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e866778"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e866858"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e866938"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e866a18"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e866af8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e866bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e8650d8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e8650d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e860888"/>
        <function-ref name="test" scoped="" ref="0x7e860488"/>
        <function-ref name="get" scoped="" ref="0x7e865720"/>
        <function-ref name="captured" scoped="" ref="0x7e865bc0"/>
        <function-ref name="reset" scoped="" ref="0x7e865e60"/>
        <function-ref name="isOn" scoped="" ref="0x7e860688"/>
        <function-ref name="set" scoped="" ref="0x7e865920"/>
        <function-ref name="start" scoped="" ref="0x7e860088"/>
        <function-ref name="stop" scoped="" ref="0x7e860288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e8529b8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e8529b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e857cb0"/>
        <function-ref name="fired" scoped="" ref="0x7e8574b0"/>
        <function-ref name="get" scoped="" ref="0x7e857010"/>
        <function-ref name="reset" scoped="" ref="0x7e8576b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e857eb0"/>
        <function-ref name="set" scoped="" ref="0x7e857210"/>
        <function-ref name="start" scoped="" ref="0x7e8578b0"/>
        <function-ref name="stop" scoped="" ref="0x7e857ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e875a10" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e875a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e880128"/>
        <function-ref name="test" scoped="" ref="0x7e881d08"/>
        <function-ref name="get" scoped="" ref="0x7e881068"/>
        <function-ref name="setScale" scoped="" ref="0x7e880328"/>
        <function-ref name="getScale" scoped="" ref="0x7e8805c8"/>
        <function-ref name="reset" scoped="" ref="0x7e881708"/>
        <function-ref name="overflow" scoped="" ref="0x7e881508"/>
        <function-ref name="isOn" scoped="" ref="0x7e881f08"/>
        <function-ref name="set" scoped="" ref="0x7e881268"/>
        <function-ref name="start" scoped="" ref="0x7e881908"/>
        <function-ref name="stop" scoped="" ref="0x7e881b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e836220" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e836220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e8363f8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e8364d8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e8365b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e836698"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e836778"/>
        <function-ref name="setControl" scoped="" ref="0x7e836858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e8465e0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e8465e0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e8467b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e836a70" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e836a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e842d78"/>
        <function-ref name="fired" scoped="" ref="0x7e842578"/>
        <function-ref name="get" scoped="" ref="0x7e8420d8"/>
        <function-ref name="reset" scoped="" ref="0x7e842778"/>
        <function-ref name="isOn" scoped="" ref="0x7e841010"/>
        <function-ref name="set" scoped="" ref="0x7e8422d8"/>
        <function-ref name="start" scoped="" ref="0x7e842978"/>
        <function-ref name="stop" scoped="" ref="0x7e842b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e8469c8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e8469c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e8440f8"/>
        <function-ref name="test" scoped="" ref="0x7e845ce8"/>
        <function-ref name="get" scoped="" ref="0x7e845048"/>
        <function-ref name="setScale" scoped="" ref="0x7e8442f8"/>
        <function-ref name="getScale" scoped="" ref="0x7e844598"/>
        <function-ref name="reset" scoped="" ref="0x7e8456e8"/>
        <function-ref name="overflow" scoped="" ref="0x7e8454e8"/>
        <function-ref name="isOn" scoped="" ref="0x7e845ee8"/>
        <function-ref name="set" scoped="" ref="0x7e845248"/>
        <function-ref name="start" scoped="" ref="0x7e8458e8"/>
        <function-ref name="stop" scoped="" ref="0x7e845ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e7e71f0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e7e71f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e7e73c8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e7e74a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e7e7588"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e7e7668"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e7e7748"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e7e7828"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e7e7908"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e7e79e8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e7e7ac8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e7e7ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7e7d7010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7e7d7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e7d71e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e7d72c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e7d73a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e7d7488"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e7d7568"/>
        <function-ref name="setControl" scoped="" ref="0x7e7d7648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7e7e5930" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7e7e5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e7e3cb0"/>
        <function-ref name="fired" scoped="" ref="0x7e7e34b0"/>
        <function-ref name="get" scoped="" ref="0x7e7e3010"/>
        <function-ref name="reset" scoped="" ref="0x7e7e36b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e7e3eb0"/>
        <function-ref name="set" scoped="" ref="0x7e7e3210"/>
        <function-ref name="start" scoped="" ref="0x7e7e38b0"/>
        <function-ref name="stop" scoped="" ref="0x7e7e3ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e7e7dc8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e7e7dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e7e5610"/>
        <function-ref name="test" scoped="" ref="0x7e7e5210"/>
        <function-ref name="get" scoped="" ref="0x7e7e6428"/>
        <function-ref name="captured" scoped="" ref="0x7e7e68c8"/>
        <function-ref name="reset" scoped="" ref="0x7e7e6b68"/>
        <function-ref name="isOn" scoped="" ref="0x7e7e5410"/>
        <function-ref name="set" scoped="" ref="0x7e7e6628"/>
        <function-ref name="start" scoped="" ref="0x7e7e6d68"/>
        <function-ref name="stop" scoped="" ref="0x7e7e5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7e7e2148" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7e7e2148"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e7e0448"/>
        <function-ref name="fired" scoped="" ref="0x7e7e2c30"/>
        <function-ref name="get" scoped="" ref="0x7e7e2790"/>
        <function-ref name="reset" scoped="" ref="0x7e7e2e30"/>
        <function-ref name="isOn" scoped="" ref="0x7e7e0648"/>
        <function-ref name="set" scoped="" ref="0x7e7e2990"/>
        <function-ref name="start" scoped="" ref="0x7e7e0048"/>
        <function-ref name="stop" scoped="" ref="0x7e7e0248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7e7e08c8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7e7e08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e7d8bc8"/>
        <function-ref name="fired" scoped="" ref="0x7e7d83c8"/>
        <function-ref name="get" scoped="" ref="0x7e7e0f10"/>
        <function-ref name="reset" scoped="" ref="0x7e7d85c8"/>
        <function-ref name="isOn" scoped="" ref="0x7e7d8dc8"/>
        <function-ref name="set" scoped="" ref="0x7e7d8128"/>
        <function-ref name="start" scoped="" ref="0x7e7d87c8"/>
        <function-ref name="stop" scoped="" ref="0x7e7d89c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e7f1438" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e7f1438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e7f0b38"/>
        <function-ref name="test" scoped="" ref="0x7e7f0738"/>
        <function-ref name="get" scoped="" ref="0x7e7f1a80"/>
        <function-ref name="setScale" scoped="" ref="0x7e7f0d38"/>
        <function-ref name="getScale" scoped="" ref="0x7e7e7010"/>
        <function-ref name="reset" scoped="" ref="0x7e7f0138"/>
        <function-ref name="overflow" scoped="" ref="0x7e7f1f20"/>
        <function-ref name="isOn" scoped="" ref="0x7e7f0938"/>
        <function-ref name="set" scoped="" ref="0x7e7f1c80"/>
        <function-ref name="start" scoped="" ref="0x7e7f0338"/>
        <function-ref name="stop" scoped="" ref="0x7e7f0538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e759b28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e759b28"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e759d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e759f10" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e759f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e751648"/>
        <function-ref name="test" scoped="" ref="0x7e751248"/>
        <function-ref name="get" scoped="" ref="0x7e758578"/>
        <function-ref name="setScale" scoped="" ref="0x7e751848"/>
        <function-ref name="getScale" scoped="" ref="0x7e751ae8"/>
        <function-ref name="reset" scoped="" ref="0x7e758c18"/>
        <function-ref name="overflow" scoped="" ref="0x7e758a18"/>
        <function-ref name="isOn" scoped="" ref="0x7e751448"/>
        <function-ref name="set" scoped="" ref="0x7e758778"/>
        <function-ref name="start" scoped="" ref="0x7e758e18"/>
        <function-ref name="stop" scoped="" ref="0x7e751048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7dce50f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7dce50f8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f251f28"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f251f28"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dce4438"/>
        <function-ref name="fired" scoped="" ref="0x7dce5ce8"/>
        <function-ref name="startAt" scoped="" ref="0x7dce40f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7dce5ee8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dce4638"/>
        <function-ref name="start" scoped="" ref="0x7dce5848"/>
        <function-ref name="stop" scoped="" ref="0x7dce5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7dce16f8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7dce16f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dce0ab0"/>
        <function-ref name="fired" scoped="" ref="0x7dce02b0"/>
        <function-ref name="get" scoped="" ref="0x7dce1d40"/>
        <function-ref name="reset" scoped="" ref="0x7dce04b0"/>
        <function-ref name="isOn" scoped="" ref="0x7dce0cb0"/>
        <function-ref name="set" scoped="" ref="0x7dce0010"/>
        <function-ref name="start" scoped="" ref="0x7dce06b0"/>
        <function-ref name="stop" scoped="" ref="0x7dce08b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7dce4880" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7dce4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7dce1010"/>
        <function-ref name="test" scoped="" ref="0x7dce2b98"/>
        <function-ref name="get" scoped="" ref="0x7dce4ec8"/>
        <function-ref name="setScale" scoped="" ref="0x7dce1210"/>
        <function-ref name="getScale" scoped="" ref="0x7dce14b0"/>
        <function-ref name="reset" scoped="" ref="0x7dce2598"/>
        <function-ref name="overflow" scoped="" ref="0x7dce2398"/>
        <function-ref name="isOn" scoped="" ref="0x7dce2d98"/>
        <function-ref name="set" scoped="" ref="0x7dce20f8"/>
        <function-ref name="start" scoped="" ref="0x7dce2798"/>
        <function-ref name="stop" scoped="" ref="0x7dce2998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e7114b8" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e7114b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e711c08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e715048"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e711e08"/>
        <function-ref name="overflow" scoped="" ref="0x7e715248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e7088d8" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e7088d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e707048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e707448"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e707248"/>
        <function-ref name="overflow" scoped="" ref="0x7e707648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e703320" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e703320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e703a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e703e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e703c70"/>
        <function-ref name="overflow" scoped="" ref="0x7e702088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e7022f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e7022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e6f3a10"/>
        <function-ref name="test" scoped="" ref="0x7e6f3610"/>
        <function-ref name="get" scoped="" ref="0x7e702938"/>
        <function-ref name="setScale" scoped="" ref="0x7e6f3c10"/>
        <function-ref name="getScale" scoped="" ref="0x7e6f3eb0"/>
        <function-ref name="reset" scoped="" ref="0x7e6f3010"/>
        <function-ref name="overflow" scoped="" ref="0x7e702dd8"/>
        <function-ref name="isOn" scoped="" ref="0x7e6f3810"/>
        <function-ref name="set" scoped="" ref="0x7e702b38"/>
        <function-ref name="start" scoped="" ref="0x7e6f3210"/>
        <function-ref name="stop" scoped="" ref="0x7e6f3410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7e6d89f0" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7e6d89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e6d7200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e6d7600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e6d7400"/>
        <function-ref name="overflow" scoped="" ref="0x7e6d7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e6f1980" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e6f1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e6d80f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e6d84f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e6d82f8"/>
        <function-ref name="overflow" scoped="" ref="0x7e6d86f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7dd05488" loc="50:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7dd05488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dd037c8"/>
        <function-ref name="fired" scoped="" ref="0x7dd03088"/>
        <function-ref name="startAt" scoped="" ref="0x7dd03488"/>
        <function-ref name="isRunning" scoped="" ref="0x7dd03288"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dd039c8"/>
        <function-ref name="start" scoped="" ref="0x7dd05bd8"/>
        <function-ref name="stop" scoped="" ref="0x7dd05e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7dd02d08" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7dd02d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dd00068"/>
        <function-ref name="fired" scoped="" ref="0x7dd01918"/>
        <function-ref name="startAt" scoped="" ref="0x7dd01d18"/>
        <function-ref name="isRunning" scoped="" ref="0x7dd01b18"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dd00268"/>
        <function-ref name="start" scoped="" ref="0x7dd01478"/>
        <function-ref name="stop" scoped="" ref="0x7dd01718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7dd03ca0" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7dd03ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7dd02410"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7dd02810"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7dd02610"/>
        <function-ref name="overflow" scoped="" ref="0x7dd02a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e6a4560" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e6a4560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e6a4738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7e69a428" loc="68:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7e69a428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e69a600"/>
        <function-ref name="isInput" scoped="" ref="0x7e69a6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7e69a7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e69a8a0"/>
        <function-ref name="get" scoped="" ref="0x7e69a980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e69aa60"/>
        <function-ref name="set" scoped="" ref="0x7e69ab40"/>
        <function-ref name="clr" scoped="" ref="0x7e69ac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7e69ad98" loc="69:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7e69ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e699010"/>
        <function-ref name="isInput" scoped="" ref="0x7e6990f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e6991d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e6992b0"/>
        <function-ref name="get" scoped="" ref="0x7e699390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e699470"/>
        <function-ref name="set" scoped="" ref="0x7e699550"/>
        <function-ref name="clr" scoped="" ref="0x7e699630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7e6997a8" loc="70:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e6997a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e699980"/>
        <function-ref name="isInput" scoped="" ref="0x7e699a60"/>
        <function-ref name="toggle" scoped="" ref="0x7e699b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7e699c20"/>
        <function-ref name="get" scoped="" ref="0x7e699d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e699de0"/>
        <function-ref name="set" scoped="" ref="0x7e699ec0"/>
        <function-ref name="clr" scoped="" ref="0x7e698010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7e6a09d8" loc="67:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e6a09d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e6a0bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7e6a0c90"/>
        <function-ref name="toggle" scoped="" ref="0x7e6a0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7e6a0e50"/>
        <function-ref name="get" scoped="" ref="0x7e69a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e69a0f0"/>
        <function-ref name="set" scoped="" ref="0x7e69a1d0"/>
        <function-ref name="clr" scoped="" ref="0x7e69a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7e698af8" loc="72:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e698af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e698cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7e698db0"/>
        <function-ref name="toggle" scoped="" ref="0x7e698e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7e697010"/>
        <function-ref name="get" scoped="" ref="0x7e6970f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e6971d0"/>
        <function-ref name="set" scoped="" ref="0x7e6972b0"/>
        <function-ref name="clr" scoped="" ref="0x7e697390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7e6a0068" loc="66:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e6a0068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e6a0240"/>
        <function-ref name="isInput" scoped="" ref="0x7e6a0320"/>
        <function-ref name="toggle" scoped="" ref="0x7e6a0400"/>
        <function-ref name="isOutput" scoped="" ref="0x7e6a04e0"/>
        <function-ref name="get" scoped="" ref="0x7e6a05c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e6a06a0"/>
        <function-ref name="set" scoped="" ref="0x7e6a0780"/>
        <function-ref name="clr" scoped="" ref="0x7e6a0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7e698188" loc="71:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7e698188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e698360"/>
        <function-ref name="isInput" scoped="" ref="0x7e698440"/>
        <function-ref name="toggle" scoped="" ref="0x7e698520"/>
        <function-ref name="isOutput" scoped="" ref="0x7e698600"/>
        <function-ref name="get" scoped="" ref="0x7e6986e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e6987c0"/>
        <function-ref name="set" scoped="" ref="0x7e6988a0"/>
        <function-ref name="clr" scoped="" ref="0x7e698980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7e688ed0" loc="39:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7e688ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e68a0c0"/>
        <function-ref name="disable" scoped="" ref="0x7e68a1a0"/>
        <function-ref name="captured" scoped="" ref="0x7e68a280"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e68a360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7e68a500" loc="40:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e68a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e68a6d8"/>
        <function-ref name="disable" scoped="" ref="0x7e68a7b8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e68a898"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e68a978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7e68ab18" loc="41:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e68ab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e68acf0"/>
        <function-ref name="disable" scoped="" ref="0x7e68add0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e68aeb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e687010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e685690" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e685690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e685868"/>
        <function-ref name="disable" scoped="" ref="0x7e685948"/>
        <function-ref name="captured" scoped="" ref="0x7e685a28"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e685b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7e685d18" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7e685d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e6764d8"/>
        <function-ref name="test" scoped="" ref="0x7e6760d8"/>
        <function-ref name="get" scoped="" ref="0x7e684370"/>
        <function-ref name="captured" scoped="" ref="0x7e684810"/>
        <function-ref name="reset" scoped="" ref="0x7e684ab0"/>
        <function-ref name="isOn" scoped="" ref="0x7e6762d8"/>
        <function-ref name="set" scoped="" ref="0x7e684570"/>
        <function-ref name="start" scoped="" ref="0x7e684cb0"/>
        <function-ref name="stop" scoped="" ref="0x7e684eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7e673778" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e673778"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e673950"/>
        <function-ref name="fired" scoped="" ref="0x7e673a30"/>
        <function-ref name="disable" scoped="" ref="0x7e673b10"/>
        <function-ref name="edge" scoped="" ref="0x7e673bf0"/>
        <function-ref name="enable" scoped="" ref="0x7e673cd0"/>
        <function-ref name="getValue" scoped="" ref="0x7e673db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7e673180" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7e673180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e673358"/>
        <function-ref name="disable" scoped="" ref="0x7e673438"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e673518"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e6735f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7e6575f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7e6575f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6577c8"/>
        <function-ref name="fired" scoped="" ref="0x7e6578a8"/>
        <function-ref name="disable" scoped="" ref="0x7e657988"/>
        <function-ref name="edge" scoped="" ref="0x7e657a68"/>
        <function-ref name="enable" scoped="" ref="0x7e657b48"/>
        <function-ref name="getValue" scoped="" ref="0x7e657c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7e65ae28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7e65ae28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e659050"/>
        <function-ref name="fired" scoped="" ref="0x7e659130"/>
        <function-ref name="disable" scoped="" ref="0x7e659210"/>
        <function-ref name="edge" scoped="" ref="0x7e6592f0"/>
        <function-ref name="enable" scoped="" ref="0x7e6593d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e6594b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7e6585f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7e6585f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6587c8"/>
        <function-ref name="fired" scoped="" ref="0x7e6588a8"/>
        <function-ref name="disable" scoped="" ref="0x7e658988"/>
        <function-ref name="edge" scoped="" ref="0x7e658a68"/>
        <function-ref name="enable" scoped="" ref="0x7e658b48"/>
        <function-ref name="getValue" scoped="" ref="0x7e658c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7e657da8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7e657da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e656010"/>
        <function-ref name="fired" scoped="" ref="0x7e6560f0"/>
        <function-ref name="disable" scoped="" ref="0x7e6561d0"/>
        <function-ref name="edge" scoped="" ref="0x7e6562b0"/>
        <function-ref name="enable" scoped="" ref="0x7e656390"/>
        <function-ref name="getValue" scoped="" ref="0x7e656470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7e659630" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7e659630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e659808"/>
        <function-ref name="fired" scoped="" ref="0x7e6598e8"/>
        <function-ref name="disable" scoped="" ref="0x7e6599c8"/>
        <function-ref name="edge" scoped="" ref="0x7e659aa8"/>
        <function-ref name="enable" scoped="" ref="0x7e659b88"/>
        <function-ref name="getValue" scoped="" ref="0x7e659c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7e658da8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7e658da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e657010"/>
        <function-ref name="fired" scoped="" ref="0x7e6570f0"/>
        <function-ref name="disable" scoped="" ref="0x7e6571d0"/>
        <function-ref name="edge" scoped="" ref="0x7e6572b0"/>
        <function-ref name="enable" scoped="" ref="0x7e657390"/>
        <function-ref name="getValue" scoped="" ref="0x7e657470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7e65a670" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7e65a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e65a848"/>
        <function-ref name="fired" scoped="" ref="0x7e65a928"/>
        <function-ref name="disable" scoped="" ref="0x7e65aa08"/>
        <function-ref name="edge" scoped="" ref="0x7e65aae8"/>
        <function-ref name="enable" scoped="" ref="0x7e65abc8"/>
        <function-ref name="getValue" scoped="" ref="0x7e65aca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7e659de8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7e659de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e658010"/>
        <function-ref name="fired" scoped="" ref="0x7e6580f0"/>
        <function-ref name="disable" scoped="" ref="0x7e6581d0"/>
        <function-ref name="edge" scoped="" ref="0x7e6582b0"/>
        <function-ref name="enable" scoped="" ref="0x7e658390"/>
        <function-ref name="getValue" scoped="" ref="0x7e658470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7e64ab08" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7e64ab08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e64ace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7e649990" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7e649990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e649b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7e64a418" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7e64a418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e64a5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7e64ae80" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7e64ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e648070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7e649d08" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7e649d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e649ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7e64a790" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7e64a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e64a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7e649618" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7e649618"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e6497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7e64a0a0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7e64a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e64a278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e636010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e636010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6361e8"/>
        <function-ref name="fired" scoped="" ref="0x7e6362c8"/>
        <function-ref name="disable" scoped="" ref="0x7e6363a8"/>
        <function-ref name="edge" scoped="" ref="0x7e636488"/>
        <function-ref name="enable" scoped="" ref="0x7e636568"/>
        <function-ref name="getValue" scoped="" ref="0x7e636648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e6367c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e6367c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e6369a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e626010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e626010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6261e8"/>
        <function-ref name="fired" scoped="" ref="0x7e6262c8"/>
        <function-ref name="disable" scoped="" ref="0x7e6263a8"/>
        <function-ref name="edge" scoped="" ref="0x7e626488"/>
        <function-ref name="enable" scoped="" ref="0x7e626568"/>
        <function-ref name="getValue" scoped="" ref="0x7e626648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e6267c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e6267c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e6269a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e624010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e624010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6241e8"/>
        <function-ref name="fired" scoped="" ref="0x7e6242c8"/>
        <function-ref name="disable" scoped="" ref="0x7e6243a8"/>
        <function-ref name="edge" scoped="" ref="0x7e624488"/>
        <function-ref name="enable" scoped="" ref="0x7e624568"/>
        <function-ref name="getValue" scoped="" ref="0x7e624648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e6247c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e6247c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e6249a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e622010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e622010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6221e8"/>
        <function-ref name="fired" scoped="" ref="0x7e6222c8"/>
        <function-ref name="disable" scoped="" ref="0x7e6223a8"/>
        <function-ref name="edge" scoped="" ref="0x7e622488"/>
        <function-ref name="enable" scoped="" ref="0x7e622568"/>
        <function-ref name="getValue" scoped="" ref="0x7e622648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e6227c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e6227c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e6229a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e61b0b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e61b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e61b288"/>
        <function-ref name="fired" scoped="" ref="0x7e61b368"/>
        <function-ref name="disable" scoped="" ref="0x7e61b448"/>
        <function-ref name="edge" scoped="" ref="0x7e61b528"/>
        <function-ref name="enable" scoped="" ref="0x7e61b608"/>
        <function-ref name="getValue" scoped="" ref="0x7e61b6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e61b868" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e61b868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e61ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e619150" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e619150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e619328"/>
        <function-ref name="fired" scoped="" ref="0x7e619408"/>
        <function-ref name="disable" scoped="" ref="0x7e6194e8"/>
        <function-ref name="edge" scoped="" ref="0x7e6195c8"/>
        <function-ref name="enable" scoped="" ref="0x7e6196a8"/>
        <function-ref name="getValue" scoped="" ref="0x7e619788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e619908" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e619908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e619ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e617228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e617228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e617400"/>
        <function-ref name="fired" scoped="" ref="0x7e6174e0"/>
        <function-ref name="disable" scoped="" ref="0x7e6175c0"/>
        <function-ref name="edge" scoped="" ref="0x7e6176a0"/>
        <function-ref name="enable" scoped="" ref="0x7e617780"/>
        <function-ref name="getValue" scoped="" ref="0x7e617860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e6179e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e6179e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e617bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e6152d0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e6152d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6154a8"/>
        <function-ref name="fired" scoped="" ref="0x7e615588"/>
        <function-ref name="disable" scoped="" ref="0x7e615668"/>
        <function-ref name="edge" scoped="" ref="0x7e615748"/>
        <function-ref name="enable" scoped="" ref="0x7e615828"/>
        <function-ref name="getValue" scoped="" ref="0x7e615908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e615a88" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e615a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e615c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATimer" ref="0x7e600a78" loc="71:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATimer" scoped="" ref="0x7e600a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e605388"/>
        <function-ref name="fired" scoped="" ref="0x7e606798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e606d38"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e606b58"/>
        <function-ref name="getdt" scoped="" ref="0x7e605748"/>
        <function-ref name="gett0" scoped="" ref="0x7e605568"/>
        <function-ref name="isRunning" scoped="" ref="0x7e606978"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e6060b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e605068"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e606338"/>
        <function-ref name="stop" scoped="" ref="0x7e6065b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7e5f63b8" loc="113:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7e5f63b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e5f6590"/>
        <function-ref name="runTask" scoped="" ref="0x7e5f6670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7e609468" loc="70:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7e609468"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e609640"/>
        <function-ref name="isInput" scoped="" ref="0x7e609720"/>
        <function-ref name="toggle" scoped="" ref="0x7e609800"/>
        <function-ref name="isOutput" scoped="" ref="0x7e6098e0"/>
        <function-ref name="get" scoped="" ref="0x7e6099c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e609aa0"/>
        <function-ref name="set" scoped="" ref="0x7e609b80"/>
        <function-ref name="clr" scoped="" ref="0x7e609c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7e60ade0" loc="67:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e60ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e609010"/>
        <function-ref name="disable" scoped="" ref="0x7e6090f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e6091d0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e6092b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7e5fa4b8" loc="87:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7e5fa4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e5fa690"/>
        <function-ref name="runTask" scoped="" ref="0x7e5fa770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e5eb428" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplCC2420InterruptsC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e5eb428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e5e2dd0"/>
        <function-ref name="fired" scoped="" ref="0x7e5e21f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e5e2790"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e5e25b0"/>
        <function-ref name="getdt" scoped="" ref="0x7e50c1f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e50c010"/>
        <function-ref name="isRunning" scoped="" ref="0x7e5e23d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e5eba50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e5e2ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e5ebcd0"/>
        <function-ref name="stop" scoped="" ref="0x7e5e2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7e5e11e8" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7e5e11e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e5e0b08"/>
        <function-ref name="fired" scoped="" ref="0x7e5e1ef0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e5e04c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e5e02e8"/>
        <function-ref name="getdt" scoped="" ref="0x7e5e0ec8"/>
        <function-ref name="gett0" scoped="" ref="0x7e5e0ce8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e5e0108"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e5e1810"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e5e07e8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e5e1a90"/>
        <function-ref name="stop" scoped="" ref="0x7e5e1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7e5d69f0" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7e5d69f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e5d4330"/>
        <function-ref name="fired" scoped="" ref="0x7e5d5728"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e5d5cc8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e5d5ae8"/>
        <function-ref name="getdt" scoped="" ref="0x7e5d46f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e5d4510"/>
        <function-ref name="isRunning" scoped="" ref="0x7e5d5908"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e5d5048"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e5d4010"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e5d52c8"/>
        <function-ref name="stop" scoped="" ref="0x7e5d5548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7e5ca230" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7e5ca230"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e5ca878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e5d6358" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e5d6358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e5d6530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7e5c6d40" loc="26:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7e5c6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e5c44a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e5c48a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e5c46a8"/>
        <function-ref name="overflow" scoped="" ref="0x7e5c4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e5c7010" loc="24:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e5c7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e5c71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7e5c74b8" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7e5c74b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e5c6818"/>
        <function-ref name="fired" scoped="" ref="0x7e5c60d8"/>
        <function-ref name="startAt" scoped="" ref="0x7e5c64d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e5c62d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e5c6a18"/>
        <function-ref name="start" scoped="" ref="0x7e5c7c08"/>
        <function-ref name="stop" scoped="" ref="0x7e5c7ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e5c3af0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e5c3af0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e5c3cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e5c3ed8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e5c3ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e5c0648"/>
        <function-ref name="test" scoped="" ref="0x7e5c0248"/>
        <function-ref name="get" scoped="" ref="0x7e5c2578"/>
        <function-ref name="setScale" scoped="" ref="0x7e5c0848"/>
        <function-ref name="getScale" scoped="" ref="0x7e5c0ae8"/>
        <function-ref name="reset" scoped="" ref="0x7e5c2c18"/>
        <function-ref name="overflow" scoped="" ref="0x7e5c2a18"/>
        <function-ref name="isOn" scoped="" ref="0x7e5c0448"/>
        <function-ref name="set" scoped="" ref="0x7e5c2778"/>
        <function-ref name="start" scoped="" ref="0x7e5c2e18"/>
        <function-ref name="stop" scoped="" ref="0x7e5c0048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e5bbef8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e5bbef8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f251f28"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f251f28"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e5b8278"/>
        <function-ref name="fired" scoped="" ref="0x7e5bab20"/>
        <function-ref name="startAt" scoped="" ref="0x7e5baf20"/>
        <function-ref name="isRunning" scoped="" ref="0x7e5bad20"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e5b8478"/>
        <function-ref name="start" scoped="" ref="0x7e5ba680"/>
        <function-ref name="stop" scoped="" ref="0x7e5ba920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7e5b54f8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7e5b54f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e5b4810"/>
        <function-ref name="fired" scoped="" ref="0x7e5b4010"/>
        <function-ref name="get" scoped="" ref="0x7e5b5b40"/>
        <function-ref name="reset" scoped="" ref="0x7e5b4210"/>
        <function-ref name="isOn" scoped="" ref="0x7e5b4a10"/>
        <function-ref name="set" scoped="" ref="0x7e5b5d40"/>
        <function-ref name="start" scoped="" ref="0x7e5b4410"/>
        <function-ref name="stop" scoped="" ref="0x7e5b4610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7e5b86c0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7e5b86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e5b7dc0"/>
        <function-ref name="test" scoped="" ref="0x7e5b79c0"/>
        <function-ref name="get" scoped="" ref="0x7e5b8d08"/>
        <function-ref name="setScale" scoped="" ref="0x7e5b5010"/>
        <function-ref name="getScale" scoped="" ref="0x7e5b52b0"/>
        <function-ref name="reset" scoped="" ref="0x7e5b73c0"/>
        <function-ref name="overflow" scoped="" ref="0x7e5b71c0"/>
        <function-ref name="isOn" scoped="" ref="0x7e5b7bc0"/>
        <function-ref name="set" scoped="" ref="0x7e5b8f08"/>
        <function-ref name="start" scoped="" ref="0x7e5b75c0"/>
        <function-ref name="stop" scoped="" ref="0x7e5b77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e5b3eb8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e5b3eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e5b1628"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e5b1a28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e5b1828"/>
        <function-ref name="overflow" scoped="" ref="0x7e5b1c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e5b1e90" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e5b1e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e5aa610"/>
        <function-ref name="test" scoped="" ref="0x7e5aa210"/>
        <function-ref name="get" scoped="" ref="0x7e5b04f8"/>
        <function-ref name="setScale" scoped="" ref="0x7e5aa810"/>
        <function-ref name="getScale" scoped="" ref="0x7e5aaab0"/>
        <function-ref name="reset" scoped="" ref="0x7e5b0b98"/>
        <function-ref name="overflow" scoped="" ref="0x7e5b0998"/>
        <function-ref name="isOn" scoped="" ref="0x7e5aa410"/>
        <function-ref name="set" scoped="" ref="0x7e5b06f8"/>
        <function-ref name="start" scoped="" ref="0x7e5b0d98"/>
        <function-ref name="stop" scoped="" ref="0x7e5aa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e5a61b0" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e5a61b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e57b550"/>
        <function-ref name="fired" scoped="" ref="0x7e5a6da0"/>
        <function-ref name="startAt" scoped="" ref="0x7e57b210"/>
        <function-ref name="isRunning" scoped="" ref="0x7e57b010"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e57b750"/>
        <function-ref name="start" scoped="" ref="0x7e5a6900"/>
        <function-ref name="stop" scoped="" ref="0x7e5a6ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7e579af8" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7e579af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e578308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e578708"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e578508"/>
        <function-ref name="overflow" scoped="" ref="0x7e578908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e57ba48" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e57ba48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e579200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e579600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e579400"/>
        <function-ref name="overflow" scoped="" ref="0x7e579800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7e578c00" loc="64:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7e578c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e575010"/>
        <function-ref name="fired" scoped="" ref="0x7e576820"/>
        <function-ref name="startAt" scoped="" ref="0x7e576c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7e576a20"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e575210"/>
        <function-ref name="start" scoped="" ref="0x7e576380"/>
        <function-ref name="stop" scoped="" ref="0x7e576620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7e552e48" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7e552e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e551050"/>
        <function-ref name="runTask" scoped="" ref="0x7e551130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7e554700" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e554700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e552a70"/>
        <function-ref name="fired" scoped="" ref="0x7e552330"/>
        <function-ref name="startAt" scoped="" ref="0x7e552730"/>
        <function-ref name="isRunning" scoped="" ref="0x7e552530"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e552c70"/>
        <function-ref name="start" scoped="" ref="0x7e554e50"/>
        <function-ref name="stop" scoped="" ref="0x7e552130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e56c6b8" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e56c6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e554068"/>
        <function-ref name="fired" scoped="" ref="0x7e555470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e555a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e555830"/>
        <function-ref name="getdt" scoped="" ref="0x7e554428"/>
        <function-ref name="gett0" scoped="" ref="0x7e554248"/>
        <function-ref name="isRunning" scoped="" ref="0x7e555650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e56cce0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e555d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e555010"/>
        <function-ref name="stop" scoped="" ref="0x7e555290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7e51b708" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7e51b708"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e51b8e0"/>
        <function-ref name="runTask" scoped="" ref="0x7e51b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7e521840" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7e521840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e51b170"/>
        <function-ref name="fired" scoped="" ref="0x7e51c570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e51cb10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e51c930"/>
        <function-ref name="getdt" scoped="" ref="0x7e51b530"/>
        <function-ref name="gett0" scoped="" ref="0x7e51b350"/>
        <function-ref name="isRunning" scoped="" ref="0x7e51c750"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e521e68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e51ce30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e51c110"/>
        <function-ref name="stop" scoped="" ref="0x7e51c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e54b810" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e54b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e5211e8"/>
        <function-ref name="fired" scoped="" ref="0x7e523590"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e523b60"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e523970"/>
        <function-ref name="getdt" scoped="" ref="0x7e5215c8"/>
        <function-ref name="gett0" scoped="" ref="0x7e5213d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e523780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e54be48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e523e90"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e523110"/>
        <function-ref name="stop" scoped="" ref="0x7e5233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7e512e90" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7e512e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e5174f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7e5177d0" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e5177d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e517f20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e511338"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e511138"/>
        <function-ref name="overflow" scoped="" ref="0x7e511538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e3f19a8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e3f19a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3f1b80"/>
        <function-ref name="write" scoped="" ref="0x7e3f1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e3f3260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e3f3260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3f3438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e3f0270" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e3f0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3f0448"/>
        <function-ref name="write" scoped="" ref="0x7e3f0528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e3ee368" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e3ee368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3ee540"/>
        <function-ref name="write" scoped="" ref="0x7e3ee620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e3f10b8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e3f10b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3f1290"/>
        <function-ref name="write" scoped="" ref="0x7e3f1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e3f4190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e3f4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3f4368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e3f3910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e3f3910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3f3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e3f1de0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e3f1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3f0010"/>
        <function-ref name="write" scoped="" ref="0x7e3f00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e3f35b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e3f35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3f3790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e3f0f18" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e3f0f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3ee108"/>
        <function-ref name="write" scoped="" ref="0x7e3ee1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e3f44e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e3f44e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3f46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e3ee7a0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e3ee7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e3ee978"/>
        <function-ref name="writeDone" scoped="" ref="0x7e3eea58"/>
        <function-ref name="write" scoped="" ref="0x7e3eeb38"/>
        <function-ref name="beginRead" scoped="" ref="0x7e3eec18"/>
        <function-ref name="readDone" scoped="" ref="0x7e3eecf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e3f14f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e3f14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3f1748"/>
        <function-ref name="write" scoped="" ref="0x7e3f1828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e3f3c68" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e3f3c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3f3e40"/>
        <function-ref name="write" scoped="" ref="0x7e3f3f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e3f4840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e3f4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3f4a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e3f56e8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e3f56e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3f58c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3f59a0"/>
        <function-ref name="request" scoped="" ref="0x7e3f5a80"/>
        <function-ref name="granted" scoped="" ref="0x7e3f5b60"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3f5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e3f0ae0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e3f0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3f0cb8"/>
        <function-ref name="write" scoped="" ref="0x7e3f0d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e3f06a8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e3f06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3f0880"/>
        <function-ref name="write" scoped="" ref="0x7e3f0960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e3f5dc0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e3f5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e3f4ef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e3f4ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3f30e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e3f4b98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e3f4b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3f4d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e3eee78" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e3eee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e3ed070"/>
        <function-ref name="writeDone" scoped="" ref="0x7e3ed150"/>
        <function-ref name="write" scoped="" ref="0x7e3ed230"/>
        <function-ref name="beginRead" scoped="" ref="0x7e3ed310"/>
        <function-ref name="readDone" scoped="" ref="0x7e3ed3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7e4f4998" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7e4f4998"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e4f4b70"/>
        <function-ref name="writeDone" scoped="" ref="0x7e4f4c50"/>
        <function-ref name="write" scoped="" ref="0x7e4f4d30"/>
        <function-ref name="beginRead" scoped="" ref="0x7e4f4e10"/>
        <function-ref name="readDone" scoped="" ref="0x7e4f4ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7e4f3340" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7e4f3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e4f3518"/>
        <function-ref name="write" scoped="" ref="0x7e4f35f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7e4f3a20" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7e4f3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e4f3bf8"/>
        <function-ref name="write" scoped="" ref="0x7e4f3cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e4f4018" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e4f4018"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4f41f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e4f42d0"/>
        <function-ref name="request" scoped="" ref="0x7e4f43b0"/>
        <function-ref name="granted" scoped="" ref="0x7e4f4490"/>
        <function-ref name="isOwner" scoped="" ref="0x7e4f4570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7e4f2120" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7e4f2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e4f22f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7e4e09a8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e4e09a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e4e0b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7e4e0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7e4ece40" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7e4ece40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e4ea050"/>
        <function-ref name="writeDone" scoped="" ref="0x7e4ea130"/>
        <function-ref name="write" scoped="" ref="0x7e4ea210"/>
        <function-ref name="beginRead" scoped="" ref="0x7e4ea2f0"/>
        <function-ref name="readDone" scoped="" ref="0x7e4ea3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7e4e4188" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e4e4188"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e4e4360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e4e9960" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e4e9960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4e9b38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e4e9c18"/>
        <function-ref name="request" scoped="" ref="0x7e4e9cf8"/>
        <function-ref name="granted" scoped="" ref="0x7e4e9dd8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e4e9eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7e4ea800" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7e4ea800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e4ea9d8"/>
        <function-ref name="write" scoped="" ref="0x7e4eaab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7e4eaee0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7e4eaee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e4e90e0"/>
        <function-ref name="write" scoped="" ref="0x7e4e91c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e4e0dc8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e4e0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e4e5010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e4e50f0"/>
        <function-ref name="led1On" scoped="" ref="0x7e4e51d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e4e52b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e4e5390"/>
        <function-ref name="get" scoped="" ref="0x7e4e5470"/>
        <function-ref name="led1Off" scoped="" ref="0x7e4e5550"/>
        <function-ref name="led2Off" scoped="" ref="0x7e4e58d0"/>
        <function-ref name="set" scoped="" ref="0x7e4e5630"/>
        <function-ref name="led0On" scoped="" ref="0x7e4e5710"/>
        <function-ref name="led2On" scoped="" ref="0x7e4e57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e4ec4c0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e4ec4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4ec698"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e4ec778"/>
        <function-ref name="request" scoped="" ref="0x7e4ec858"/>
        <function-ref name="granted" scoped="" ref="0x7e4ec938"/>
        <function-ref name="isOwner" scoped="" ref="0x7e4eca18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7e4e95e8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7e4e95e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e4e97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7e4b6c10" loc="43:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e4b6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e4b6de8"/>
        <function-ref name="sendDone" scoped="" ref="0x7e4b6ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7e4b68d8" loc="42:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e4b68d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e4b6ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e4b7e98" loc="39:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e4b7e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e4b60c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e4b6220" loc="40:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e4b6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4b63f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e4b64d8"/>
        <function-ref name="request" scoped="" ref="0x7e4b65b8"/>
        <function-ref name="granted" scoped="" ref="0x7e4b6698"/>
        <function-ref name="isOwner" scoped="" ref="0x7e4b6778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7e4b0358" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e4b0358"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e4b0530"/>
        <function-ref name="sendDone" scoped="" ref="0x7e4b0610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7e4b0010" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e4b0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e4b01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e4b4c40" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e4b4c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e4b4e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e4b0a10" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e4b0a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4b0be8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e4b0cc8"/>
        <function-ref name="request" scoped="" ref="0x7e4b0da8"/>
        <function-ref name="granted" scoped="" ref="0x7e4b0e88"/>
        <function-ref name="isOwner" scoped="" ref="0x7e4ad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7e4a99d8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e4a99d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e4a9bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e4a9c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7e4a5500" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7e4a5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4a56d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e4a57b8"/>
        <function-ref name="request" scoped="" ref="0x7e4a5898"/>
        <function-ref name="granted" scoped="" ref="0x7e4a5978"/>
        <function-ref name="isOwner" scoped="" ref="0x7e4a5a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7e4a96b0" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e4a96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e4a9888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e4a9390" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e4a9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e4a9568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7e496998" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7e496998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7e496b70"/>
        <function-ref name="sleep" scoped="" ref="0x7e4a5010"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7e496d30"/>
        <function-ref name="dataReady" scoped="" ref="0x7e4a50f0"/>
        <function-ref name="initMaster" scoped="" ref="0x7e496ef0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7e4a6010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7e4a60f0"/>
        <function-ref name="read" scoped="" ref="0x7e4a61d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7e4a62b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7e4a6390"/>
        <function-ref name="setClock" scoped="" ref="0x7e4a6470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7e4a6550"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7e4a6630"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7e4a6790"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7e4a6870"/>
        <function-ref name="write" scoped="" ref="0x7e4a6950"/>
        <function-ref name="enableSpi" scoped="" ref="0x7e4a6a30"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7e4a6b10"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7e4a6bf0"/>
        <function-ref name="getClock" scoped="" ref="0x7e4a6cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7e4a6db0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7e496c50"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7e496e10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7e4a6e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e4a8100" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e4a8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e4a82d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e4a83b8"/>
        <function-ref name="request" scoped="" ref="0x7e4a8498"/>
        <function-ref name="granted" scoped="" ref="0x7e4a8578"/>
        <function-ref name="isOwner" scoped="" ref="0x7e4a8658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7e4905e8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7e4905e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e4907c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7e4901e0" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e4901e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e4903b8"/>
        <function-ref name="userId" scoped="" ref="0x7e490498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7e470670" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7e470670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7e470848"/>
        <function-ref name="sleep" scoped="" ref="0x7e46ecd0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7e470a08"/>
        <function-ref name="dataReady" scoped="" ref="0x7e46edb0"/>
        <function-ref name="initMaster" scoped="" ref="0x7e470bc8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7e470ca8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7e470d88"/>
        <function-ref name="read" scoped="" ref="0x7e470e68"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7e46e010"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7e46e0f0"/>
        <function-ref name="setClock" scoped="" ref="0x7e46e1d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7e46e2b0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7e46e390"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7e46e4f0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7e46e5d0"/>
        <function-ref name="write" scoped="" ref="0x7e46e6b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7e46e790"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7e46e870"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7e46e950"/>
        <function-ref name="getClock" scoped="" ref="0x7e46ea30"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7e46eb10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7e470928"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7e470ae8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7e46ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7e465e78" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7e465e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e464070"/>
        <function-ref name="isInput" scoped="" ref="0x7e464150"/>
        <function-ref name="toggle" scoped="" ref="0x7e464230"/>
        <function-ref name="isOutput" scoped="" ref="0x7e464310"/>
        <function-ref name="get" scoped="" ref="0x7e4643f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4644d0"/>
        <function-ref name="set" scoped="" ref="0x7e4645b0"/>
        <function-ref name="clr" scoped="" ref="0x7e464690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7e466b28" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7e466b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e466d00"/>
        <function-ref name="isInput" scoped="" ref="0x7e466de0"/>
        <function-ref name="toggle" scoped="" ref="0x7e466ec0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e465010"/>
        <function-ref name="get" scoped="" ref="0x7e4650f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4651d0"/>
        <function-ref name="set" scoped="" ref="0x7e4652b0"/>
        <function-ref name="clr" scoped="" ref="0x7e465390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7e4661b8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7e4661b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e466390"/>
        <function-ref name="isInput" scoped="" ref="0x7e466470"/>
        <function-ref name="toggle" scoped="" ref="0x7e466550"/>
        <function-ref name="isOutput" scoped="" ref="0x7e466630"/>
        <function-ref name="get" scoped="" ref="0x7e466710"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4667f0"/>
        <function-ref name="set" scoped="" ref="0x7e4668d0"/>
        <function-ref name="clr" scoped="" ref="0x7e4669b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7e467c80" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e467c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e467e58"/>
        <function-ref name="stop" scoped="" ref="0x7e466010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7e464808" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7e464808"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e4649e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7e4683e8" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7e4683e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7e4685c0"/>
        <function-ref name="sleep" scoped="" ref="0x7e467a30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7e468780"/>
        <function-ref name="dataReady" scoped="" ref="0x7e467b10"/>
        <function-ref name="initMaster" scoped="" ref="0x7e468940"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7e468a20"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7e468b00"/>
        <function-ref name="read" scoped="" ref="0x7e468be0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7e468cc0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7e468da0"/>
        <function-ref name="setClock" scoped="" ref="0x7e468e80"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7e467010"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7e4670f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7e467250"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7e467330"/>
        <function-ref name="write" scoped="" ref="0x7e467410"/>
        <function-ref name="enableSpi" scoped="" ref="0x7e4674f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7e4675d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7e4676b0"/>
        <function-ref name="getClock" scoped="" ref="0x7e467790"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7e467870"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7e4686a0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7e468860"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7e467950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7e465508" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7e465508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e4656e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e4657c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e4658a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e465980"/>
        <function-ref name="get" scoped="" ref="0x7e465a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e465b40"/>
        <function-ref name="set" scoped="" ref="0x7e465c20"/>
        <function-ref name="clr" scoped="" ref="0x7e465d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7e43a808" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7e43a808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7e43a9f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e43aad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7e3fd0f8" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e3fd0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e3fd2e0"/>
        <function-ref name="configure" scoped="" ref="0x7e3fd3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e43a0c8" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e43a0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e43a2b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e43a390"/>
        <function-ref name="request" scoped="" ref="0x7e43a470"/>
        <function-ref name="granted" scoped="" ref="0x7e43a550"/>
        <function-ref name="isOwner" scoped="" ref="0x7e43a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7e43ac10" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e43ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e43ade8"/>
        <function-ref name="userId" scoped="" ref="0x7e43aec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7dc0e3c0" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7dc0e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7dc0e598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7dc0e6f8" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7dc0e6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7dc0e8d0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7dc0e9b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7dc0ea90"/>
        <function-ref name="dequeue" scoped="" ref="0x7dc0eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7dc0ce30" loc="54:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7dc0ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7dc0b050"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7dc0b130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7dc0b730" loc="58:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7dc0b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7dc0b918"/>
        <function-ref name="configure" scoped="" ref="0x7dc0b9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7dc0bb58" loc="59:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7dc0bb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7dc0bd30"/>
        <function-ref name="isEmpty" scoped="" ref="0x7dc0be10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7dc0bef0"/>
        <function-ref name="dequeue" scoped="" ref="0x7dc0a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dc0c6f0" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dc0c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dc0c8d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dc0c9b8"/>
        <function-ref name="request" scoped="" ref="0x7dc0ca98"/>
        <function-ref name="granted" scoped="" ref="0x7dc0cb78"/>
        <function-ref name="isOwner" scoped="" ref="0x7dc0cc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7dc0b270" loc="55:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7dc0b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7dc0b448"/>
        <function-ref name="userId" scoped="" ref="0x7dc0b528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7dc0a190" loc="71:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7dc0a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7dc0a368"/>
        <function-ref name="runTask" scoped="" ref="0x7dc0a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e3e60b0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e3e60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3e6288"/>
        <function-ref name="write" scoped="" ref="0x7e3e6368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e3e8880" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e3e8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3e8a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e3e6920" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e3e6920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3e6af8"/>
        <function-ref name="write" scoped="" ref="0x7e3e6bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e3e5ae0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e3e5ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3e5cb8"/>
        <function-ref name="write" scoped="" ref="0x7e3e5d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e3e77a0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e3e77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3e7978"/>
        <function-ref name="write" scoped="" ref="0x7e3e7a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e3ea788" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e3ea788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3ea960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e3e7010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e3e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3e71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e3e64e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e3e64e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3e66c0"/>
        <function-ref name="write" scoped="" ref="0x7e3e67a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e3e8bd8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e3e8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3e8db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e3e56a8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e3e56a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3e5880"/>
        <function-ref name="write" scoped="" ref="0x7e3e5960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e3eaae0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e3eaae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3eacb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e3e5f18" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e3e5f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e3e4108"/>
        <function-ref name="writeDone" scoped="" ref="0x7e3e41e8"/>
        <function-ref name="write" scoped="" ref="0x7e3e42c8"/>
        <function-ref name="beginRead" scoped="" ref="0x7e3e43a8"/>
        <function-ref name="readDone" scoped="" ref="0x7e3e4488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e3e7bd8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e3e7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3e7e30"/>
        <function-ref name="write" scoped="" ref="0x7e3e7f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e3e7368" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e3e7368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3e7540"/>
        <function-ref name="write" scoped="" ref="0x7e3e7620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e3eae38" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e3eae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3e8050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e3ebd28" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e3ebd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3ebf00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3ea010"/>
        <function-ref name="request" scoped="" ref="0x7e3ea0f0"/>
        <function-ref name="granted" scoped="" ref="0x7e3ea1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3ea2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e3e5270" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e3e5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3e5448"/>
        <function-ref name="write" scoped="" ref="0x7e3e5528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e3e6d58" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e3e6d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3e5010"/>
        <function-ref name="write" scoped="" ref="0x7e3e50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e3ea430" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e3ea430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3ea608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e3e8528" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e3e8528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3e8700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e3e81d0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e3e81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3e83a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e3e4608" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e3e4608"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e3e47e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7e3e48c0"/>
        <function-ref name="write" scoped="" ref="0x7e3e49a0"/>
        <function-ref name="beginRead" scoped="" ref="0x7e3e4a80"/>
        <function-ref name="readDone" scoped="" ref="0x7e3e4b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7e3d9488" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7e3d9488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e3d9660"/>
        <function-ref name="cancel" scoped="" ref="0x7e3d9740"/>
        <function-ref name="modify" scoped="" ref="0x7e3d9820"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3d9900"/>
        <function-ref name="resendCCA" scoped="" ref="0x7e3d99e0"/>
        <function-ref name="resend" scoped="" ref="0x7e3d9ac0"/>
        <function-ref name="sendCCA" scoped="" ref="0x7e3d9ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e3ddcf0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e3ddcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3ddec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7e3d9060" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e3d9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e3d9238"/>
        <function-ref name="stop" scoped="" ref="0x7e3d9318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x7e3d9d10" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7e3d9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7e3d9ee8"/>
        <function-ref name="initial" scoped="" ref="0x7e3d8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x7e3d4bf8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x7e3d4bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7e3d4dd0"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7e3d4eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7e3c91f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e3c91f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3c93c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7e3cd010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7e3cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e3cd1e8"/>
        <function-ref name="disable" scoped="" ref="0x7e3cd2c8"/>
        <function-ref name="captured" scoped="" ref="0x7e3cd3a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e3cd488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7e3d0860" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7e3d0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e3cfbf0"/>
        <function-ref name="fired" scoped="" ref="0x7e3cf4b0"/>
        <function-ref name="startAt" scoped="" ref="0x7e3cf8b0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e3cf6b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e3cfdf0"/>
        <function-ref name="start" scoped="" ref="0x7e3cf010"/>
        <function-ref name="stop" scoped="" ref="0x7e3cf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7e3ca1b0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e3ca1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3ca408"/>
        <function-ref name="write" scoped="" ref="0x7e3ca4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e3d15d0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e3d15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e3d17a8"/>
        <function-ref name="cancel" scoped="" ref="0x7e3d1888"/>
        <function-ref name="modify" scoped="" ref="0x7e3d1968"/>
        <function-ref name="sendDone" scoped="" ref="0x7e3d1a48"/>
        <function-ref name="resendCCA" scoped="" ref="0x7e3d1b28"/>
        <function-ref name="resend" scoped="" ref="0x7e3d1c08"/>
        <function-ref name="sendCCA" scoped="" ref="0x7e3d1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7e3ca680" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e3ca680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3ca858"/>
        <function-ref name="write" scoped="" ref="0x7e3ca938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7e3c9568" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e3c9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3c9740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e3cc010" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e3cc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3cc1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7e3cc2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7e3cc3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3cc488"/>
        <function-ref name="get" scoped="" ref="0x7e3cc568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3cc648"/>
        <function-ref name="set" scoped="" ref="0x7e3cc728"/>
        <function-ref name="clr" scoped="" ref="0x7e3cc808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7e3c45b8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7e3c45b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e3c4790"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7e3c4870"/>
        <function-ref name="sfd" scoped="" ref="0x7e3c4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e3d6d98" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e3d6d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3d1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e3cb370" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e3cb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3cb548"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3cb628"/>
        <function-ref name="request" scoped="" ref="0x7e3cb708"/>
        <function-ref name="granted" scoped="" ref="0x7e3cb7e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3cb8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7e3cd620" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e3cd620"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3cd7f8"/>
        <function-ref name="isInput" scoped="" ref="0x7e3cd8d8"/>
        <function-ref name="toggle" scoped="" ref="0x7e3cd9b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3cda98"/>
        <function-ref name="get" scoped="" ref="0x7e3cdb78"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3cdc58"/>
        <function-ref name="set" scoped="" ref="0x7e3cdd38"/>
        <function-ref name="clr" scoped="" ref="0x7e3cde18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7e3caad0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e3caad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3caca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7e3cc9a0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7e3cc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3ccb78"/>
        <function-ref name="isInput" scoped="" ref="0x7e3ccc58"/>
        <function-ref name="toggle" scoped="" ref="0x7e3ccd38"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3cce18"/>
        <function-ref name="get" scoped="" ref="0x7e3ccef8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3cb010"/>
        <function-ref name="set" scoped="" ref="0x7e3cb0f0"/>
        <function-ref name="clr" scoped="" ref="0x7e3cb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e3c4ab8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e3c4ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e3c4c90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e3c4d70"/>
        <function-ref name="led1On" scoped="" ref="0x7e3c4e50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e3c7010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e3c70f0"/>
        <function-ref name="get" scoped="" ref="0x7e3c71d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e3c72b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e3c7630"/>
        <function-ref name="set" scoped="" ref="0x7e3c7390"/>
        <function-ref name="led0On" scoped="" ref="0x7e3c7470"/>
        <function-ref name="led2On" scoped="" ref="0x7e3c7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7e3d1180" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e3d1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e3d1358"/>
        <function-ref name="stop" scoped="" ref="0x7e3d1438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x7e3d1e58" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7e3d1e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7e3d0050"/>
        <function-ref name="initial" scoped="" ref="0x7e3d0130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x7e3d02d8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x7e3d02d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7e3d04b0"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7e3d0590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7e3cba60" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e3cba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e3cbc38"/>
        <function-ref name="writeDone" scoped="" ref="0x7e3cbd18"/>
        <function-ref name="write" scoped="" ref="0x7e3cbdf8"/>
        <function-ref name="beginRead" scoped="" ref="0x7e3cbed8"/>
        <function-ref name="readDone" scoped="" ref="0x7e3ca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7e3cae40" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e3cae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3c9050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e38b900" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e38b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e38bad8"/>
        <function-ref name="write" scoped="" ref="0x7e38bbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e38d190" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e38d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e38d368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e38a190" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e38a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e38a368"/>
        <function-ref name="write" scoped="" ref="0x7e38a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e3892b0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e3892b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e389488"/>
        <function-ref name="write" scoped="" ref="0x7e389568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e38b010" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e38b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e38b1e8"/>
        <function-ref name="write" scoped="" ref="0x7e38b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e38e0b0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e38e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e38e288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e38d840" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e38d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e38da18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e38bd38" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e38bd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e38bf10"/>
        <function-ref name="write" scoped="" ref="0x7e38a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e38d4e8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e38d4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e38d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e38ae38" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e38ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e389050"/>
        <function-ref name="write" scoped="" ref="0x7e389130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e38e408" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e38e408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e38e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e3896e8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e3896e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e3898c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7e3899a0"/>
        <function-ref name="write" scoped="" ref="0x7e389a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7e389b60"/>
        <function-ref name="readDone" scoped="" ref="0x7e389c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e38b448" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e38b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e38b6a0"/>
        <function-ref name="write" scoped="" ref="0x7e38b780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e38db98" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e38db98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e38dd70"/>
        <function-ref name="write" scoped="" ref="0x7e38de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e38e760" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e38e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e38e938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e38f650" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e38f650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e38f828"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e38f908"/>
        <function-ref name="request" scoped="" ref="0x7e38f9e8"/>
        <function-ref name="granted" scoped="" ref="0x7e38fac8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e38fba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e38aa00" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e38aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e38abd8"/>
        <function-ref name="write" scoped="" ref="0x7e38acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e38a5c8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e38a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e38a7a0"/>
        <function-ref name="write" scoped="" ref="0x7e38a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e38fd28" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e38fd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e38ff00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e38ee10" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e38ee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e38d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e38eab8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e38eab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e38ec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e389dc0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e389dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e388010"/>
        <function-ref name="writeDone" scoped="" ref="0x7e3880f0"/>
        <function-ref name="write" scoped="" ref="0x7e3881d0"/>
        <function-ref name="beginRead" scoped="" ref="0x7e3882b0"/>
        <function-ref name="readDone" scoped="" ref="0x7e388390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7e382780" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7e382780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e382958"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7e382a38"/>
        <function-ref name="sfd" scoped="" ref="0x7e382b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e382010" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e382010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3821e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e382c80" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e382c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e382e58"/>
        <function-ref name="receive" scoped="" ref="0x7e381010"/>
        <function-ref name="getPayload" scoped="" ref="0x7e3810f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7e382358" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e382358"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e382530"/>
        <function-ref name="stop" scoped="" ref="0x7e382610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7e37cc18" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7e37cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e37cdf0"/>
        <function-ref name="isInput" scoped="" ref="0x7e37ced0"/>
        <function-ref name="toggle" scoped="" ref="0x7e37a010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e37a0f0"/>
        <function-ref name="get" scoped="" ref="0x7e37a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e37a2b0"/>
        <function-ref name="set" scoped="" ref="0x7e37a390"/>
        <function-ref name="clr" scoped="" ref="0x7e37a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7e374178" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7e374178"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e374350"/>
        <function-ref name="runTask" scoped="" ref="0x7e374430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7e37a608" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7e37a608"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e37a7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e37a8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e37a9a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e37aa80"/>
        <function-ref name="get" scoped="" ref="0x7e37ab60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e37ac40"/>
        <function-ref name="set" scoped="" ref="0x7e37ad20"/>
        <function-ref name="clr" scoped="" ref="0x7e37ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7e37d780" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7e37d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7e37d958"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7e37da38"/>
        <function-ref name="sfd" scoped="" ref="0x7e37db18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7e378448" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7e378448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e378620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e37c288" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e37c288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e37c460"/>
        <function-ref name="isInput" scoped="" ref="0x7e37c540"/>
        <function-ref name="toggle" scoped="" ref="0x7e37c620"/>
        <function-ref name="isOutput" scoped="" ref="0x7e37c700"/>
        <function-ref name="get" scoped="" ref="0x7e37c7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e37c8c0"/>
        <function-ref name="set" scoped="" ref="0x7e37c9a0"/>
        <function-ref name="clr" scoped="" ref="0x7e37ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e37d010" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e37d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e37d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e37dc80" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e37dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e37de58"/>
        <function-ref name="receive" scoped="" ref="0x7e37c010"/>
        <function-ref name="getPayload" scoped="" ref="0x7e37c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e379628" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e379628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e379800"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3798e0"/>
        <function-ref name="request" scoped="" ref="0x7e3799c0"/>
        <function-ref name="granted" scoped="" ref="0x7e379aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e379b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7e379d18" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e379d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e379ef0"/>
        <function-ref name="writeDone" scoped="" ref="0x7e378010"/>
        <function-ref name="write" scoped="" ref="0x7e3780f0"/>
        <function-ref name="beginRead" scoped="" ref="0x7e3781d0"/>
        <function-ref name="readDone" scoped="" ref="0x7e3782b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e378b00" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e378b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e378d58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e378e38"/>
        <function-ref name="led1On" scoped="" ref="0x7e378f18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e377010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e3770f0"/>
        <function-ref name="get" scoped="" ref="0x7e3771d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e3772b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e377630"/>
        <function-ref name="set" scoped="" ref="0x7e377390"/>
        <function-ref name="led0On" scoped="" ref="0x7e377470"/>
        <function-ref name="led2On" scoped="" ref="0x7e377550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7e37d358" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e37d358"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e37d530"/>
        <function-ref name="stop" scoped="" ref="0x7e37d610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7e379010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e379010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e3791e8"/>
        <function-ref name="disable" scoped="" ref="0x7e3792c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e3793a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e379488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7e3787c0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e3787c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e378998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e3419a8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e3419a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e341b80"/>
        <function-ref name="write" scoped="" ref="0x7e341c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e342260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e342260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e342438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e340270" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e340270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e340448"/>
        <function-ref name="write" scoped="" ref="0x7e340528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e330368" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e330368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e330540"/>
        <function-ref name="write" scoped="" ref="0x7e330620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e3410b8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e3410b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e341290"/>
        <function-ref name="write" scoped="" ref="0x7e341370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e344190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e344190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e344368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e342910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e342910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e342ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e341de0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e341de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e340010"/>
        <function-ref name="write" scoped="" ref="0x7e3400f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e3425b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e3425b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e342790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e340f18" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e340f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e330108"/>
        <function-ref name="write" scoped="" ref="0x7e3301e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e3444e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e3444e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3446c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e3307a0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e3307a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e330978"/>
        <function-ref name="writeDone" scoped="" ref="0x7e330a58"/>
        <function-ref name="write" scoped="" ref="0x7e330b38"/>
        <function-ref name="beginRead" scoped="" ref="0x7e330c18"/>
        <function-ref name="readDone" scoped="" ref="0x7e330cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e3414f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e3414f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e341748"/>
        <function-ref name="write" scoped="" ref="0x7e341828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e342c68" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e342c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e342e40"/>
        <function-ref name="write" scoped="" ref="0x7e342f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e344840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e344840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e344a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e345690" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e345690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e345868"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e345948"/>
        <function-ref name="request" scoped="" ref="0x7e345a28"/>
        <function-ref name="granted" scoped="" ref="0x7e345b08"/>
        <function-ref name="isOwner" scoped="" ref="0x7e345be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e340ae0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e340ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e340cb8"/>
        <function-ref name="write" scoped="" ref="0x7e340d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e3406a8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e3406a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e340880"/>
        <function-ref name="write" scoped="" ref="0x7e340960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e345d68" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e345d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e344010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e344ef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e344ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3420e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e344b98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e344b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e344d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e330e78" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e330e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e32f070"/>
        <function-ref name="writeDone" scoped="" ref="0x7e32f150"/>
        <function-ref name="write" scoped="" ref="0x7e32f230"/>
        <function-ref name="beginRead" scoped="" ref="0x7e32f310"/>
        <function-ref name="readDone" scoped="" ref="0x7e32f3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e310b38" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e310b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e310d10"/>
        <function-ref name="rand32" scoped="" ref="0x7e310df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e310288" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e310288"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3108b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e3245f0" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e3245f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3247c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e30da00" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e30da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e30dbd8"/>
        <function-ref name="rand32" scoped="" ref="0x7e30dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e30d150" loc="33:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e30d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e30d778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e322d20" loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e322d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e322ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7e308968" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e308968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e308b40"/>
        <function-ref name="rand32" scoped="" ref="0x7e308c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7e3080b8" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7e3080b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3086e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e30cc78" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e30cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e30ce50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7e2f0c20" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e2f0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e2f0df8"/>
        <function-ref name="getRssi" scoped="" ref="0x7e2f0ed8"/>
        <function-ref name="getPower" scoped="" ref="0x7e2ea010"/>
        <function-ref name="getLqi" scoped="" ref="0x7e2ea0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7e2ea290" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7e2ea290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e2ea468"/>
        <function-ref name="noAck" scoped="" ref="0x7e2ea548"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e2ea628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e2cbc40" loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e2cbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e2cbe18"/>
        <function-ref name="stopDone" scoped="" ref="0x7e2cbef8"/>
        <function-ref name="start" scoped="" ref="0x7e2ca010"/>
        <function-ref name="stop" scoped="" ref="0x7e2ca0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e2ca4c8" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e2ca4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e2ca6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e2ca780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e2ca860"/>
        <function-ref name="cancel" scoped="" ref="0x7e2ca940"/>
        <function-ref name="sendDone" scoped="" ref="0x7e2caa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e2c9318" loc="38:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e2c9318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e2c94f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e2c95d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e2c96b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e2c9790"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e2c9870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e2cadf8" loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e2cadf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e2c9010"/>
        <function-ref name="receive" scoped="" ref="0x7e2c90f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e2c91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e2c8838" loc="42:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e2c8838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e2c8a10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e2c8af0"/>
        <function-ref name="led1On" scoped="" ref="0x7e2c8bd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e2c8cb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e2c8d90"/>
        <function-ref name="get" scoped="" ref="0x7e2c8e70"/>
        <function-ref name="led1Off" scoped="" ref="0x7e2c7010"/>
        <function-ref name="led2Off" scoped="" ref="0x7e2c7390"/>
        <function-ref name="set" scoped="" ref="0x7e2c70f0"/>
        <function-ref name="led0On" scoped="" ref="0x7e2c71d0"/>
        <function-ref name="led2On" scoped="" ref="0x7e2c72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e2c8328" loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e2c8328"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e2c8500"/>
        <function-ref name="noAck" scoped="" ref="0x7e2c85e0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e2c86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e2c99c0" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e2c99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e2c9b98"/>
        <function-ref name="address" scoped="" ref="0x7e2c9c78"/>
        <function-ref name="destination" scoped="" ref="0x7e2c9d58"/>
        <function-ref name="setSource" scoped="" ref="0x7e2c9e38"/>
        <function-ref name="setDestination" scoped="" ref="0x7e2c9f18"/>
        <function-ref name="type" scoped="" ref="0x7e2c8010"/>
        <function-ref name="setType" scoped="" ref="0x7e2c80f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e2c81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7e26c758" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7e26c758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e26c930"/>
        <function-ref name="getPayload" scoped="" ref="0x7e26ca10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e26caf0"/>
        <function-ref name="cancel" scoped="" ref="0x7e26cbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e26ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7e26ce10" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7e26ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e26b010"/>
        <function-ref name="receive" scoped="" ref="0x7e26b0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e26b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e2c55c8" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e2c55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e2c57b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e2c5890"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e2c5970"/>
        <function-ref name="cancel" scoped="" ref="0x7e2c5a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7e2c5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e2c4b68" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e2c4b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e2c4d40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e2c4e20"/>
        <function-ref name="getPayload" scoped="" ref="0x7e2c4f00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e26c010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e26c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e2c5d08" loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e2c5d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e2c5ef0"/>
        <function-ref name="receive" scoped="" ref="0x7e2c4010"/>
        <function-ref name="getPayload" scoped="" ref="0x7e2c40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e26c230" loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e26c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e26c408"/>
        <function-ref name="noAck" scoped="" ref="0x7e26c4e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e26c5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e2c4230" loc="38:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e2c4230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e2c4408"/>
        <function-ref name="address" scoped="" ref="0x7e2c44e8"/>
        <function-ref name="destination" scoped="" ref="0x7e2c45c8"/>
        <function-ref name="setSource" scoped="" ref="0x7e2c46a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e2c4788"/>
        <function-ref name="type" scoped="" ref="0x7e2c4868"/>
        <function-ref name="setType" scoped="" ref="0x7e2c4948"/>
        <function-ref name="isForMe" scoped="" ref="0x7e2c4a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e269ef8" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e269ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e2660e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7e2661c0"/>
        <function-ref name="start" scoped="" ref="0x7e2662a0"/>
        <function-ref name="stop" scoped="" ref="0x7e266380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e266e88" loc="41:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e266e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7eea1c18"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e264070"/>
        <function-ref name="getPayload" scoped="" ref="0x7e264150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e264230"/>
        <function-ref name="cancel" scoped="" ref="0x7e264310"/>
        <function-ref name="sendDone" scoped="" ref="0x7e2643f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e269bd0" loc="38:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e269bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e269da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e266738" loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e266738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7eea1c18"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e266910"/>
        <function-ref name="receive" scoped="" ref="0x7e2669f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e266ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e251de0" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e251de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e262010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e2620f0"/>
        <function-ref name="led1On" scoped="" ref="0x7e2621d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e2622b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e262390"/>
        <function-ref name="get" scoped="" ref="0x7e262470"/>
        <function-ref name="led1Off" scoped="" ref="0x7e262550"/>
        <function-ref name="led2Off" scoped="" ref="0x7e2628d0"/>
        <function-ref name="set" scoped="" ref="0x7e262630"/>
        <function-ref name="led0On" scoped="" ref="0x7e262710"/>
        <function-ref name="led2On" scoped="" ref="0x7e2627f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7e251900" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7e251900"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7eea1c18"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7e251ad8"/>
        <function-ref name="offset" scoped="" ref="0x7e251bb8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7e251c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e22e9e8" loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e22e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e22ebc0"/>
        <function-ref name="stopDone" scoped="" ref="0x7e22eca0"/>
        <function-ref name="start" scoped="" ref="0x7e22ed80"/>
        <function-ref name="stop" scoped="" ref="0x7e22ee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7e1ca788" loc="324:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7e1ca788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e1ca960"/>
        <function-ref name="runTask" scoped="" ref="0x7e1caa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7e20eb88" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7e20eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e20ed60"/>
        <function-ref name="stop" scoped="" ref="0x7e20ee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7e202258" loc="188:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7e202258"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e202430"/>
        <function-ref name="runTask" scoped="" ref="0x7e202510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e22e6c0" loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e22e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e22e898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7e1cb828" loc="319:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7e1cb828"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e1cba00"/>
        <function-ref name="runTask" scoped="" ref="0x7e1cbae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7e220f10" loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7e220f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7e223108"/>
        <function-ref name="resetSend" scoped="" ref="0x7e2231e8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7e2232c8"/>
        <function-ref name="resetReceive" scoped="" ref="0x7e2233a8"/>
        <function-ref name="putData" scoped="" ref="0x7e223488"/>
        <function-ref name="putDone" scoped="" ref="0x7e223568"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7e223648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e223790" loc="71:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e223790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e223968"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e223a48"/>
        <function-ref name="led1On" scoped="" ref="0x7e223b28"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e223c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e223ce8"/>
        <function-ref name="get" scoped="" ref="0x7e223dc8"/>
        <function-ref name="led1Off" scoped="" ref="0x7e223ea8"/>
        <function-ref name="led2Off" scoped="" ref="0x7e2222b0"/>
        <function-ref name="set" scoped="" ref="0x7e222010"/>
        <function-ref name="led0On" scoped="" ref="0x7e2220f0"/>
        <function-ref name="led2On" scoped="" ref="0x7e2221d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7e228518" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7e228518"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7e2286f0"/>
        <function-ref name="nextByte" scoped="" ref="0x7e2287d0"/>
        <function-ref name="startSend" scoped="" ref="0x7e2288b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7e228990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7e225b30" loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7e225b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7e225d08"/>
        <function-ref name="byteReceived" scoped="" ref="0x7e225de8"/>
        <function-ref name="endPacket" scoped="" ref="0x7e225ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7e122030" loc="261:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7e122030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e122208"/>
        <function-ref name="runTask" scoped="" ref="0x7e1222e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e180c18" loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e180c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7eea1c18"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e180e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7e180ee0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e124010"/>
        <function-ref name="cancel" scoped="" ref="0x7e1240f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e1241d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7e122468" loc="144:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7e122468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e122640"/>
        <function-ref name="runTask" scoped="" ref="0x7e122720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e180698" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e180698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7eea1c18"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e180880"/>
        <function-ref name="receive" scoped="" ref="0x7e180960"/>
        <function-ref name="getPayload" scoped="" ref="0x7e180a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7e1243f8" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7e1243f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7eea1c18"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7e1245e0"/>
        <function-ref name="offset" scoped="" ref="0x7e1246c0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7e1247a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e1233f0" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e1233f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e1235c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e1236a8"/>
        <function-ref name="led1On" scoped="" ref="0x7e123788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e123868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e123948"/>
        <function-ref name="get" scoped="" ref="0x7e123a28"/>
        <function-ref name="led1Off" scoped="" ref="0x7e123b08"/>
        <function-ref name="led2On" scoped="" ref="0x7e123e88"/>
        <function-ref name="set" scoped="" ref="0x7e123cc8"/>
        <function-ref name="led2Off" scoped="" ref="0x7e123be8"/>
        <function-ref name="led0On" scoped="" ref="0x7e123da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7e124db8" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7e124db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7e123010"/>
        <function-ref name="nextByte" scoped="" ref="0x7e1230f0"/>
        <function-ref name="startSend" scoped="" ref="0x7e1231d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7e1232b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7e1248e0" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7e1248e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7e124ab8"/>
        <function-ref name="byteReceived" scoped="" ref="0x7e124b98"/>
        <function-ref name="endPacket" scoped="" ref="0x7e124c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7e108818" loc="38:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7e108818"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e1089f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7e108ad0"/>
        <function-ref name="receive" scoped="" ref="0x7e108bb0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7e108c90"/>
        <function-ref name="receiveDone" scoped="" ref="0x7e108d70"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7e108e50"/>
        <function-ref name="sendDone" scoped="" ref="0x7e10d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7e1104d0" loc="36:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7e1104d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7e1106a8"/>
        <function-ref name="resetSend" scoped="" ref="0x7e110788"/>
        <function-ref name="dataReceived" scoped="" ref="0x7e110868"/>
        <function-ref name="resetReceive" scoped="" ref="0x7e110948"/>
        <function-ref name="putData" scoped="" ref="0x7e110a28"/>
        <function-ref name="putDone" scoped="" ref="0x7e110b08"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7e110be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e10d158" loc="39:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e10d158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e10d330"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e10d410"/>
        <function-ref name="led1On" scoped="" ref="0x7e10d4f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e10d5d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e10d6b0"/>
        <function-ref name="get" scoped="" ref="0x7e10d790"/>
        <function-ref name="led1Off" scoped="" ref="0x7e10d870"/>
        <function-ref name="led2Off" scoped="" ref="0x7e10dbf0"/>
        <function-ref name="set" scoped="" ref="0x7e10d950"/>
        <function-ref name="led0On" scoped="" ref="0x7e10da30"/>
        <function-ref name="led2On" scoped="" ref="0x7e10db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7e0ea010" loc="42:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7e0ea010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0ea1e8"/>
        <function-ref name="receive" scoped="" ref="0x7e0ea2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7e111da0" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7e111da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0ec010"/>
        <function-ref name="receivedByte" scoped="" ref="0x7e0ec0f0"/>
        <function-ref name="receive" scoped="" ref="0x7e0ec1d0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7e0ec2b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7e0ec390"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7e0ec470"/>
        <function-ref name="sendDone" scoped="" ref="0x7e0ec550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e111978" loc="40:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e111978"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e111b50"/>
        <function-ref name="stop" scoped="" ref="0x7e111c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7e0e5678" loc="41:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7e0e5678"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0e5850"/>
        <function-ref name="receive" scoped="" ref="0x7e0e5930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7e0e5aa0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7e0e5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0e5c78"/>
        <function-ref name="receivedByte" scoped="" ref="0x7e0e5d58"/>
        <function-ref name="receive" scoped="" ref="0x7e0e5e38"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7e0e5f18"/>
        <function-ref name="receiveDone" scoped="" ref="0x7e0e4010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7e0e40f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e0e41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7e0e4470" loc="43:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e0e4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120e58"/>
            <typename><typedef-ref name="TMicro" ref="0x7f112010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e0e4bc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e0e2010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e0e4dc0"/>
        <function-ref name="overflow" scoped="" ref="0x7e0e2210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e0e5250" loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e0e5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0e5428"/>
        <function-ref name="stop" scoped="" ref="0x7e0e5508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7e0e0c68" loc="44:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7e0e0c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0e0e40"/>
        <function-ref name="receive" scoped="" ref="0x7e0e0f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7e0d2930" loc="47:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7e0d2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0d2b08"/>
        <function-ref name="stop" scoped="" ref="0x7e0d2be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e0e0518" loc="42:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e0e0518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0e06f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7e0d2098" loc="45:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7e0d2098"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0d2270"/>
        <function-ref name="receivedByte" scoped="" ref="0x7e0d2350"/>
        <function-ref name="receive" scoped="" ref="0x7e0d2430"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7e0d2510"/>
        <function-ref name="receiveDone" scoped="" ref="0x7e0d25f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7e0d26d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e0d27b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7e0a5ea8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e0a5ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120e58"/>
            <typename><typedef-ref name="TMicro" ref="0x7f112010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e0a4610"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e0a4a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e0a4810"/>
        <function-ref name="overflow" scoped="" ref="0x7e0a4c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7e0a5270" loc="49:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7e0a5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e0a5448"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e0a5528"/>
        <function-ref name="rxDone" scoped="" ref="0x7e0a5608"/>
        <function-ref name="txDone" scoped="" ref="0x7e0a56e8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e0a57c8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e0a58a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e0a5988"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e0a5a68"/>
        <function-ref name="tx" scoped="" ref="0x7e0a5b48"/>
        <function-ref name="rx" scoped="" ref="0x7e0a5c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7e0e0850" loc="43:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7e0e0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0e0a28"/>
        <function-ref name="stop" scoped="" ref="0x7e0e0b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7e0d2d68" loc="48:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7e0d2d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0a5010"/>
        <function-ref name="stop" scoped="" ref="0x7e0a50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7e089d68" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7e089d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e088010"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e0880f0"/>
        <function-ref name="rxDone" scoped="" ref="0x7e0881d0"/>
        <function-ref name="txDone" scoped="" ref="0x7e0882b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e088390"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e088470"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e088550"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e088630"/>
        <function-ref name="tx" scoped="" ref="0x7e088710"/>
        <function-ref name="rx" scoped="" ref="0x7e0887f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7e087270" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7e087270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e087448"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e087528"/>
        <function-ref name="rxDone" scoped="" ref="0x7e087608"/>
        <function-ref name="txDone" scoped="" ref="0x7e0876e8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e0877c8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e0878a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e087988"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e087a68"/>
        <function-ref name="tx" scoped="" ref="0x7e087b48"/>
        <function-ref name="rx" scoped="" ref="0x7e087c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7e089930" loc="39:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7e089930"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e089b08"/>
        <function-ref name="stop" scoped="" ref="0x7e089be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7e088970" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7e088970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e088b48"/>
        <function-ref name="stop" scoped="" ref="0x7e088c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7e088da8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7e088da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e087010"/>
        <function-ref name="stop" scoped="" ref="0x7e0870f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7e0894f8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7e0894f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0896d0"/>
        <function-ref name="stop" scoped="" ref="0x7e0897b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7e082030" loc="71:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7e082030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e082208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7e082c58" loc="74:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7e082c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e082e30"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e082f10"/>
        <function-ref name="rxDone" scoped="" ref="0x7e080010"/>
        <function-ref name="txDone" scoped="" ref="0x7e0800f0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e0801d0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e0802b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e080390"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e080470"/>
        <function-ref name="tx" scoped="" ref="0x7e080550"/>
        <function-ref name="rx" scoped="" ref="0x7e080630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7e0807c8" loc="76:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7e0807c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e0809a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7e073468" loc="79:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7e073468"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7e073640"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7e073720"/>
        <function-ref name="rxDone" scoped="" ref="0x7e073800"/>
        <function-ref name="txDone" scoped="" ref="0x7e0738e0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7e0739c0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7e073aa0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7e073b80"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7e073c60"/>
        <function-ref name="tx" scoped="" ref="0x7e073d40"/>
        <function-ref name="rx" scoped="" ref="0x7e073e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7e082800" loc="73:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7e082800"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0829d8"/>
        <function-ref name="stop" scoped="" ref="0x7e082ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7e080b40" loc="77:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7e080b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e080d18"/>
        <function-ref name="stop" scoped="" ref="0x7e080df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7e073010" loc="78:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7e073010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0731e8"/>
        <function-ref name="stop" scoped="" ref="0x7e0732c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7e072010" loc="81:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e072010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7e0721e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7e0722c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7e0723a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7e072488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7e072568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7e0726d8" loc="82:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7e0726d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e0728b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7e0823a8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7e0823a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e082580"/>
        <function-ref name="stop" scoped="" ref="0x7e082660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e026798" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e026798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120e58"/>
            <typename><typedef-ref name="TMicro" ref="0x7f112010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e026ee8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e0252f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e0250f8"/>
        <function-ref name="overflow" scoped="" ref="0x7e0254f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e021b60" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e021b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120e58"/>
            <typename><typedef-ref name="TThree" ref="0x7f081ca0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e020308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e020708"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e020508"/>
        <function-ref name="overflow" scoped="" ref="0x7e020908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e00d7a8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e00d7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e00d980"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e00da60"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e00db40"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e00dc20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e00dd00"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e00dde0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e00dec0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e00b010"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e00b0f0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e00b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e00b3f0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e00b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e00ab90"/>
        <function-ref name="test" scoped="" ref="0x7e00a790"/>
        <function-ref name="get" scoped="" ref="0x7e00ba38"/>
        <function-ref name="captured" scoped="" ref="0x7e00bed8"/>
        <function-ref name="reset" scoped="" ref="0x7e00a190"/>
        <function-ref name="isOn" scoped="" ref="0x7e00a990"/>
        <function-ref name="set" scoped="" ref="0x7e00bc38"/>
        <function-ref name="start" scoped="" ref="0x7e00a390"/>
        <function-ref name="stop" scoped="" ref="0x7e00a590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e009158" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e009158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e007468"/>
        <function-ref name="fired" scoped="" ref="0x7e009c40"/>
        <function-ref name="get" scoped="" ref="0x7e0097a0"/>
        <function-ref name="reset" scoped="" ref="0x7e009e40"/>
        <function-ref name="isOn" scoped="" ref="0x7e007668"/>
        <function-ref name="set" scoped="" ref="0x7e0099a0"/>
        <function-ref name="start" scoped="" ref="0x7e007068"/>
        <function-ref name="stop" scoped="" ref="0x7e007268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e00fa00" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e00fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e00d128"/>
        <function-ref name="test" scoped="" ref="0x7e00ed08"/>
        <function-ref name="get" scoped="" ref="0x7e00e068"/>
        <function-ref name="setScale" scoped="" ref="0x7e00d328"/>
        <function-ref name="getScale" scoped="" ref="0x7e00d5c8"/>
        <function-ref name="reset" scoped="" ref="0x7e00e708"/>
        <function-ref name="overflow" scoped="" ref="0x7e00e508"/>
        <function-ref name="isOn" scoped="" ref="0x7e00ef08"/>
        <function-ref name="set" scoped="" ref="0x7e00e268"/>
        <function-ref name="start" scoped="" ref="0x7e00e908"/>
        <function-ref name="stop" scoped="" ref="0x7e00eb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e0009b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e0009b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e000b88"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e000c68"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e000d48"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e000e28"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e000f08"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7dff3010"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7dff30f0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7dff31d0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7dff32b0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7dff3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7dff00b8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7dff00b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dfef410"/>
        <function-ref name="fired" scoped="" ref="0x7dff0ba0"/>
        <function-ref name="get" scoped="" ref="0x7dff0700"/>
        <function-ref name="reset" scoped="" ref="0x7dff0da0"/>
        <function-ref name="isOn" scoped="" ref="0x7dfef610"/>
        <function-ref name="set" scoped="" ref="0x7dff0900"/>
        <function-ref name="start" scoped="" ref="0x7dfef010"/>
        <function-ref name="stop" scoped="" ref="0x7dfef210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7dff35b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7dff35b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7dff2d58"/>
        <function-ref name="test" scoped="" ref="0x7dff2958"/>
        <function-ref name="get" scoped="" ref="0x7dff3bf8"/>
        <function-ref name="captured" scoped="" ref="0x7dff20b8"/>
        <function-ref name="reset" scoped="" ref="0x7dff2358"/>
        <function-ref name="isOn" scoped="" ref="0x7dff2b58"/>
        <function-ref name="set" scoped="" ref="0x7dff3df8"/>
        <function-ref name="start" scoped="" ref="0x7dff2558"/>
        <function-ref name="stop" scoped="" ref="0x7dff2758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7dfef890" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7dfef890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dfeeb98"/>
        <function-ref name="fired" scoped="" ref="0x7dfee398"/>
        <function-ref name="get" scoped="" ref="0x7dfefed8"/>
        <function-ref name="reset" scoped="" ref="0x7dfee598"/>
        <function-ref name="isOn" scoped="" ref="0x7dfeed98"/>
        <function-ref name="set" scoped="" ref="0x7dfee0f8"/>
        <function-ref name="start" scoped="" ref="0x7dfee798"/>
        <function-ref name="stop" scoped="" ref="0x7dfee998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7dfec030" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7dfec030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dfeb330"/>
        <function-ref name="fired" scoped="" ref="0x7dfecb18"/>
        <function-ref name="get" scoped="" ref="0x7dfec678"/>
        <function-ref name="reset" scoped="" ref="0x7dfecd18"/>
        <function-ref name="isOn" scoped="" ref="0x7dfeb530"/>
        <function-ref name="set" scoped="" ref="0x7dfec878"/>
        <function-ref name="start" scoped="" ref="0x7dfecf18"/>
        <function-ref name="stop" scoped="" ref="0x7dfeb130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e003c00" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e003c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e000330"/>
        <function-ref name="test" scoped="" ref="0x7e002f18"/>
        <function-ref name="get" scoped="" ref="0x7e002278"/>
        <function-ref name="setScale" scoped="" ref="0x7e000530"/>
        <function-ref name="getScale" scoped="" ref="0x7e0007d0"/>
        <function-ref name="reset" scoped="" ref="0x7e002918"/>
        <function-ref name="overflow" scoped="" ref="0x7e002718"/>
        <function-ref name="isOn" scoped="" ref="0x7e000130"/>
        <function-ref name="set" scoped="" ref="0x7e002478"/>
        <function-ref name="start" scoped="" ref="0x7e002b18"/>
        <function-ref name="stop" scoped="" ref="0x7e002d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df83488" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df83488"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df83660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7df83870" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7df83870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7df80010"/>
        <function-ref name="test" scoped="" ref="0x7df82b78"/>
        <function-ref name="get" scoped="" ref="0x7df83eb8"/>
        <function-ref name="setScale" scoped="" ref="0x7df80210"/>
        <function-ref name="getScale" scoped="" ref="0x7df804b0"/>
        <function-ref name="reset" scoped="" ref="0x7df82578"/>
        <function-ref name="overflow" scoped="" ref="0x7df82378"/>
        <function-ref name="isOn" scoped="" ref="0x7df82d78"/>
        <function-ref name="set" scoped="" ref="0x7df820d8"/>
        <function-ref name="start" scoped="" ref="0x7df82778"/>
        <function-ref name="stop" scoped="" ref="0x7df82978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7df85438" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7df85438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120e58"/>
            <typename><typedef-ref name="TThree" ref="0x7f081ca0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df85b88"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df74010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df85d88"/>
        <function-ref name="overflow" scoped="" ref="0x7df74210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7df74478" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7df74478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7df72c10"/>
        <function-ref name="test" scoped="" ref="0x7df72810"/>
        <function-ref name="get" scoped="" ref="0x7df74ac0"/>
        <function-ref name="setScale" scoped="" ref="0x7df72e10"/>
        <function-ref name="getScale" scoped="" ref="0x7df710d8"/>
        <function-ref name="reset" scoped="" ref="0x7df72210"/>
        <function-ref name="overflow" scoped="" ref="0x7df72010"/>
        <function-ref name="isOn" scoped="" ref="0x7df72a10"/>
        <function-ref name="set" scoped="" ref="0x7df74cc0"/>
        <function-ref name="start" scoped="" ref="0x7df72410"/>
        <function-ref name="stop" scoped="" ref="0x7df72610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7df6f9f0" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7df6f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120e58"/>
            <typename><typedef-ref name="TThree" ref="0x7f081ca0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df6e200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df6e600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df6e400"/>
        <function-ref name="overflow" scoped="" ref="0x7df6e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e022980" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e022980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120e58"/>
            <typename><typedef-ref name="TMicro" ref="0x7f112010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7df6f0f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7df6f4f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7df6f2f8"/>
        <function-ref name="overflow" scoped="" ref="0x7df6f6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7df68010" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7df68010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7df681e8"/>
        <function-ref name="offset" scoped="" ref="0x7df682c8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7df683a8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ef80ed8" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ef827b8" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7ef527c8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7ef52570" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7ef60268" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7ef60838" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ef605c0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7ef60e10" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ef60b90" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7ef52208" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f230010" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f2307f8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f230428" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f210198" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f2105a0" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f0513c8" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efe0028" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f152338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f001ee8" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7ee80e18" loc="88:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ee80b78" loc="88:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7ee73930" loc="110:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ee736e0" loc="110:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ee80858" loc="79:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if issuing the start command was successful&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ee733c0" loc="102:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Stop the component and pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;</short>
          <long>&#10; Stop the component and pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10; Return values of SUCCESS will always result in a&#10; &#60;code>stopDone()&#60;/code> event being signalled.&#10;&#10; @return SUCCESS if issuing the stop command was successful&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="payloadLength" ref="0x7ede07d0" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This call is identical&#10; to &#60;TT>Packet.payloadLength&#60;/TT>, and is included in Receive as a&#10; convenience.&#10;&#10; @param  msg      the packet&#10; @return          the length of the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ede0550" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7ede18a0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
              <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ede1010" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7ede11b0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ede1338" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ede0200" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return point to a protocol's payload region in a packet. </short>
          <long>&#10; Return point to a protocol's payload region in a packet.  If len&#10; is not NULL, getPayload will return the length of the payload in&#10; it. This call is identical to &#60;TT>Packet.getPayload&#60;/TT>, and is&#10; included in Receive as a convenience.&#10;&#10; @param  msg      the packet&#10; @param  len      a pointer to where to store the payload length&#10; @return          a pointer to the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ede1be8" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ede1d90" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="source" ref="0x7edc0148" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eea3aa8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7edc1e68" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7edc1530" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eea3aa8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0x7edc1b18" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7eea3aa8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7edc1888" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7edb3328" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eea3aa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7edc0d20" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7edc0eb0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eea3aa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7edc09d8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eea3aa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7edc0490" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7edc0620" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eea3aa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7edb2010" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7edb3da0" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7edb2850" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7edb2350" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7edb24d8" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7eea3700"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7edb3a58" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7edb3670" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7edd25e8" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7edd2398" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7edd2c58" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7edd2938" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7edc42e0" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.  If&#10; len is not NULL, getPayload will return the length of the payload&#10; in it, which is the same as the return value from&#10; payloadLength(). If a protocol does not support variable length&#10; packets, then *len is equal to maxPayloadLength().&#10;&#10; @param msg   the packet&#10; @param len   pointer to where the current payload length should be stored.&#10; @return      a pointer to the packet's data payload for this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7edd0d60" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7edd0f08" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7edd0a18" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7edd0540" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7edd0010" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7edd0198" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7ed941c0" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7ed94598" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7ed94908" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7ed93070" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7ed93b28" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ed92250" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7ed94c78" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ed92928" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7ed92588" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7eda0e38" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7ed933e0" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7ed93750" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7edf3440" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eea3aa8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ee009a0" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7eea3aa8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ee00b50" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ee00cd8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7edf2e30" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7edf2b18" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7edf27d0" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7edf3b70" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7edf3788" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7edf2380" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7edf3eb8" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7edf2068" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ecf4408" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ecf4720" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ed01dc8" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ecf4d58" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ecf40f0" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ecf4a38" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ed017a8" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ed01ab8" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7ea75090" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea82ca8" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7ea75728" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea753f8" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7ea75db8" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea75a98" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7ea62f08" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ea62b50" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7ea62cd8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7ea60500" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fdb09c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ea60298" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7ea627e8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.&#10;&#10;</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ea625f8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7ea60ad8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ea60868" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ea43b58" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea434c0" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ea43648" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ea41518" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea411f8" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ea42e98" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ea42250" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea43ea0" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ea42a48" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ea42598" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ea42720" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e9a58b8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send a message with CCA disabled.&#10;&#10;</short>
          <long>&#10; Send a message with CCA disabled.&#10;&#10; @param p_msg message to send.&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e9a56a0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e9a4408" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.&#10;&#10;</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="modify" ref="0x7e9a2468" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e9a4e50" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7e9a2010" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e9a2198" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e9a4b10" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10;</short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e9a4770" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e9a48f8" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resendCCA" ref="0x7e9a5c88" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send the previous message again with CCA enabled.&#10;&#10;</short>
          <long>&#10; Send the previous message again with CCA enabled.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resend" ref="0x7e9a4060" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send the previous message again with CCA disabled.&#10;&#10;</short>
          <long>&#10; Send the previous message again with CCA disabled.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sendCCA" ref="0x7e9a5338" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send a message with CCA enabled.&#10;&#10;</short>
          <long>&#10; Send a message with CCA enabled.&#10;&#10; @param p_msg message to send.&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e9a5120" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7e995c88" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7e9958d0" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7e9b0770" loc="73:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e9b0be0" loc="82:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7e9b5dc0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7e9b4bc8" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Disable RX.&#10;&#10;</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7e9b4848" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Enable RX.&#10;&#10;</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7e9b52e0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7e9b59c8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.&#10;&#10;</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7e9b4128" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7e9b44c8" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Stop the oscillator.&#10;&#10;</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7e9b5630" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.10 $&#10; @date $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7e9c1668" loc="101:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.&#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7e9c3f10" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x7e9c3ae0" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7e9c1250" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7e9c1a70" loc="109:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="103:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="29:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.&#10;</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x7e9974f8" loc="43:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.&#10;</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e9972a8" loc="43:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x7e9a6f08" loc="36:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e9a6cd0" loc="36:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x7e947d00" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e947b98" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7e9464d8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e946370" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7e946ca0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e946b38" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7e9454a0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e945338" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7e946810" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sync" ref="0x7e947878" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7e946050" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the channel of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7e945010" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e9324c0" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e9324c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7e9325d8" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e9325d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7e9305d8" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e9325d8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e931408" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7e930260" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e9325d8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e9325d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7e931b80" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e9325d8"/></type-var>
          </variable>
          <variable name="dt" ref="0x7e931d10" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e9325d8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7e931840" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7e930a10" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e9325d8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x7e932c98" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e9325d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7e932a00" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e9325d8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e9310d0" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e9118b0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.&#10;&#10;</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ee70e88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e911690" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e911e18" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.&#10; &#10;</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ee70e88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e911c00" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.&#10;</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7e904ae0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ee70e88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e9152c8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ee70e88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e916ce0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e916e88" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e915030" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e915bd8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ee70e88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e915610" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e9157b8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e915940" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.1.2.3 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e921ae0" loc="57:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e921738" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10;</short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7e921378" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7e921050" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7e867b78" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f082700"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f082950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7e868b08" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b19f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1c48"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e8689a0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b19f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1c48"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7e867368" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f090558"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0907a8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7e871b00" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2b78"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2dc8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7e867820" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f090558"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0907a8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7e8676b8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f090558"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0907a8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7e866068" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f082700"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f082950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7e867ec8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f082700"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f082950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7e868188" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0ae0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7e871e38" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b19f8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1c48"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7e868648" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2b78"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2dc8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e8684e0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2b78"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2dc8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7e867010" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0ae0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e868e58" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0ae0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7e872998" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e872998"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7e861e70" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7e861c88" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7e8615c8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e872e08" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e872998"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7e862880" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e872998"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e8626a0" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e872998"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e862bb8" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e861950" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e862358" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e872998"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e862170" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e872998"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e862ee8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e861230" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7e855738" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e855738"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7e852150" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e854410" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e855bb0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e855738"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e854748" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e8524d8" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e8540e0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e855738"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e855ef0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e855738"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e854a78" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e854da8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7e883df0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e883df0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7e877ef0" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x7e877838" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e878278" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e883df0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7e875428" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7e875250" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7e8757c0" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e878df8" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7e878ac0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e877bc8" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e878778" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e883df0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e8785b8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e883df0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e877168" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e877498" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7e840a78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1015c0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f101810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7e837b78" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e16f0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7e837368" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f03a8"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0f05f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7e837820" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f03a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0f05f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7e8376b8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f03a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0f05f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7e836068" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e16f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7e837ec8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e16f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7e837010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1015c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f101810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e840dc8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1015c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f101810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e713098" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e713098"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7e7131b0" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e7131b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7e713680" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e7131b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7e713de0" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7e713aa0" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7e7111f8" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7e6884b0" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e688d18" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7e6889e8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e6887f8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7e688188" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e6689f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e6666d8" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e668698" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edge" ref="0x7e666398" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.&#10;</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7e666120" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7e668348" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7e668dc8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10;</short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e649468" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e604010" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e604010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7e600010" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e602348" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7e601410" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7e602dd0" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7e601010" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7e602aa8" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7e600828" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7e600450" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7e602718" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7e6046c8" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7e604420" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7e601c60" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7e601738" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7e6018c8" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7e604c98" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7e6049f0" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e602010" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e5cba70" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e5cba70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7e5ca010" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fda06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7e4fbec8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e4fba70" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e4fbbf8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7e4f98f0" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e4f9370" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e4f94f8" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e4f9680" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e4f9010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ee70e88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e4fab18" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e4faca0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7e4fb708" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ee70e88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e4fb2d8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e4fb460" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7e4fa7b0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e4fa240" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e4fa3c8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e4fa550" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.1.2.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e4e2cc0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7e4e25a0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7e4e2748" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e4e28d8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e4e0830" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7e4e0030" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7e4e01d8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e4e0368" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e4e0500" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7e4e4010" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7e4e8d78" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7e49d010" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7e499920" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7e49a0f0" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7e499dd8" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7e499c70" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7e4a0be0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7e49ad70" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7e49ac08" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7e49b5e0" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7e49b478" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7e49d6c0" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7e4967e8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7e496680" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7e49b908" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7e4975e8" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7e497480" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7e497c30" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7e4995f8" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7e499490" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7e496338" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7e49a5a0" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7e49a438" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e49dbc8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e49d9f8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7e49bdb0" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7e49bc48" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7e499140" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7e497140" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7e497908" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7e496010" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7e49a8c0" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7e49d350" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7e49b138" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e49df08" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7e491c48" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0x7e490068" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.5 $&#10; @date $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7e434da0" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7e433288" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7e4303f0" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0x7e430018" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7e426c30" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e432ee0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7e4269f8" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e432ee0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7e427c40" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7e426298" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e432ee0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7e426010" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e432ee0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7e4266a8" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7e432ee0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.&#10;</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x7e3d43c8" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e3d4030" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x7e3d41e0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x7e3d4a80" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock. </short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e3d4710" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.5 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7e3c4440" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.&#10;&#10;</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7e3c4068" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7e3c4218" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7e3c5d10" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7e3c5950" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.&#10;&#10;</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e3c5750" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7e320920" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e320920"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7e310030" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e320920"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7e320d20" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7e320920"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10;</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7e251508" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10;</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e251068" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7e2511f8" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7e2604f0" loc="15:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.&#10;</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7e260ce8" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10;</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e260860" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ee025c8"/>
                <typename><typedef-ref name="message_t" ref="0x7ee00010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7e2609f0" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7e20e580" loc="73:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e20e9d0" loc="82:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7e2211c8" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7e221c00" loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7e220a00" loc="83:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e220758" loc="83:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7e220088" loc="68:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="putData" ref="0x7e2217c0" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10; </short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e221508" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7e220d98" loc="89:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7e220418" loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10;&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7e229828" loc="60:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7e229cf0" loc="70:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7e229360" loc="51:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10;</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7e229030" loc="51:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7e2283a0" loc="80:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e228068" loc="80:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7e226cb8" loc="51:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10;</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7e2252a0" loc="58:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e225010" loc="58:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7e2259b8" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e2255e0" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.1.2.1 $ $Date: 2006/10/10 19:18:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e10b010" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param buf Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7e10eb20" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e10ecb0" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7e10a5d0" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.&#10;&#10;</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7e10a3f8" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7e10ad68" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param buf Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7e10a930" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e10aac0" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7e10bce0" loc="65:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7e1086a0" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.&#10;&#10;</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param buf Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7e108118" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e1082a8" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e108430" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7e10a0b8" loc="72:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.&#10;&#10;</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e10b8e0" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.&#10;&#10;</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param buf Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7e10b370" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e10b500" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fda0238"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e10b688" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.1.2.1 $ $Date: 2006/10/10 19:18:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e0e8680" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7e0e8440" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7e0e8de0" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param byte Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7e0e89e0" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7e0e8b68" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.1 $ $Date: 2006/10/10 19:18:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7e0cbe80" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7e0cb840" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7e0c8178" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e0c8010" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7e0ca968" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7e0cb200" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7e0cb520" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7e0cbb60" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7e0ca1b8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="tx" ref="0x7e0ca658" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e0ca4f0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7e0cac80" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
