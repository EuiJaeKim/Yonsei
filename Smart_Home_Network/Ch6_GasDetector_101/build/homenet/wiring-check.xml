<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="7:Ch6_GasDetector_101C.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x1a2c0c80"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x1a311930"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x1a311930"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x1a310eb8"/></to>
    </wire>
    <wire loc="8:Ch6_GasDetector_101C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1a412c90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1a805a40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x1a805a40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1a814848"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="9:Ch6_GasDetector_101C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1a431e78"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1a583010"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1a583010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1a581c70"/></to>
    </wire>
    <wire loc="12:Ch6_GasDetector_101C.nc">
      <from><interface-ref name="Read_Humi" scoped="" ref="0x1a440618"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x1ac5b4b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Humidity" scoped="" ref="0x1ac5b4b0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x1b7b9850"/></to>
    </wire>
    <wire loc="13:Ch6_GasDetector_101C.nc">
      <from><interface-ref name="Read_Temp" scoped="" ref="0x1a443200"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x1aa468d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temperature" scoped="" ref="0x1aa468d8"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x1b7bac78"/></to>
    </wire>
    <wire loc="14:Ch6_GasDetector_101C.nc">
      <from><interface-ref name="Read_Photo" scoped="" ref="0x1a443db8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1ac52ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x1ac52ac8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1b85ec48"/></to>
    </wire>
    <wire loc="15:Ch6_GasDetector_101C.nc">
      <from><interface-ref name="Read_Ultrared" scoped="" ref="0x1a442980"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1ad76990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x1ad76990"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1b8ae448"/></to>
    </wire>
    <wire loc="16:Ch6_GasDetector_101C.nc">
      <from><interface-ref name="Read_Voltage" scoped="" ref="0x1a4525a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1adcc9d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x1adcc9d8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1b8a07c0"/></to>
    </wire>
    <wire loc="19:Ch6_GasDetector_101C.nc">
      <from><interface-ref name="CommControl" scoped="" ref="0x1a460500"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1add0cc0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1add0cc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1ae0b878"/></to>
    </wire>
    <wire loc="20:Ch6_GasDetector_101C.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1a4f3188"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1b3633b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x1b3633b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1b98e118"/></to>
    </wire>
    <wire loc="21:Ch6_GasDetector_101C.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1a503758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1b3c8b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x1b3c8b38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1ade4ed8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:Ch6_GasDetector_101C.nc">
      <from><interface-ref name="GasDetector" scoped="" ref="0x1a5007c8"/></from>
      <to><interface-ref name="GasDetector" scoped="" ref="0x1b3f4630"/></to>
    </wire>
    <wire loc="48:GasDetectorC.nc">
      <from><interface-ref name="GasDetector" scoped="" ref="0x1b3f4630"/></from>
      <to><interface-ref name="GasDetector" scoped="" ref="0x1b3f1be8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x1b496408"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x1b495bc0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b42b6f8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b321d20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b93f200"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1ae41990"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1ae87578"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b24dcf0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b2c4010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b88b908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b84b628"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1a824988"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x1a3d0230"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x1a030970"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x1a030970"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x1a1f0960"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x1a3d0760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1a320e70"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1a320e70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1a352d70"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1a3d0ad0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x1a331068"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b544b18"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x1a331068"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1afabf28"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x1a331068"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1aca6d30"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x1a331068"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1a863708"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x1a342940"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x1a393d40"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x1a351518"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1a393a18"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x1a3511a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1a5e46b8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x1a3511a8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x1a340b00"/></to>
    </wire>
    <wire loc="28:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x1a340b00"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x1a370010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x1a340e68"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x1a331068"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x1a370378"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x1a340e68"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a202120"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x1a211540"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x1a062c20"/></to>
    </wire>
    <wire loc="88:Ch6_GasDetector_101M.nc">
      <from><interface-ref name="SendSensorData" scoped="" ref="0x1a531010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1a5e46b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1a581950"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x1a5a3d48"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x1a5d1908"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x1a5d1908"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x1a5f3188"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x1a5916d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x1a5d0368"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x1a5d0368"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x1a5f47a8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x1a590068"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x1a5d0cf8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x1a5d0cf8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x1a5e0d68"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x1a5f3188"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x1a6b07f0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x1a5f47a8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x1a6b1e70"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x1a5e0d68"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x1a6b1518"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x1a642e78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1a7942d8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x1a624010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x1a6f0330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x1a6f0330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b661228"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x1a633188"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x1a713d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x1a713d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6d9538"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x1a645e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x1a720410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x1a720410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6e0ac8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x1a5f1808"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x1a6c4e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x1a6c4e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b5d6538"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x1a630b00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x1a721090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x1a721090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6e3718"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x1a5f0b00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x1a6d5bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x1a6d5bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b5e8d08"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x1a614b00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x1a6e15d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x1a6e15d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b620718"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x1a623cb8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x1a703030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x1a703030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6960b0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x1a632e78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x1a710ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x1a710ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6d3538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x1a6b1e70"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b595010"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x1a603808"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x1a6d3890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x1a6d3890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b5e1ac8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x1a612808"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x1a6f5250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x1a6f5250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b655570"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x1a6209d8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x1a702c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x1a702c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b691010"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x1a643b00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x1a734170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x1a734170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b7169e8"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x1a640d98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1a7a4bc0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x1a635d98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x1a714a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x1a714a18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6a10b0"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x1a5f2508"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x1a6c5ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x1a6c5ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b590010"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x1a601508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x1a6d15d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x1a6d15d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6149e8"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x1a641aa0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1a792590"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x1a600808"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x1a6e22a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x1a6e22a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6232b0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x1a624980"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x1a6f0c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x1a6f0c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b660c08"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x1a633af8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x1a712790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x1a712790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6d7010"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x1a644808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x1a720d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x1a720d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b719570"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x1a5f0190"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x1a6c37d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x1a6c37d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b5d4010"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x1a604508"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x1a6d45d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x1a6d45d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b5e4718"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x1a613508"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x1a6e1f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x1a6e1f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6580f8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x1a6216c8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x1a703988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x1a703988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b695a88"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x1a631808"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x1a7254f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x1a7254f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6d1010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x1a6b07f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b5949e8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x1a602190"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x1a6d2250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x1a6d2250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b618570"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x1a611190"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x1a6f5ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x1a6f5ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b653010"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x1a642508"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x1a734ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x1a734ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b714538"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x1a610508"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x1a6f19c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x1a6f19c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6637f8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x1a6347a8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x1a713410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x1a713410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6a0a88"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x1a645508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x1a7219e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x1a7219e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6e10f8"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x1a6557a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1a7a2f20"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x1a5f2e78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x1a6c44f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x1a6c44f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b5d89e8"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x1a601e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x1a6d1f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x1a6d1f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b612538"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x1a630190"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x1a7226f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x1a7226f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6e7d08"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x1a614190"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x1a6e2bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x1a6e2bf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b622c78"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x1a623348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x1a7046b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x1a7046b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6986c0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x1a632508"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x1a710170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x1a710170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6d69e8"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x1a643190"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x1a735790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x1a735790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b717010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x1a6b1518"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b597538"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x1a604e78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x1a6d4f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x1a6d4f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b5e20f8"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x1a613e78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x1a6e0890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x1a6e0890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b657ac8"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x1a620068"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x1a702330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x1a702330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b693538"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x1a640428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1a7a6880"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x1a635428"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x1a7140c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x1a7140c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6a35e0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x1a611b00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x1a6f45d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x1a6f45d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b6529e8"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x1a5f3af8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x1a6c5170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x1a6c5170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b592538"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x1a602b80"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x1a6d2ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x1a6d2ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1b616010"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x1a814848"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1a823100"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x1a823100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1a9e7da8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1a824988"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1a846730"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x1a8339b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x1aa204c8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1a846730"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1a8e4580"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x1aa27dc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1a9b7b60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1a9d4b60"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x1a856398"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x1a856398"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1a954010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1aa20de8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x1a8501f0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x1a8501f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1a992848"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1a8e4968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1a8725f0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x1a9246c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1a8725f0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x1a9214f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1a894348"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1a933d50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1a8725f0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x1a9a7960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1a907f20"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x1a990908"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1a934d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x1a9d12d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x1aa24c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TempResource" scoped="" ref="0x1b7b8380"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1aa94178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x1b7b6190"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x1aa94ad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HumResource" scoped="" ref="0x1b7b8a58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1aa94178"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x1b7b6cc8"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x1aa94ad0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x1aa94ad0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x1ab054d8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1aa94178"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1ab132d0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1ab132d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1aba3e78"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x1ab04050"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x1ab139c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x1ab139c0"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x1a624010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x1ab049c8"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x1ab12368"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x1ab12368"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x1a610508"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x1ab03358"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x1ab12d00"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x1ab12d00"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x1ab92540"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1ab039c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1ac47a48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x1ac47a48"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1a814848"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1ab018a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1a583010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="readSensor" scoped="" ref="0x1ab19948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x1ab19510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x1aba3e78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b84abc0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x1ab233e0"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x1a624010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x1ab23d70"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x1a610508"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1ab264b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1ab288c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x1ab288c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1a814848"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x1ab92b38"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x1ab45ba8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x1ab45ba8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x1ab8a010"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1ac14aa8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1ab27e20"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1ac13a28"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1ac17078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1ac17078"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1b848e48"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceController" scoped="" ref="0x1ac13390"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x1aba29d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x1aba29d0"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x1b8487b0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x1ab22ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x1ab44430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x1ab9a228"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x1ab47430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x1ab830b0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x1ab44be8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x1ab982d0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x1ab48430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x1ab88010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x1ab47be8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x1ab81150"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x1ab453f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x1ab60010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x1ab48be8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x1ab86010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x1ab607c8"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x1ab544d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x1ab8a7c8"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x1ab54848"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x1ab887c8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x1ab54bc0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x1ab867c8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x1ab56010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x1ab83868"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x1ab56388"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x1ab81908"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x1ab56700"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x1ab9a9e0"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x1ab56a78"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x1ab98a88"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x1ab56df0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1aba25c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1b8483a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1b847338"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1ac17528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x1b847760"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x1b84b960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x1b846970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x1b86ca80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1ac14aa8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x1b86b070"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x1ac13078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x1b86b388"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x1ac13390"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1b86ba20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1ac13a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x1b86be58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x1b8692b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x1b85ec48"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1b85c3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x1b85b010"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1b85a3b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x1b85a3b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1b857980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x1b857980"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1ac8a878"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1b8564f8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1ad75c80"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1ad75c80"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1ad70448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1b8569d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1ad75878"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1ad75878"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1ad70040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1ac861a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1b8564f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x1ac86920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x1ac9a6e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1ac96100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1b8569d0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x1ac8a878"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1ad50888"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x1ac83390"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x1ad48718"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1ad7c108"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1ac86920"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1ad46ab0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1ac861a8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x1ad6c538"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1ad498c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x1ad46338"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x1ac93568"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x1ac93568"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x1aca1b18"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x1aca99c0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x1aca3040"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1ac9a6e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1ad264e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x1ad264e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b888dc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1ad25bb8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1ac96100"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x1acb3468"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x1acd1468"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x1acd1468"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x1ace9c70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x1aca0800"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x1a342940"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x1ad22030"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x1aca1710"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceController" scoped="" ref="0x1ad22740"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x1ad25070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x1ad25070"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x1b887970"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x1ace7040"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x1a270078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1ad26c28"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1b887568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1ad25708"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1b886030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1b8864f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1ad25bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x1b886918"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x1b88bc40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x1b885b00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x1b8bbd10"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x1ad22030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x1b8b9150"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x1ad22428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x1b8b9468"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x1ad22740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1b8b9b00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1ad22dd8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x1ad5bf20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="PhotoPin" scoped="" ref="0x1ad709a0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x1a633af8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="PhotoAdc" scoped="" ref="0x1ad892d0"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x1ad9b068"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x1ad9b068"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x1ad99ae0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x1ad825e8"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x1a613508"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x1ad80348"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x1a611190"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x1ad9ba58"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x1ad95518"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x1ad9a1c8"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x1ad95bb8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x1ad83268"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x1a614190"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x1ad81010"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x1a613e78"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x1ad9d6c8"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x1a633af8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x1ad9b3b8"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x1ad99e30"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x1ad80cb8"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x1a611b00"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x1ad9a518"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x1ad95f08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x1ad83bd8"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x1a614b00"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x1ad81980"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x1a612808"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x1ad9b708"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x1ad951c8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x1ad9be28"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x1ad95868"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x1ad9a868"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x1ad94268"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x1ad84818"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x1a600808"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x1b8ae448"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1b8accb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x1b8ab870"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1b8aac08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x1b8aac08"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1b8a61d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x1b8a61d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1ac8a878"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1b8a6ce0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1adb1468"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1adb1468"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1adcbb68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1b8a5230"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1adb1060"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1adb1060"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1adcb760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1ac861a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1b8a6ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x1ac86920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x1ac9a6e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1ac96100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1b8a5230"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="UltraredPin" scoped="" ref="0x1adca0e0"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x1ad83268"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="UltraredAdc" scoped="" ref="0x1adcaa58"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x1ad9b3b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x1b8dd3b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1b8db778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x1b8db778"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1b8d9d50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x1b8d9d50"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x1ac8a878"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1b8d88a8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1add3ac8"/></to>
    </wire>
    <wire loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1add3ac8"/></from>
      <to><interface-ref name="VoltageConfig" scoped="" ref="0x1adec6c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1b8d8d80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1add2010"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1add2010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1adec290"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1ac861a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1b8d88a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x1ac86920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x1ac9a6e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1ac96100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1b8d8d80"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
      <from><interface-ref name="BatMon" scoped="" ref="0x1adecc08"/></from>
      <to><interface-ref name="PortA7" scoped="" ref="0x1a5f0190"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1ae0b878"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1ae44010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1ade45a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1ae0a100"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1ae0a100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1ae1d848"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x1ade3680"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x1ae081e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x1ae081e8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x1ae1c938"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1adfbe20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1ae07040"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1ae07040"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1ae1b778"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1ade4ed8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1ae0aa30"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1ae0aa30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1ae1c1a0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1ae0eeb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1ae05168"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1ae05168"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1b372268"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1adf23b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1ae086d0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1ae086d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1ae1ce20"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1ae44010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1ae41cd8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1ae02b48"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1b343c20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1ae136c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1ae445f0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1ae445f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1ae5d338"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1ae13d98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1ae44cb0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1ae44cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1b2c4c80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x1ae184b8"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x1b342140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1ae43260"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1ae1ce20"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1b2c4c80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1b2f4c80"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1ae69ab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1ae43260"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1ae83180"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1ae43260"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1ae5da00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1ae878c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1ae878c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1ae9b060"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x1ae57c28"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x1ae847a0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x1ae847a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x1ae9a0a8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x1ae5a610"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x1b249060"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x1ae5a610"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x1b2c4358"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x1b2c4358"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x1b2f4358"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x1b249060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x1b241180"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x1ae51e68"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x1b249488"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x1b249488"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1b2415d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x1ae6ced8"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x1b249d10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x1b249d10"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x1b241e58"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x1ae69690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1b353b38"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x1b353b38"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1b350a00"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1ae6b4f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1a583010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1b2c4010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b2f4010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1b24dcf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1aedfb10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1b24dcf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b246d98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1ae87578"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1ae9cce8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x1ae676b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x1ae68e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x1ae68730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x1ae80dd8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x1ae9b728"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1aeaac38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1ae83180"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x1ae9ab70"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x1aede010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x1aede010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1aeda358"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x1ae972e8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x1b04b858"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x1b04b858"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x1a5f0b00"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x1ae97c78"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x1b0495e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x1b0495e8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x1a5f1808"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x1ae966e8"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x1b048980"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x1b048980"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x1a5f2e78"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x1ae95090"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x1b071500"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x1b071500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x1b08d240"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x1ae956a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b2306e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x1b2306e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b0cb2d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x1aea8e80"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x1b22f840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x1b22f840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1aeaa208"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x1b22fb98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1b22fb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x1aeaa8f0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x1b22e5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x1b22e5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1aeaa580"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x1b22e910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1b22e910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x1aeab290"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x1b22ec68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x1b22ec68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x1aeab6e0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x1b22c0b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x1b22c0b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1aeabbb0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x1b22c4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1b22c4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x1ae91030"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x1b22c9a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x1b22c9a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1ae91488"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x1b22cde0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1b22cde0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1aeae0b0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x1b22bae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x1b22bae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x1aea9610"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b227d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x1b227d28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b0cb2d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1aea9cd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1a583010"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <from><interface-ref name="syncDone_task" scoped="" ref="0x1aea4260"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1aedfb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b050b08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x1b050b08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b04f280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x1aeda358"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1b8c9758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x1b8c9758"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1b8c29f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x1b8fc340"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1b8c42c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x1b8c42c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1b8f77f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x1b8fd2e8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1afcadb0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1afcadb0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1afed5c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x1b8f5058"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1aee4368"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1aee4368"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1af0d5d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x1b8f4ef8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1aef49b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x1aefbb98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x1af0b370"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x1aef5b48"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1af09010"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x1aef49b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x1af08b30"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x1aef49b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x1af05338"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x1aef49b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x1af04ac8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x1af01220"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x1a883d90"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1afaa320"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1aee4368"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x1afec620"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1afc4150"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1afc4150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1afc2e88"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1afc1e68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1aee4368"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x1b04a268"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x1a601e78"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x1b04abd8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x1a632e78"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x1aec1ea0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x1a620068"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x1b048010"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x1a623cb8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x1b06fed0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1b06c690"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x1b071b18"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x1b0616b8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x1b06cd18"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1aef5b48"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x1b061cb0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x1ab44430"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CCATimer" scoped="" ref="0x1b08c300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1b08ea78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x1b08ea78"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1a814848"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x1b08d870"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x1aec1ea0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x1b085d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x1b089d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x1b22e260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x1b22b270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1b22a368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x1b22f190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x1b22bf18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x1b22f4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x1b22a7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x1b0cbc50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x1b22b6a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1b230dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x1b22fef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1b22ae78"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x1b0cbc50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x1b0cbc50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x1b0c3158"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0c3ae0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0c21e8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1b0cb2d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b0c47b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c28c8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x1b0c2c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b12e090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x1b12e090"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b128b78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1b0ef438"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1b12e748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x1b12e748"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1b128178"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x1b0ecc08"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1b12ea80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x1b12ea80"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1b1284c0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1b0f0040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1a583010"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x1b1284c0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1b1239d8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1b128178"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1b1236b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x1b12fd28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b12cdd0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1b12cdd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b123390"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1b128b78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b121100"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x1b151500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b1c0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x1b1c0010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b93d578"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1b151ba8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1b1c0b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1b1c0b58"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1b93c150"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x1b144998"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x1b18a0f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x1b18a0f0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x1b185db8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x1b143010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x1a270078"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x1b180190"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x1a270078"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x1b183b20"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x1a5f0b00"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x1b182508"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x1a604508"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x1b182e78"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x1a604e78"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x1b181808"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x1a603808"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1b1c0750"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1b93dcb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1b93c610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1b204030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x1b93ca38"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x1b93f538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x1b93b050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x1b2220b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x1b224880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x1b222920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1b221ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x1b2237a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x1b226788"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1b223010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1b2224e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x1b224bd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x1b2216a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x1b226ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x1b221f18"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x1b0cbc50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1b223bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x1b223368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x1b226e38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x1b221270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x1b222d58"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1b226430"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x1b224528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1b2241d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1b220608"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x1b0cbc50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x1b244bf8"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x1b2402d8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x1b240860"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x1aede010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x1b271620"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x1aec1ea0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x1b270010"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x1b04b858"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x1b2709a0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x1b048010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x1b271010"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x1b06fed0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x1b26f370"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b2d1650"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x1b2d1650"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b0cb2d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1b26ead0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x1b2d0408"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x1b2d0408"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x1b26ee40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x1b2d0e10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x1b2d0e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x1b26d1f0"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x1b2cf190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x1b2cf190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x1b26d568"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x1b2d00b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x1b2d00b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x1b26e680"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x1b2cc190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x1b2cc190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1b26fa60"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x1b2cbdc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1b2cbdc0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x1b0cbc50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1b26e1b0"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1b2cb2b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1b2cb2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x1b2685b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x1b2c4780"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x1b2c4780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x1b2f4780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1b268ab8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1a583010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x1b2cd900"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x1b2cd010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1b2cf840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1b2cdd38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x1b2cf4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x1b2cce38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x1b2cb6e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x1b0cbc50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1b2cd448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x1b2cfb98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x1b2d0760"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x1b2cca00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x1b2cc5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1b2d1d28"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1b2d0ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1b2efb00"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1a583010"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x1b2f3288"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x1b04b858"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x1b2f3c18"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x1b04a268"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x1b2f2608"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x1b04abd8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x1b2f0010"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x1b071b18"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x1b2f0628"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b300690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x1b300690"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1b0cb2d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x1b2f0d18"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x1b32f7a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x1b32f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x1b0cbc50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1b2ef7c0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x1b300d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1b300d68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x1b2eb178"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x1b3319a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x1b332260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x1b330270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1b32f368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x1b3310b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x1b334190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1b332910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1b331de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x1b3325b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x1b330f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x1b3344e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1b3314f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x1b332c68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x1b334840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x1b330ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x1b3306a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x1b334ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1b334b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1b32fe78"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x1b0cbc50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x1b350a00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1b34b968"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x1b353288"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x1b350150"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x1b350150"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x1b34b0b8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1b3235f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b321d20"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1b321d20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1b34fc78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x1b363a50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1adfbe20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x1b3cb150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1adf23b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x1b3cbaa8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1ae0eeb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x1b98e7e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1b3858c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x1b98ee78"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1adf23b8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1b3858c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1b3d02b8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1b3d0a28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1ade45a8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1b3cf150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1adf23b8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1b3cfa88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1adfbe20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x1b3ce190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x1b3c7030"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1adfbe20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x1b3c76c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1adf23b8"/></to>
    </wire>
    <wire loc="39:GasDetectorC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x1b3f27c8"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x1ab56700"/></to>
    </wire>
    <wire loc="43:GasDetectorC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x1b3ed290"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x1b3f2010"/></to>
    </wire>
    <wire loc="44:GasDetectorC.nc">
      <from><interface-ref name="timer" scoped="" ref="0x1b3edaf0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1b411a38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x1b411a38"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1a814848"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:GasDetectorC.nc">
      <from><interface-ref name="timer1" scoped="" ref="0x1b3ebb08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1b40d3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x1b40d3d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x1a814848"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:GasDetectorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1b3e8a48"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1a583010"/></to>
    </wire>
    <wire loc="40:GasDetectorP.nc">
      <from><interface-ref name="sendSignal" scoped="" ref="0x1b3e5010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:GasDetectorP.nc">
      <from><interface-ref name="timerStop" scoped="" ref="0x1b3e41e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x1b432400"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x1b430a10"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x1b430a10"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x1b42be48"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x1b4362b0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x1b430e38"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x1b430e38"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x1b42a290"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x1b407408"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x1b4305e8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x1b4305e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x1b42ba30"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1b42f830"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1b4ceab0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1b4ceab0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1b4c9010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1b4750a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1b42f830"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x1b42ab28"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x1b466888"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x1b466888"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x1b496780"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x1b476010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x1b466cc0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x1b466cc0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x1b496bd8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x1b476448"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x1b465190"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x1b465190"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x1b495070"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x1b4645c8"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x1b4948c0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x1b465cc8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x1b494010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x1b464190"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x1b494468"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x1b493420"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x1a342940"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x1b493ae8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x1a270078"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x1b571078"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1b4c8e80"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1b4c8e80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1b547a20"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1b577a68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1b4c6cf0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1b4c6cf0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1b4ed0b0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x1b4c0ac8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x1b4ece90"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x1b4f7770"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1b4eba80"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x1b4f45b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x1b4e8568"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x1b4f45b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x1b4e7ce8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x1b4f45b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x1b4e44c8"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1b544f00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1b4c6cf0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="20:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <documentation loc="20:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="20:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformP.nc">
      <documentation loc="20:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.1.2.6 2006/09/22 19:12:14 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Ch6_GasDetector_101M" loc="3:Ch6_GasDetector_101M.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ch6_GasDetector_101C.TimerMilliC" loc="36(Ch6_GasDetector_101C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(Ch6_GasDetector_101C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliInit" loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliAlarm" loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliCounter" loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.Transform32" loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <documentation loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ch6_GasDetector_101C.SensirionSht11C" loc="45(Ch6_GasDetector_101C.SensirionSht11C):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11C.nc">
      <documentation loc="45(Ch6_GasDetector_101C.SensirionSht11C):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch6_GasDetector_101C.SensirionSht11C.SensirionSht11ReaderP" loc="43(Ch6_GasDetector_101C.SensirionSht11C.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <documentation loc="43(Ch6_GasDetector_101C.SensirionSht11C.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/08/15 11:59:09 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <documentation loc="53(HalSensirionSht11C.SensirionSht11LogicP):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/08/15 11:59:09 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10;</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="36(HplSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HplSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.&#10;</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="6(HplSensirionSht11C.InterruptDATAC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplSensirionSht11C.InterruptDATAC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="79(HplSensirionSht11C.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="79(HplSensirionSht11C.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="32(HplSensirionSht11C.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="51(HplSensirionSht11C.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="51(HplSensirionSht11C.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="57(HplSensirionSht11C.SplitControlPowerManagerC):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="57(HplSensirionSht11C.SplitControlPowerManagerC):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices. </short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="48(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <documentation loc="48(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="36(HalSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HalSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch6_GasDetector_101C.PhotoSensorC" loc="19(Ch6_GasDetector_101C.PhotoSensorC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoSensorC.nc">
      <documentation loc="19(Ch6_GasDetector_101C.PhotoSensorC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch6_GasDetector_101C.PhotoSensorC.DemoChannel" loc="27(Ch6_GasDetector_101C.PhotoSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoC.nc">
      <documentation loc="27(Ch6_GasDetector_101C.PhotoSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.ADC_ShiftM" loc="27(Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <documentation loc="27(Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.PhotoProC" loc="26(Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.PhotoProC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoProC.nc">
      <documentation loc="26(Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.PhotoProC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC" loc="21(Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10;</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10;&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10;&#10;&#10; @author Jason Hill&#10;&#10; @author David Gay&#10;&#10; @author Philip Levis&#10;&#10; @author Phil Buonadonna&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.3 $&#10; @date $Date: 2006/10/23 05:45:49 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="51(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="51(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="57(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10;</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10;</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoDeviceP" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoP" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="ZigbexBusC" loc="27:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="ZigbexBusP" loc="27:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="Ch6_GasDetector_101C.UltraredSensorC" loc="19(Ch6_GasDetector_101C.UltraredSensorC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredSensorC.nc">
      <documentation loc="19(Ch6_GasDetector_101C.UltraredSensorC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch6_GasDetector_101C.UltraredSensorC.DemoChannel" loc="27(Ch6_GasDetector_101C.UltraredSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredC.nc">
      <documentation loc="27(Ch6_GasDetector_101C.UltraredSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.ADC_ShiftM" loc="27(Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <documentation loc="27(Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="1">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.UltraredProC" loc="29(Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredProC.nc">
      <documentation loc="29(Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC" loc="21(Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UltraredDeviceP" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="UltraredP" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="Ch6_GasDetector_101C.VoltageC" loc="27(Ch6_GasDetector_101C.VoltageC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageC.nc">
      <documentation loc="27(Ch6_GasDetector_101C.VoltageC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch6_GasDetector_101C.VoltageC.ADC_ShiftM" loc="27(Ch6_GasDetector_101C.VoltageC.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <documentation loc="27(Ch6_GasDetector_101C.VoltageC.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="2">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="Ch6_GasDetector_101C.VoltageC.VoltageProC" loc="29(Ch6_GasDetector_101C.VoltageC.VoltageProC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageProC.nc">
      <documentation loc="29(Ch6_GasDetector_101C.VoltageC.VoltageProC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch6_GasDetector_101C.VoltageC.VoltageProC.AdcReadClientC" loc="21(Ch6_GasDetector_101C.VoltageC.VoltageProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(Ch6_GasDetector_101C.VoltageC.VoltageProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="VoltageDeviceP" loc="19:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
      <documentation loc="19:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="VoltageP" loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageP.nc">
        <short>&#10; Internal component for voltage sensor reading.&#10;&#10;</short>
        <long>&#10; Internal component for voltage sensor reading.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.11 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="35:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/08/04 00:34:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.11 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.12 $ $Date: 2006/07/17 05:04:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.22 $ $Date: 2006/09/07 17:53:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="TOne" ref="0x1a1e1ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="TOne" ref="0x1a1e1ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="T32khz" ref="0x1a140cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="T32khz" ref="0x1a140cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x1a1e1e80"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="T32khz" ref="0x1a140cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="TOne" ref="0x1a1e1ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10;</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.1.2.6 2006/06/20 18:56:06 jwhui Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="65:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.1.2.4 2006/06/20 18:56:06 jwhui Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @version @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.TimerMilliC" loc="36(HplCC2420InterruptsC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HplCC2420InterruptsC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiImplP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.12 $ $Date: 2006/09/28 19:26:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiP.HplCC2420SpiC" loc="37(CC2420SpiP.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="37(CC2420SpiP.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.1.2.9 2006/08/15 11:59:08 klueska Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.1.2.10 2006/09/28 19:26:21 jwhui Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.1.2.4 2006/03/13 23:07:53 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="51(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="51(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TransmitC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.14 $ $Date: 2006/08/15 11:59:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.5 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.10 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10;</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Ch6_GasDetector_101C.AMSenderC" loc="39(Ch6_GasDetector_101C.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(Ch6_GasDetector_101C.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch6_GasDetector_101C.AMSenderC.AMQueueEntryP" loc="35(Ch6_GasDetector_101C.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(Ch6_GasDetector_101C.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.&#10;&#10;</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ch6_GasDetector_101C.AMReceiverC" loc="35(Ch6_GasDetector_101C.AMReceiverC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="35(Ch6_GasDetector_101C.AMReceiverC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="GasDetectorC" loc="25:GasDetectorC.nc">
      <documentation loc="25:GasDetectorC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="GasDetectorC.IntPin" loc="30(GasDetectorC.IntPin):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(GasDetectorC.IntPin):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="GasDetectorP" loc="26:GasDetectorP.nc">
      <documentation loc="26:GasDetectorP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="GasDetectorC.T0" loc="36(GasDetectorC.T0):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(GasDetectorC.T0):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="GasDetectorC.T1" loc="36(GasDetectorC.T1):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(GasDetectorC.T1):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/10/30 18:40:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/10/30 18:40:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="40(Atm128Uart0C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="40(Atm128Uart0C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/10/30 18:40:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10;</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10;</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitThreeP.InitThree):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterThree16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140e58"/>
            <typename><typedef-ref name="TThree" ref="0x1a1e1ca0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(CounterMicro32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140e58"/>
            <typename><typedef-ref name="TMicro" ref="0x1a152010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140e58"/>
            <typename><typedef-ref name="TThree" ref="0x1a1e1ca0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x1a1f2078"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/tinyos-2.x/tos/platforms/homenet/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x1a652c20" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x1a652db0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x1a664010" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x1a671218" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x1a6713b8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x1a671558" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x1a6716f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x1a742218" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x1a7423b8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x1a742558" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x1a7426f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x1a8e28b8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1a8e28b8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x1a8e2a48" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x1a8f1e50" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x1a8f1e50"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x1a905138" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1a905138"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x1a9052c8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x1a9325a8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x1a9325a8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x1a932868" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1a932868"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmCounterC" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x1a9535a0" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x1a9535a0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x1a953860" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1a953860"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x1a953a28" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x1a953a28"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x1a953ce8" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x1a953ce8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x1a953e88" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x1a952168" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x1a952168"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1a9b54f0" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1a9b54f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1a9d0d20" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1a9d0d20"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x1a9d0ea8" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1aa37c68" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1aa37c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x1ab7a248" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x1ab7a3e8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x1ab7a588" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x1ab7a720" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x1aba4e68" loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x1abc41b8" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="controller_id" ref="0x1abe91d8" loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="57:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices. </short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoSensorC" loc="19:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoSensorC.nc" abstract="">
      <documentation loc="19:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoC.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ADC_ShiftM" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoProC" loc="26:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoProC.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x1ad05a10" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.3 $&#10; @date $Date: 2006/10/23 05:45:49 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x1ad1a400" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="57:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10;</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x1ad6b0d8" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x1ad6b0d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="UltraredSensorC" loc="19:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredSensorC.nc" abstract="">
      <documentation loc="19:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UltraredC" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredC.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UltraredProC" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredProC.nc" abstract="">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageC.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageProC" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageProC.nc" abstract="">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="66:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x1afeb580" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x1afeb580"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x1afeb840" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1afeb840"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x1afeba08" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x1afeba08"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x1afebcc8" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x1afebcc8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x1afebe68" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x1afe9168" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x1afe9168"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x1b00b860" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x1b00b860"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x1b00bb20" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1b00bb20"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x1b00bce8" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x1b00bce8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x1b00a010" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x1b00a010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x1b00a1b0" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x1b1f38a0" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleArbiterP" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x1b362cf8" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x1b391010" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x1b3b58b0" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x1b3c6908" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128UartP" loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/10/30 18:40:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x1a3220b8" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x1a3220b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a322290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x1a311930" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x1a311930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x1a311b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x1a331068" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x1a331068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a331240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1a320e70" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1a320e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a333070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x1a342940" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x1a342940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x1a342b18"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x1a342bf8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x1a342cd8"/>
        <function-ref name="actualMicro" scoped="" ref="0x1a342db8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x1a342e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x1a3511a8" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x1a3511a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a351380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1a352d70" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1a352d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a351010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x1a351518" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x1a351518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a3516f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x1a340e68" loc="23:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x1a340e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a360050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x1a340b00" loc="22:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x1a340b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a340cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x1a370378" loc="23:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x1a370378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a370550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x1a370010" loc="22:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x1a370010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a3701e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1a393a18" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1a393a18"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x1a010308"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x1a010308"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a393bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x1a393d40" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x1a393d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x1a393f18"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x1a391010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x1a3910f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x1a3911d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x1a3912b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x1a3d0ad0" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x1a3d0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a3d0ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x1a310eb8" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x1a310eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x1a3d00c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x1a3d0760" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x1a3d0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a3d0938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x1a3d0230" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x1a3d0230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a3d0408"/>
        <function-ref name="taskLoop" scoped="" ref="0x1a3d04e8"/>
        <function-ref name="runNextTask" scoped="" ref="0x1a3d05c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x1a0509b8" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x1a0509b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1a050b90"/>
        <function-ref name="runTask" scoped="" ref="0x1a050c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x1a030970" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x1a030970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a030b48"/>
        <function-ref name="taskLoop" scoped="" ref="0x1a030c28"/>
        <function-ref name="runNextTask" scoped="" ref="0x1a030d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x1a202120" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x1a202120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1a2022f8"/>
        <function-ref name="runTask" scoped="" ref="0x1a2023d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x1a211540" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x1a211540"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x1a211718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x1a1f0960" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x1a1f0960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a1f0b38"/>
        <function-ref name="taskLoop" scoped="" ref="0x1a1f0c18"/>
        <function-ref name="runNextTask" scoped="" ref="0x1a1f0cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x1a2801a0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x1a2801a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x1a280378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x1a062c20" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x1a062c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x1a062df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x1a270078" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x1a270078"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x1a270250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x1a2c0c80" loc="5:Ch6_GasDetector_101M.nc">
      <component-ref qname="Ch6_GasDetector_101M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x1a2c0c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x1a2c0e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Voltage" ref="0x1a4525a0" loc="12:Ch6_GasDetector_101M.nc">
      <component-ref qname="Ch6_GasDetector_101M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Voltage" scoped="" ref="0x1a4525a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1a452bc8"/>
        <function-ref name="readDone" scoped="" ref="0x1a452da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x1a4f3188" loc="14:Ch6_GasDetector_101M.nc">
      <component-ref qname="Ch6_GasDetector_101M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x1a4f3188"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1a4f3360"/>
        <function-ref name="getPayload" scoped="" ref="0x1a4f3440"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1a4f3520"/>
        <function-ref name="cancel" scoped="" ref="0x1a4f3600"/>
        <function-ref name="sendDone" scoped="" ref="0x1a4f36e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendSensorData" ref="0x1a531010" loc="88:Ch6_GasDetector_101M.nc">
      <component-ref qname="Ch6_GasDetector_101M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendSensorData" scoped="" ref="0x1a531010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1a531268"/>
        <function-ref name="runTask" scoped="" ref="0x1a531348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Humi" ref="0x1a440618" loc="8:Ch6_GasDetector_101M.nc">
      <component-ref qname="Ch6_GasDetector_101M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Humi" scoped="" ref="0x1a440618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1a440c40"/>
        <function-ref name="readDone" scoped="" ref="0x1a440e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Ultrared" ref="0x1a442980" loc="11:Ch6_GasDetector_101M.nc">
      <component-ref qname="Ch6_GasDetector_101M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Ultrared" scoped="" ref="0x1a442980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1a452010"/>
        <function-ref name="readDone" scoped="" ref="0x1a4521f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Photo" ref="0x1a443db8" loc="10:Ch6_GasDetector_101M.nc">
      <component-ref qname="Ch6_GasDetector_101M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Photo" scoped="" ref="0x1a443db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1a4423f0"/>
        <function-ref name="readDone" scoped="" ref="0x1a4425d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GasDetector" ref="0x1a5007c8" loc="16:Ch6_GasDetector_101M.nc">
      <component-ref qname="Ch6_GasDetector_101M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GasDetector" scoped="" ref="0x1a5007c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GasDetector"/>
      </instance>
      <interface-functions>
        <function-ref name="BecomeNormal" scoped="" ref="0x1a5009a0"/>
        <function-ref name="EscapeOfGas" scoped="" ref="0x1a500a80"/>
        <function-ref name="Init" scoped="" ref="0x1a500b60"/>
        <function-ref name="WatchEscOfGas" scoped="" ref="0x1a500c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x1a503758" loc="15:Ch6_GasDetector_101M.nc">
      <component-ref qname="Ch6_GasDetector_101M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x1a503758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x1a503930"/>
        <function-ref name="receive" scoped="" ref="0x1a503a10"/>
        <function-ref name="getPayload" scoped="" ref="0x1a503af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommControl" ref="0x1a460500" loc="13:Ch6_GasDetector_101M.nc">
      <component-ref qname="Ch6_GasDetector_101M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommControl" scoped="" ref="0x1a460500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1a4606d8"/>
        <function-ref name="stopDone" scoped="" ref="0x1a4607b8"/>
        <function-ref name="start" scoped="" ref="0x1a460898"/>
        <function-ref name="stop" scoped="" ref="0x1a460978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1a431e78" loc="7:Ch6_GasDetector_101M.nc">
      <component-ref qname="Ch6_GasDetector_101M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x1a431e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1a423070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1a423150"/>
        <function-ref name="led1On" scoped="" ref="0x1a423230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1a423310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1a4233f0"/>
        <function-ref name="get" scoped="" ref="0x1a4234d0"/>
        <function-ref name="led1Off" scoped="" ref="0x1a4235b0"/>
        <function-ref name="led2Off" scoped="" ref="0x1a423930"/>
        <function-ref name="set" scoped="" ref="0x1a423690"/>
        <function-ref name="led0On" scoped="" ref="0x1a423770"/>
        <function-ref name="led2On" scoped="" ref="0x1a423850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Temp" ref="0x1a443200" loc="9:Ch6_GasDetector_101M.nc">
      <component-ref qname="Ch6_GasDetector_101M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Temp" scoped="" ref="0x1a443200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1a443828"/>
        <function-ref name="readDone" scoped="" ref="0x1a443a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1a412c90" loc="6:Ch6_GasDetector_101M.nc">
      <component-ref qname="Ch6_GasDetector_101M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1a412c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1a403650"/>
        <function-ref name="fired" scoped="" ref="0x1a3f09a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1a403010"/>
        <function-ref name="isOneShot" scoped="" ref="0x1a3f0d68"/>
        <function-ref name="getdt" scoped="" ref="0x1a403a10"/>
        <function-ref name="gett0" scoped="" ref="0x1a403830"/>
        <function-ref name="isRunning" scoped="" ref="0x1a3f0b88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1a3f02c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1a403330"/>
        <function-ref name="startOneShot" scoped="" ref="0x1a3f0548"/>
        <function-ref name="stop" scoped="" ref="0x1a3f07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x1a583010" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x1a583010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1a5831e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1a5832c8"/>
        <function-ref name="led1On" scoped="" ref="0x1a5833a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1a583488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1a583568"/>
        <function-ref name="get" scoped="" ref="0x1a583648"/>
        <function-ref name="led1Off" scoped="" ref="0x1a583728"/>
        <function-ref name="led2Off" scoped="" ref="0x1a583aa8"/>
        <function-ref name="set" scoped="" ref="0x1a583808"/>
        <function-ref name="led0On" scoped="" ref="0x1a5838e8"/>
        <function-ref name="led2On" scoped="" ref="0x1a5839c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x1a5a3d48" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x1a5a3d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5a3f20"/>
        <function-ref name="isInput" scoped="" ref="0x1a591018"/>
        <function-ref name="toggle" scoped="" ref="0x1a5910f8"/>
        <function-ref name="isOutput" scoped="" ref="0x1a5911d8"/>
        <function-ref name="get" scoped="" ref="0x1a5912b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a591398"/>
        <function-ref name="set" scoped="" ref="0x1a591478"/>
        <function-ref name="clr" scoped="" ref="0x1a591558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1a581950" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1a581950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a581b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x1a5916d0" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x1a5916d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5918a8"/>
        <function-ref name="isInput" scoped="" ref="0x1a591988"/>
        <function-ref name="toggle" scoped="" ref="0x1a591a68"/>
        <function-ref name="isOutput" scoped="" ref="0x1a591b48"/>
        <function-ref name="get" scoped="" ref="0x1a591c28"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a591d08"/>
        <function-ref name="set" scoped="" ref="0x1a591de8"/>
        <function-ref name="clr" scoped="" ref="0x1a591ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x1a581c70" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x1a581c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1a581e48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1a581f28"/>
        <function-ref name="led1On" scoped="" ref="0x1a593018"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1a5930f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1a5931d8"/>
        <function-ref name="get" scoped="" ref="0x1a5932b8"/>
        <function-ref name="led1Off" scoped="" ref="0x1a593398"/>
        <function-ref name="led2Off" scoped="" ref="0x1a593718"/>
        <function-ref name="set" scoped="" ref="0x1a593478"/>
        <function-ref name="led0On" scoped="" ref="0x1a593558"/>
        <function-ref name="led2On" scoped="" ref="0x1a593638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x1a590068" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x1a590068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a590240"/>
        <function-ref name="isInput" scoped="" ref="0x1a590320"/>
        <function-ref name="toggle" scoped="" ref="0x1a590400"/>
        <function-ref name="isOutput" scoped="" ref="0x1a5904e0"/>
        <function-ref name="get" scoped="" ref="0x1a5905c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a5906a0"/>
        <function-ref name="set" scoped="" ref="0x1a590780"/>
        <function-ref name="clr" scoped="" ref="0x1a590860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x1a5d1908" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x1a5d1908"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5d1ae0"/>
        <function-ref name="isInput" scoped="" ref="0x1a5d1bc0"/>
        <function-ref name="toggle" scoped="" ref="0x1a5d1ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a5d1d80"/>
        <function-ref name="get" scoped="" ref="0x1a5d1e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a5d0010"/>
        <function-ref name="set" scoped="" ref="0x1a5d00f0"/>
        <function-ref name="clr" scoped="" ref="0x1a5d01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x1a5d0368" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x1a5d0368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5d0540"/>
        <function-ref name="isInput" scoped="" ref="0x1a5d0620"/>
        <function-ref name="toggle" scoped="" ref="0x1a5d0700"/>
        <function-ref name="isOutput" scoped="" ref="0x1a5d07e0"/>
        <function-ref name="get" scoped="" ref="0x1a5d08c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a5d09a0"/>
        <function-ref name="set" scoped="" ref="0x1a5d0a80"/>
        <function-ref name="clr" scoped="" ref="0x1a5d0b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x1a5e46b8" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1a5e46b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a5e4890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x1a5d0cf8" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x1a5d0cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5d0ed0"/>
        <function-ref name="isInput" scoped="" ref="0x1a5e4010"/>
        <function-ref name="toggle" scoped="" ref="0x1a5e40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a5e41d0"/>
        <function-ref name="get" scoped="" ref="0x1a5e42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a5e4390"/>
        <function-ref name="set" scoped="" ref="0x1a5e4470"/>
        <function-ref name="clr" scoped="" ref="0x1a5e4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x1a642e78" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x1a642e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a641308"/>
        <function-ref name="isInput" scoped="" ref="0x1a6413e8"/>
        <function-ref name="toggle" scoped="" ref="0x1a6414c8"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6415a8"/>
        <function-ref name="get" scoped="" ref="0x1a641688"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a641768"/>
        <function-ref name="set" scoped="" ref="0x1a641848"/>
        <function-ref name="clr" scoped="" ref="0x1a641928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x1a624010" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x1a624010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6241e8"/>
        <function-ref name="isInput" scoped="" ref="0x1a6242c8"/>
        <function-ref name="toggle" scoped="" ref="0x1a6243a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1a624488"/>
        <function-ref name="get" scoped="" ref="0x1a624568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a624648"/>
        <function-ref name="set" scoped="" ref="0x1a624728"/>
        <function-ref name="clr" scoped="" ref="0x1a624808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x1a633188" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x1a633188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a633360"/>
        <function-ref name="isInput" scoped="" ref="0x1a633440"/>
        <function-ref name="toggle" scoped="" ref="0x1a633520"/>
        <function-ref name="isOutput" scoped="" ref="0x1a633600"/>
        <function-ref name="get" scoped="" ref="0x1a6336e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6337c0"/>
        <function-ref name="set" scoped="" ref="0x1a6338a0"/>
        <function-ref name="clr" scoped="" ref="0x1a633980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x1a645e78" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x1a645e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a644070"/>
        <function-ref name="isInput" scoped="" ref="0x1a644150"/>
        <function-ref name="toggle" scoped="" ref="0x1a644230"/>
        <function-ref name="isOutput" scoped="" ref="0x1a644310"/>
        <function-ref name="get" scoped="" ref="0x1a6443f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6444d0"/>
        <function-ref name="set" scoped="" ref="0x1a6445b0"/>
        <function-ref name="clr" scoped="" ref="0x1a644690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x1a5f1808" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x1a5f1808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5f19e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a5f1ac0"/>
        <function-ref name="toggle" scoped="" ref="0x1a5f1ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a5f1c80"/>
        <function-ref name="get" scoped="" ref="0x1a5f1d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a5f1e40"/>
        <function-ref name="set" scoped="" ref="0x1a5f1f20"/>
        <function-ref name="clr" scoped="" ref="0x1a5f0018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x1a630b00" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x1a630b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a630cd8"/>
        <function-ref name="isInput" scoped="" ref="0x1a630db8"/>
        <function-ref name="toggle" scoped="" ref="0x1a630e98"/>
        <function-ref name="isOutput" scoped="" ref="0x1a645010"/>
        <function-ref name="get" scoped="" ref="0x1a6450f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6451d0"/>
        <function-ref name="set" scoped="" ref="0x1a6452b0"/>
        <function-ref name="clr" scoped="" ref="0x1a645390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x1a5f0b00" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x1a5f0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5f0cd8"/>
        <function-ref name="isInput" scoped="" ref="0x1a5f0db8"/>
        <function-ref name="toggle" scoped="" ref="0x1a5f0e98"/>
        <function-ref name="isOutput" scoped="" ref="0x1a604010"/>
        <function-ref name="get" scoped="" ref="0x1a6040f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6041d0"/>
        <function-ref name="set" scoped="" ref="0x1a6042b0"/>
        <function-ref name="clr" scoped="" ref="0x1a604390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x1a614b00" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x1a614b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a614cd8"/>
        <function-ref name="isInput" scoped="" ref="0x1a614db8"/>
        <function-ref name="toggle" scoped="" ref="0x1a614e98"/>
        <function-ref name="isOutput" scoped="" ref="0x1a613010"/>
        <function-ref name="get" scoped="" ref="0x1a6130f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6131d0"/>
        <function-ref name="set" scoped="" ref="0x1a6132b0"/>
        <function-ref name="clr" scoped="" ref="0x1a613390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x1a623cb8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x1a623cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a623e90"/>
        <function-ref name="isInput" scoped="" ref="0x1a621010"/>
        <function-ref name="toggle" scoped="" ref="0x1a6210f0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6211d0"/>
        <function-ref name="get" scoped="" ref="0x1a6212b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a621390"/>
        <function-ref name="set" scoped="" ref="0x1a621470"/>
        <function-ref name="clr" scoped="" ref="0x1a621550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x1a632e78" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x1a632e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a631070"/>
        <function-ref name="isInput" scoped="" ref="0x1a631150"/>
        <function-ref name="toggle" scoped="" ref="0x1a631230"/>
        <function-ref name="isOutput" scoped="" ref="0x1a631310"/>
        <function-ref name="get" scoped="" ref="0x1a6313f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6314d0"/>
        <function-ref name="set" scoped="" ref="0x1a6315b0"/>
        <function-ref name="clr" scoped="" ref="0x1a631690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x1a5f47a8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x1a5f47a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5f4980"/>
        <function-ref name="isInput" scoped="" ref="0x1a5f4a60"/>
        <function-ref name="toggle" scoped="" ref="0x1a5f4b40"/>
        <function-ref name="isOutput" scoped="" ref="0x1a5f4c20"/>
        <function-ref name="get" scoped="" ref="0x1a5f4d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a5f4de0"/>
        <function-ref name="set" scoped="" ref="0x1a5f4ec0"/>
        <function-ref name="clr" scoped="" ref="0x1a5f3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x1a603808" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x1a603808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6039e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a603ac0"/>
        <function-ref name="toggle" scoped="" ref="0x1a603ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a603c80"/>
        <function-ref name="get" scoped="" ref="0x1a603d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a603e40"/>
        <function-ref name="set" scoped="" ref="0x1a603f20"/>
        <function-ref name="clr" scoped="" ref="0x1a602018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x1a612808" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x1a612808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6129e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a612ac0"/>
        <function-ref name="toggle" scoped="" ref="0x1a612ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a612c80"/>
        <function-ref name="get" scoped="" ref="0x1a612d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a612e40"/>
        <function-ref name="set" scoped="" ref="0x1a612f20"/>
        <function-ref name="clr" scoped="" ref="0x1a611018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x1a6209d8" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x1a6209d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a620bb0"/>
        <function-ref name="isInput" scoped="" ref="0x1a620c90"/>
        <function-ref name="toggle" scoped="" ref="0x1a620d70"/>
        <function-ref name="isOutput" scoped="" ref="0x1a620e50"/>
        <function-ref name="get" scoped="" ref="0x1a635010"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6350f0"/>
        <function-ref name="set" scoped="" ref="0x1a6351d0"/>
        <function-ref name="clr" scoped="" ref="0x1a6352b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x1a643b00" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x1a643b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a643cd8"/>
        <function-ref name="isInput" scoped="" ref="0x1a643db8"/>
        <function-ref name="toggle" scoped="" ref="0x1a643e98"/>
        <function-ref name="isOutput" scoped="" ref="0x1a642010"/>
        <function-ref name="get" scoped="" ref="0x1a6420f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6421d0"/>
        <function-ref name="set" scoped="" ref="0x1a6422b0"/>
        <function-ref name="clr" scoped="" ref="0x1a642390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x1a640d98" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x1a640d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a655010"/>
        <function-ref name="isInput" scoped="" ref="0x1a6550f0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6551d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6552b0"/>
        <function-ref name="get" scoped="" ref="0x1a655390"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a655470"/>
        <function-ref name="set" scoped="" ref="0x1a655550"/>
        <function-ref name="clr" scoped="" ref="0x1a655630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x1a635d98" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x1a635d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a634010"/>
        <function-ref name="isInput" scoped="" ref="0x1a6340f0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6341d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6342b0"/>
        <function-ref name="get" scoped="" ref="0x1a634390"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a634470"/>
        <function-ref name="set" scoped="" ref="0x1a634550"/>
        <function-ref name="clr" scoped="" ref="0x1a634630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x1a5f2508" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x1a5f2508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5f26e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a5f27c0"/>
        <function-ref name="toggle" scoped="" ref="0x1a5f28a0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a5f2980"/>
        <function-ref name="get" scoped="" ref="0x1a5f2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a5f2b40"/>
        <function-ref name="set" scoped="" ref="0x1a5f2c20"/>
        <function-ref name="clr" scoped="" ref="0x1a5f2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x1a601508" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x1a601508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6016e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a6017c0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6018a0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a601980"/>
        <function-ref name="get" scoped="" ref="0x1a601a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a601b40"/>
        <function-ref name="set" scoped="" ref="0x1a601c20"/>
        <function-ref name="clr" scoped="" ref="0x1a601d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x1a641aa0" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x1a641aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a641c78"/>
        <function-ref name="isInput" scoped="" ref="0x1a641d58"/>
        <function-ref name="toggle" scoped="" ref="0x1a641e38"/>
        <function-ref name="isOutput" scoped="" ref="0x1a641f18"/>
        <function-ref name="get" scoped="" ref="0x1a640010"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6400f0"/>
        <function-ref name="set" scoped="" ref="0x1a6401d0"/>
        <function-ref name="clr" scoped="" ref="0x1a6402b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x1a600808" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x1a600808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6009e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a600ac0"/>
        <function-ref name="toggle" scoped="" ref="0x1a600ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a600c80"/>
        <function-ref name="get" scoped="" ref="0x1a600d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a600e40"/>
        <function-ref name="set" scoped="" ref="0x1a600f20"/>
        <function-ref name="clr" scoped="" ref="0x1a614018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x1a624980" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x1a624980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a624b58"/>
        <function-ref name="isInput" scoped="" ref="0x1a624c38"/>
        <function-ref name="toggle" scoped="" ref="0x1a624d18"/>
        <function-ref name="isOutput" scoped="" ref="0x1a624df8"/>
        <function-ref name="get" scoped="" ref="0x1a624ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a623010"/>
        <function-ref name="set" scoped="" ref="0x1a6230f0"/>
        <function-ref name="clr" scoped="" ref="0x1a6231d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x1a633af8" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x1a633af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a633cd0"/>
        <function-ref name="isInput" scoped="" ref="0x1a633db0"/>
        <function-ref name="toggle" scoped="" ref="0x1a633e90"/>
        <function-ref name="isOutput" scoped="" ref="0x1a632010"/>
        <function-ref name="get" scoped="" ref="0x1a6320f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6321d0"/>
        <function-ref name="set" scoped="" ref="0x1a6322b0"/>
        <function-ref name="clr" scoped="" ref="0x1a632390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x1a644808" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x1a644808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6449e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a644ac0"/>
        <function-ref name="toggle" scoped="" ref="0x1a644ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a644c80"/>
        <function-ref name="get" scoped="" ref="0x1a644d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a644e40"/>
        <function-ref name="set" scoped="" ref="0x1a644f20"/>
        <function-ref name="clr" scoped="" ref="0x1a643018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x1a5f0190" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x1a5f0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5f0368"/>
        <function-ref name="isInput" scoped="" ref="0x1a5f0448"/>
        <function-ref name="toggle" scoped="" ref="0x1a5f0528"/>
        <function-ref name="isOutput" scoped="" ref="0x1a5f0608"/>
        <function-ref name="get" scoped="" ref="0x1a5f06e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a5f07c8"/>
        <function-ref name="set" scoped="" ref="0x1a5f08a8"/>
        <function-ref name="clr" scoped="" ref="0x1a5f0988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x1a604508" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x1a604508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6046e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a6047c0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6048a0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a604980"/>
        <function-ref name="get" scoped="" ref="0x1a604a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a604b40"/>
        <function-ref name="set" scoped="" ref="0x1a604c20"/>
        <function-ref name="clr" scoped="" ref="0x1a604d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x1a613508" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x1a613508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6136e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a6137c0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6138a0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a613980"/>
        <function-ref name="get" scoped="" ref="0x1a613a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a613b40"/>
        <function-ref name="set" scoped="" ref="0x1a613c20"/>
        <function-ref name="clr" scoped="" ref="0x1a613d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x1a6216c8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x1a6216c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6218a0"/>
        <function-ref name="isInput" scoped="" ref="0x1a621980"/>
        <function-ref name="toggle" scoped="" ref="0x1a621a60"/>
        <function-ref name="isOutput" scoped="" ref="0x1a621b40"/>
        <function-ref name="get" scoped="" ref="0x1a621c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a621d00"/>
        <function-ref name="set" scoped="" ref="0x1a621de0"/>
        <function-ref name="clr" scoped="" ref="0x1a621ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x1a631808" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x1a631808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6319e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a631ac0"/>
        <function-ref name="toggle" scoped="" ref="0x1a631ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a631c80"/>
        <function-ref name="get" scoped="" ref="0x1a631d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a631e40"/>
        <function-ref name="set" scoped="" ref="0x1a631f20"/>
        <function-ref name="clr" scoped="" ref="0x1a630018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x1a5f3188" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x1a5f3188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5f3360"/>
        <function-ref name="isInput" scoped="" ref="0x1a5f3440"/>
        <function-ref name="toggle" scoped="" ref="0x1a5f3520"/>
        <function-ref name="isOutput" scoped="" ref="0x1a5f3600"/>
        <function-ref name="get" scoped="" ref="0x1a5f36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a5f37c0"/>
        <function-ref name="set" scoped="" ref="0x1a5f38a0"/>
        <function-ref name="clr" scoped="" ref="0x1a5f3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x1a602190" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x1a602190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6023e8"/>
        <function-ref name="isInput" scoped="" ref="0x1a6024c8"/>
        <function-ref name="toggle" scoped="" ref="0x1a6025a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1a602688"/>
        <function-ref name="get" scoped="" ref="0x1a602768"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a602848"/>
        <function-ref name="set" scoped="" ref="0x1a602928"/>
        <function-ref name="clr" scoped="" ref="0x1a602a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x1a611190" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x1a611190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a611368"/>
        <function-ref name="isInput" scoped="" ref="0x1a611448"/>
        <function-ref name="toggle" scoped="" ref="0x1a611528"/>
        <function-ref name="isOutput" scoped="" ref="0x1a611608"/>
        <function-ref name="get" scoped="" ref="0x1a6116e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6117c8"/>
        <function-ref name="set" scoped="" ref="0x1a6118a8"/>
        <function-ref name="clr" scoped="" ref="0x1a611988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x1a642508" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x1a642508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6426e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a6427c0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6428a0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a642980"/>
        <function-ref name="get" scoped="" ref="0x1a642a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a642b40"/>
        <function-ref name="set" scoped="" ref="0x1a642c20"/>
        <function-ref name="clr" scoped="" ref="0x1a642d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x1a610508" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x1a610508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6107e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a6108c0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6109a0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a610a80"/>
        <function-ref name="get" scoped="" ref="0x1a610b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a610c40"/>
        <function-ref name="set" scoped="" ref="0x1a610d20"/>
        <function-ref name="clr" scoped="" ref="0x1a610e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x1a6347a8" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x1a6347a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a634980"/>
        <function-ref name="isInput" scoped="" ref="0x1a634a60"/>
        <function-ref name="toggle" scoped="" ref="0x1a634b40"/>
        <function-ref name="isOutput" scoped="" ref="0x1a634c20"/>
        <function-ref name="get" scoped="" ref="0x1a634d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a634de0"/>
        <function-ref name="set" scoped="" ref="0x1a634ec0"/>
        <function-ref name="clr" scoped="" ref="0x1a633010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x1a645508" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x1a645508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6456e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a6457c0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6458a0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a645980"/>
        <function-ref name="get" scoped="" ref="0x1a645a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a645b40"/>
        <function-ref name="set" scoped="" ref="0x1a645c20"/>
        <function-ref name="clr" scoped="" ref="0x1a645d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x1a6557a8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x1a6557a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a655980"/>
        <function-ref name="isInput" scoped="" ref="0x1a655a60"/>
        <function-ref name="toggle" scoped="" ref="0x1a655b40"/>
        <function-ref name="isOutput" scoped="" ref="0x1a655c20"/>
        <function-ref name="get" scoped="" ref="0x1a655d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a655de0"/>
        <function-ref name="set" scoped="" ref="0x1a655ec0"/>
        <function-ref name="clr" scoped="" ref="0x1a654010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x1a5f2e78" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x1a5f2e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5f1070"/>
        <function-ref name="isInput" scoped="" ref="0x1a5f1150"/>
        <function-ref name="toggle" scoped="" ref="0x1a5f1230"/>
        <function-ref name="isOutput" scoped="" ref="0x1a5f1310"/>
        <function-ref name="get" scoped="" ref="0x1a5f13f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a5f14d0"/>
        <function-ref name="set" scoped="" ref="0x1a5f15b0"/>
        <function-ref name="clr" scoped="" ref="0x1a5f1690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x1a601e78" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x1a601e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a600070"/>
        <function-ref name="isInput" scoped="" ref="0x1a600150"/>
        <function-ref name="toggle" scoped="" ref="0x1a600230"/>
        <function-ref name="isOutput" scoped="" ref="0x1a600310"/>
        <function-ref name="get" scoped="" ref="0x1a6003f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6004d0"/>
        <function-ref name="set" scoped="" ref="0x1a6005b0"/>
        <function-ref name="clr" scoped="" ref="0x1a600690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x1a630190" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x1a630190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a630368"/>
        <function-ref name="isInput" scoped="" ref="0x1a630448"/>
        <function-ref name="toggle" scoped="" ref="0x1a630528"/>
        <function-ref name="isOutput" scoped="" ref="0x1a630608"/>
        <function-ref name="get" scoped="" ref="0x1a6306e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6307c8"/>
        <function-ref name="set" scoped="" ref="0x1a6308a8"/>
        <function-ref name="clr" scoped="" ref="0x1a630988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x1a614190" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x1a614190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a614368"/>
        <function-ref name="isInput" scoped="" ref="0x1a614448"/>
        <function-ref name="toggle" scoped="" ref="0x1a614528"/>
        <function-ref name="isOutput" scoped="" ref="0x1a614608"/>
        <function-ref name="get" scoped="" ref="0x1a6146e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6147c8"/>
        <function-ref name="set" scoped="" ref="0x1a6148a8"/>
        <function-ref name="clr" scoped="" ref="0x1a614988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x1a623348" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x1a623348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a623520"/>
        <function-ref name="isInput" scoped="" ref="0x1a623600"/>
        <function-ref name="toggle" scoped="" ref="0x1a6236e0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6237c0"/>
        <function-ref name="get" scoped="" ref="0x1a6238a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a623980"/>
        <function-ref name="set" scoped="" ref="0x1a623a60"/>
        <function-ref name="clr" scoped="" ref="0x1a623b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x1a632508" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x1a632508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6326e0"/>
        <function-ref name="isInput" scoped="" ref="0x1a6327c0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6328a0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a632980"/>
        <function-ref name="get" scoped="" ref="0x1a632a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a632b40"/>
        <function-ref name="set" scoped="" ref="0x1a632c20"/>
        <function-ref name="clr" scoped="" ref="0x1a632d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x1a643190" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x1a643190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a643368"/>
        <function-ref name="isInput" scoped="" ref="0x1a643448"/>
        <function-ref name="toggle" scoped="" ref="0x1a643528"/>
        <function-ref name="isOutput" scoped="" ref="0x1a643608"/>
        <function-ref name="get" scoped="" ref="0x1a6436e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6437c8"/>
        <function-ref name="set" scoped="" ref="0x1a6438a8"/>
        <function-ref name="clr" scoped="" ref="0x1a643988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x1a5e0d68" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x1a5e0d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5f4010"/>
        <function-ref name="isInput" scoped="" ref="0x1a5f40f0"/>
        <function-ref name="toggle" scoped="" ref="0x1a5f41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a5f42b0"/>
        <function-ref name="get" scoped="" ref="0x1a5f4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a5f4470"/>
        <function-ref name="set" scoped="" ref="0x1a5f4550"/>
        <function-ref name="clr" scoped="" ref="0x1a5f4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x1a604e78" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x1a604e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a603070"/>
        <function-ref name="isInput" scoped="" ref="0x1a603150"/>
        <function-ref name="toggle" scoped="" ref="0x1a603230"/>
        <function-ref name="isOutput" scoped="" ref="0x1a603310"/>
        <function-ref name="get" scoped="" ref="0x1a6033f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6034d0"/>
        <function-ref name="set" scoped="" ref="0x1a6035b0"/>
        <function-ref name="clr" scoped="" ref="0x1a603690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x1a613e78" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x1a613e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a612070"/>
        <function-ref name="isInput" scoped="" ref="0x1a612150"/>
        <function-ref name="toggle" scoped="" ref="0x1a612230"/>
        <function-ref name="isOutput" scoped="" ref="0x1a612310"/>
        <function-ref name="get" scoped="" ref="0x1a6123f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6124d0"/>
        <function-ref name="set" scoped="" ref="0x1a6125b0"/>
        <function-ref name="clr" scoped="" ref="0x1a612690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x1a620068" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x1a620068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a620240"/>
        <function-ref name="isInput" scoped="" ref="0x1a620320"/>
        <function-ref name="toggle" scoped="" ref="0x1a620400"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6204e0"/>
        <function-ref name="get" scoped="" ref="0x1a6205c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6206a0"/>
        <function-ref name="set" scoped="" ref="0x1a620780"/>
        <function-ref name="clr" scoped="" ref="0x1a620860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x1a640428" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x1a640428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a640600"/>
        <function-ref name="isInput" scoped="" ref="0x1a6406e0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6407c0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6408a0"/>
        <function-ref name="get" scoped="" ref="0x1a640980"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a640a60"/>
        <function-ref name="set" scoped="" ref="0x1a640b40"/>
        <function-ref name="clr" scoped="" ref="0x1a640c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x1a635428" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x1a635428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a635600"/>
        <function-ref name="isInput" scoped="" ref="0x1a6356e0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6357c0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6358a0"/>
        <function-ref name="get" scoped="" ref="0x1a635980"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a635a60"/>
        <function-ref name="set" scoped="" ref="0x1a635b40"/>
        <function-ref name="clr" scoped="" ref="0x1a635c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x1a611b00" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x1a611b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a611cd8"/>
        <function-ref name="isInput" scoped="" ref="0x1a611db8"/>
        <function-ref name="toggle" scoped="" ref="0x1a611e98"/>
        <function-ref name="isOutput" scoped="" ref="0x1a610010"/>
        <function-ref name="get" scoped="" ref="0x1a6100f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6101d0"/>
        <function-ref name="set" scoped="" ref="0x1a6102b0"/>
        <function-ref name="clr" scoped="" ref="0x1a610390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x1a5f3af8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x1a5f3af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a5f3cd0"/>
        <function-ref name="isInput" scoped="" ref="0x1a5f3db0"/>
        <function-ref name="toggle" scoped="" ref="0x1a5f3e90"/>
        <function-ref name="isOutput" scoped="" ref="0x1a5f2010"/>
        <function-ref name="get" scoped="" ref="0x1a5f20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a5f21d0"/>
        <function-ref name="set" scoped="" ref="0x1a5f22b0"/>
        <function-ref name="clr" scoped="" ref="0x1a5f2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x1a602b80" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x1a602b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a602d58"/>
        <function-ref name="isInput" scoped="" ref="0x1a602e38"/>
        <function-ref name="toggle" scoped="" ref="0x1a602f18"/>
        <function-ref name="isOutput" scoped="" ref="0x1a601010"/>
        <function-ref name="get" scoped="" ref="0x1a6010f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6011d0"/>
        <function-ref name="set" scoped="" ref="0x1a6012b0"/>
        <function-ref name="clr" scoped="" ref="0x1a601390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x1a6b07f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x1a6b07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6b09c8"/>
        <function-ref name="isInput" scoped="" ref="0x1a6b0aa8"/>
        <function-ref name="toggle" scoped="" ref="0x1a6b0b88"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6b0c68"/>
        <function-ref name="get" scoped="" ref="0x1a6b0d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6b0e28"/>
        <function-ref name="set" scoped="" ref="0x1a6b0f08"/>
        <function-ref name="clr" scoped="" ref="0x1a6c5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x1a6c44f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x1a6c44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6c46c8"/>
        <function-ref name="isInput" scoped="" ref="0x1a6c47a8"/>
        <function-ref name="toggle" scoped="" ref="0x1a6c4888"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6c4968"/>
        <function-ref name="get" scoped="" ref="0x1a6c4a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6c4b28"/>
        <function-ref name="set" scoped="" ref="0x1a6c4c08"/>
        <function-ref name="clr" scoped="" ref="0x1a6c4ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x1a6b1518" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x1a6b1518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6b16f0"/>
        <function-ref name="isInput" scoped="" ref="0x1a6b17d0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6b18b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6b1990"/>
        <function-ref name="get" scoped="" ref="0x1a6b1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6b1b50"/>
        <function-ref name="set" scoped="" ref="0x1a6b1c30"/>
        <function-ref name="clr" scoped="" ref="0x1a6b1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x1a6c5170" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x1a6c5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6c5348"/>
        <function-ref name="isInput" scoped="" ref="0x1a6c5428"/>
        <function-ref name="toggle" scoped="" ref="0x1a6c5508"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6c55e8"/>
        <function-ref name="get" scoped="" ref="0x1a6c56c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6c57a8"/>
        <function-ref name="set" scoped="" ref="0x1a6c5888"/>
        <function-ref name="clr" scoped="" ref="0x1a6c5968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x1a6c4e48" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x1a6c4e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6c3050"/>
        <function-ref name="isInput" scoped="" ref="0x1a6c3130"/>
        <function-ref name="toggle" scoped="" ref="0x1a6c3210"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6c32f0"/>
        <function-ref name="get" scoped="" ref="0x1a6c33d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6c34b0"/>
        <function-ref name="set" scoped="" ref="0x1a6c3590"/>
        <function-ref name="clr" scoped="" ref="0x1a6c3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x1a6b1e70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x1a6b1e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6b0070"/>
        <function-ref name="isInput" scoped="" ref="0x1a6b0150"/>
        <function-ref name="toggle" scoped="" ref="0x1a6b0230"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6b0310"/>
        <function-ref name="get" scoped="" ref="0x1a6b03f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6b04d0"/>
        <function-ref name="set" scoped="" ref="0x1a6b05b0"/>
        <function-ref name="clr" scoped="" ref="0x1a6b0690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x1a6c5ac8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x1a6c5ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6c5ca0"/>
        <function-ref name="isInput" scoped="" ref="0x1a6c5d80"/>
        <function-ref name="toggle" scoped="" ref="0x1a6c5e60"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6c4010"/>
        <function-ref name="get" scoped="" ref="0x1a6c40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6c41d0"/>
        <function-ref name="set" scoped="" ref="0x1a6c42b0"/>
        <function-ref name="clr" scoped="" ref="0x1a6c4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x1a6c37d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x1a6c37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6c39a8"/>
        <function-ref name="isInput" scoped="" ref="0x1a6c3a88"/>
        <function-ref name="toggle" scoped="" ref="0x1a6c3b68"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6c3c48"/>
        <function-ref name="get" scoped="" ref="0x1a6c3d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6c3e08"/>
        <function-ref name="set" scoped="" ref="0x1a6c3ee8"/>
        <function-ref name="clr" scoped="" ref="0x1a6c2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b597538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b597538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b597710"/>
        <function-ref name="isInput" scoped="" ref="0x1b5977f0"/>
        <function-ref name="toggle" scoped="" ref="0x1b5978d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b5979b0"/>
        <function-ref name="get" scoped="" ref="0x1b597a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b597b70"/>
        <function-ref name="set" scoped="" ref="0x1b597c50"/>
        <function-ref name="clr" scoped="" ref="0x1b597d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b595010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b595010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b5951e8"/>
        <function-ref name="isInput" scoped="" ref="0x1b5952c8"/>
        <function-ref name="toggle" scoped="" ref="0x1b5953a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1b595488"/>
        <function-ref name="get" scoped="" ref="0x1b595568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b595648"/>
        <function-ref name="set" scoped="" ref="0x1b595728"/>
        <function-ref name="clr" scoped="" ref="0x1b595808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b5949e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b5949e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b594bc0"/>
        <function-ref name="isInput" scoped="" ref="0x1b594ca0"/>
        <function-ref name="toggle" scoped="" ref="0x1b594d80"/>
        <function-ref name="isOutput" scoped="" ref="0x1b594e60"/>
        <function-ref name="get" scoped="" ref="0x1b593010"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b5930f0"/>
        <function-ref name="set" scoped="" ref="0x1b5931d0"/>
        <function-ref name="clr" scoped="" ref="0x1b5932b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b592538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b592538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b592710"/>
        <function-ref name="isInput" scoped="" ref="0x1b5927f0"/>
        <function-ref name="toggle" scoped="" ref="0x1b5928d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b5929b0"/>
        <function-ref name="get" scoped="" ref="0x1b592a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b592b70"/>
        <function-ref name="set" scoped="" ref="0x1b592c50"/>
        <function-ref name="clr" scoped="" ref="0x1b592d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b590010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b590010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b5901e8"/>
        <function-ref name="isInput" scoped="" ref="0x1b5902c8"/>
        <function-ref name="toggle" scoped="" ref="0x1b5903a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1b590488"/>
        <function-ref name="get" scoped="" ref="0x1b590568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b590648"/>
        <function-ref name="set" scoped="" ref="0x1b590728"/>
        <function-ref name="clr" scoped="" ref="0x1b590808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b5d89e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b5d89e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b5d8bc0"/>
        <function-ref name="isInput" scoped="" ref="0x1b5d8ca0"/>
        <function-ref name="toggle" scoped="" ref="0x1b5d8d80"/>
        <function-ref name="isOutput" scoped="" ref="0x1b5d8e60"/>
        <function-ref name="get" scoped="" ref="0x1b5d7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b5d70f0"/>
        <function-ref name="set" scoped="" ref="0x1b5d71d0"/>
        <function-ref name="clr" scoped="" ref="0x1b5d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b5d6538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b5d6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b5d6710"/>
        <function-ref name="isInput" scoped="" ref="0x1b5d67f0"/>
        <function-ref name="toggle" scoped="" ref="0x1b5d68d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b5d69b0"/>
        <function-ref name="get" scoped="" ref="0x1b5d6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b5d6b70"/>
        <function-ref name="set" scoped="" ref="0x1b5d6c50"/>
        <function-ref name="clr" scoped="" ref="0x1b5d6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b5d4010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b5d4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b5d41e8"/>
        <function-ref name="isInput" scoped="" ref="0x1b5d42c8"/>
        <function-ref name="toggle" scoped="" ref="0x1b5d43a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1b5d4488"/>
        <function-ref name="get" scoped="" ref="0x1b5d4568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b5d4648"/>
        <function-ref name="set" scoped="" ref="0x1b5d4728"/>
        <function-ref name="clr" scoped="" ref="0x1b5d4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x1a6d4f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x1a6d4f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6d3110"/>
        <function-ref name="isInput" scoped="" ref="0x1a6d31f0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6d32d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6d33b0"/>
        <function-ref name="get" scoped="" ref="0x1a6d3490"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6d3570"/>
        <function-ref name="set" scoped="" ref="0x1a6d3650"/>
        <function-ref name="clr" scoped="" ref="0x1a6d3730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x1a6d2ba8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x1a6d2ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6d2d80"/>
        <function-ref name="isInput" scoped="" ref="0x1a6d2e60"/>
        <function-ref name="toggle" scoped="" ref="0x1a6d1010"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6d10f0"/>
        <function-ref name="get" scoped="" ref="0x1a6d11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6d12b0"/>
        <function-ref name="set" scoped="" ref="0x1a6d1390"/>
        <function-ref name="clr" scoped="" ref="0x1a6d1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x1a6d5bc0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x1a6d5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6d5d98"/>
        <function-ref name="isInput" scoped="" ref="0x1a6d5e78"/>
        <function-ref name="toggle" scoped="" ref="0x1a6d4010"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6d40f0"/>
        <function-ref name="get" scoped="" ref="0x1a6d41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6d42b0"/>
        <function-ref name="set" scoped="" ref="0x1a6d4390"/>
        <function-ref name="clr" scoped="" ref="0x1a6d4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x1a6d3890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x1a6d3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6d3a68"/>
        <function-ref name="isInput" scoped="" ref="0x1a6d3b48"/>
        <function-ref name="toggle" scoped="" ref="0x1a6d3c28"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6d3d08"/>
        <function-ref name="get" scoped="" ref="0x1a6d3de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6d3ec8"/>
        <function-ref name="set" scoped="" ref="0x1a6d2010"/>
        <function-ref name="clr" scoped="" ref="0x1a6d20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x1a6d15d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x1a6d15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6d17a8"/>
        <function-ref name="isInput" scoped="" ref="0x1a6d1888"/>
        <function-ref name="toggle" scoped="" ref="0x1a6d1968"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6d1a48"/>
        <function-ref name="get" scoped="" ref="0x1a6d1b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6d1c08"/>
        <function-ref name="set" scoped="" ref="0x1a6d1ce8"/>
        <function-ref name="clr" scoped="" ref="0x1a6d1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x1a6d45d0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x1a6d45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6d47a8"/>
        <function-ref name="isInput" scoped="" ref="0x1a6d4888"/>
        <function-ref name="toggle" scoped="" ref="0x1a6d4968"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6d4a48"/>
        <function-ref name="get" scoped="" ref="0x1a6d4b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6d4c08"/>
        <function-ref name="set" scoped="" ref="0x1a6d4ce8"/>
        <function-ref name="clr" scoped="" ref="0x1a6d4dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x1a6d2250" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x1a6d2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6d2428"/>
        <function-ref name="isInput" scoped="" ref="0x1a6d2508"/>
        <function-ref name="toggle" scoped="" ref="0x1a6d25e8"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6d26c8"/>
        <function-ref name="get" scoped="" ref="0x1a6d27a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6d2888"/>
        <function-ref name="set" scoped="" ref="0x1a6d2968"/>
        <function-ref name="clr" scoped="" ref="0x1a6d2a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x1a6d1f28" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x1a6d1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6d0110"/>
        <function-ref name="isInput" scoped="" ref="0x1a6d01f0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6d02d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6d03b0"/>
        <function-ref name="get" scoped="" ref="0x1a6d0490"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6d0570"/>
        <function-ref name="set" scoped="" ref="0x1a6d0650"/>
        <function-ref name="clr" scoped="" ref="0x1a6d0730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b5e8d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b5e8d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b5e8ee0"/>
        <function-ref name="isInput" scoped="" ref="0x1b5e5010"/>
        <function-ref name="toggle" scoped="" ref="0x1b5e50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b5e51d0"/>
        <function-ref name="get" scoped="" ref="0x1b5e52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b5e5390"/>
        <function-ref name="set" scoped="" ref="0x1b5e5470"/>
        <function-ref name="clr" scoped="" ref="0x1b5e5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b5e4718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b5e4718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b5e48f0"/>
        <function-ref name="isInput" scoped="" ref="0x1b5e49d0"/>
        <function-ref name="toggle" scoped="" ref="0x1b5e4ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b5e4b90"/>
        <function-ref name="get" scoped="" ref="0x1b5e4c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b5e4d50"/>
        <function-ref name="set" scoped="" ref="0x1b5e4e30"/>
        <function-ref name="clr" scoped="" ref="0x1b5e4f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b5e20f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b5e20f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b5e22d0"/>
        <function-ref name="isInput" scoped="" ref="0x1b5e23b0"/>
        <function-ref name="toggle" scoped="" ref="0x1b5e2490"/>
        <function-ref name="isOutput" scoped="" ref="0x1b5e2570"/>
        <function-ref name="get" scoped="" ref="0x1b5e2650"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b5e2730"/>
        <function-ref name="set" scoped="" ref="0x1b5e2810"/>
        <function-ref name="clr" scoped="" ref="0x1b5e28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b5e1ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b5e1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b5e1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x1b5e1d80"/>
        <function-ref name="toggle" scoped="" ref="0x1b5e1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x1b5e0010"/>
        <function-ref name="get" scoped="" ref="0x1b5e00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b5e01d0"/>
        <function-ref name="set" scoped="" ref="0x1b5e02b0"/>
        <function-ref name="clr" scoped="" ref="0x1b5e0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b618570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b618570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b618748"/>
        <function-ref name="isInput" scoped="" ref="0x1b618828"/>
        <function-ref name="toggle" scoped="" ref="0x1b618908"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6189e8"/>
        <function-ref name="get" scoped="" ref="0x1b618ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b618ba8"/>
        <function-ref name="set" scoped="" ref="0x1b618c88"/>
        <function-ref name="clr" scoped="" ref="0x1b618d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b616010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b616010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6161e8"/>
        <function-ref name="isInput" scoped="" ref="0x1b6162c8"/>
        <function-ref name="toggle" scoped="" ref="0x1b6163a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1b616488"/>
        <function-ref name="get" scoped="" ref="0x1b616568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b616648"/>
        <function-ref name="set" scoped="" ref="0x1b616728"/>
        <function-ref name="clr" scoped="" ref="0x1b616808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6149e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6149e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b614bc0"/>
        <function-ref name="isInput" scoped="" ref="0x1b614ca0"/>
        <function-ref name="toggle" scoped="" ref="0x1b614d80"/>
        <function-ref name="isOutput" scoped="" ref="0x1b614e60"/>
        <function-ref name="get" scoped="" ref="0x1b613010"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6130f0"/>
        <function-ref name="set" scoped="" ref="0x1b6131d0"/>
        <function-ref name="clr" scoped="" ref="0x1b6132b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b612538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b612538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b612710"/>
        <function-ref name="isInput" scoped="" ref="0x1b6127f0"/>
        <function-ref name="toggle" scoped="" ref="0x1b6128d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6129b0"/>
        <function-ref name="get" scoped="" ref="0x1b612a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b612b70"/>
        <function-ref name="set" scoped="" ref="0x1b612c50"/>
        <function-ref name="clr" scoped="" ref="0x1b612d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x1a6e15d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x1a6e15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6e17a8"/>
        <function-ref name="isInput" scoped="" ref="0x1a6e1888"/>
        <function-ref name="toggle" scoped="" ref="0x1a6e1968"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6e1a48"/>
        <function-ref name="get" scoped="" ref="0x1a6e1b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6e1c08"/>
        <function-ref name="set" scoped="" ref="0x1a6e1ce8"/>
        <function-ref name="clr" scoped="" ref="0x1a6e1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x1a6f5250" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x1a6f5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6f5428"/>
        <function-ref name="isInput" scoped="" ref="0x1a6f5508"/>
        <function-ref name="toggle" scoped="" ref="0x1a6f55e8"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6f56c8"/>
        <function-ref name="get" scoped="" ref="0x1a6f57a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6f5888"/>
        <function-ref name="set" scoped="" ref="0x1a6f5968"/>
        <function-ref name="clr" scoped="" ref="0x1a6f5a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x1a6e22a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x1a6e22a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6e2478"/>
        <function-ref name="isInput" scoped="" ref="0x1a6e2558"/>
        <function-ref name="toggle" scoped="" ref="0x1a6e2638"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6e2718"/>
        <function-ref name="get" scoped="" ref="0x1a6e27f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6e28d8"/>
        <function-ref name="set" scoped="" ref="0x1a6e29b8"/>
        <function-ref name="clr" scoped="" ref="0x1a6e2a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x1a6e1f28" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x1a6e1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6e0110"/>
        <function-ref name="isInput" scoped="" ref="0x1a6e01f0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6e02d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6e03b0"/>
        <function-ref name="get" scoped="" ref="0x1a6e0490"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6e0570"/>
        <function-ref name="set" scoped="" ref="0x1a6e0650"/>
        <function-ref name="clr" scoped="" ref="0x1a6e0730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x1a6f5ba8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x1a6f5ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6f5d80"/>
        <function-ref name="isInput" scoped="" ref="0x1a6f5e60"/>
        <function-ref name="toggle" scoped="" ref="0x1a6f4010"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6f40f0"/>
        <function-ref name="get" scoped="" ref="0x1a6f41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6f42b0"/>
        <function-ref name="set" scoped="" ref="0x1a6f4390"/>
        <function-ref name="clr" scoped="" ref="0x1a6f4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x1a6e2bf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x1a6e2bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6e2dd0"/>
        <function-ref name="isInput" scoped="" ref="0x1a6e2eb0"/>
        <function-ref name="toggle" scoped="" ref="0x1a6e1010"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6e10f0"/>
        <function-ref name="get" scoped="" ref="0x1a6e11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6e12b0"/>
        <function-ref name="set" scoped="" ref="0x1a6e1390"/>
        <function-ref name="clr" scoped="" ref="0x1a6e1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x1a6e0890" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x1a6e0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6e0a68"/>
        <function-ref name="isInput" scoped="" ref="0x1a6e0b48"/>
        <function-ref name="toggle" scoped="" ref="0x1a6e0c28"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6e0d08"/>
        <function-ref name="get" scoped="" ref="0x1a6e0de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6e0ec8"/>
        <function-ref name="set" scoped="" ref="0x1a6f5010"/>
        <function-ref name="clr" scoped="" ref="0x1a6f50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x1a6f45d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x1a6f45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6f47a8"/>
        <function-ref name="isInput" scoped="" ref="0x1a6f4888"/>
        <function-ref name="toggle" scoped="" ref="0x1a6f4968"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6f4a48"/>
        <function-ref name="get" scoped="" ref="0x1a6f4b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6f4c08"/>
        <function-ref name="set" scoped="" ref="0x1a6f4ce8"/>
        <function-ref name="clr" scoped="" ref="0x1a6f4dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6232b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6232b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b623488"/>
        <function-ref name="isInput" scoped="" ref="0x1b623568"/>
        <function-ref name="toggle" scoped="" ref="0x1b623648"/>
        <function-ref name="isOutput" scoped="" ref="0x1b623728"/>
        <function-ref name="get" scoped="" ref="0x1b623808"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6238e8"/>
        <function-ref name="set" scoped="" ref="0x1b6239c8"/>
        <function-ref name="clr" scoped="" ref="0x1b623aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b622c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b622c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b622e50"/>
        <function-ref name="isInput" scoped="" ref="0x1b621010"/>
        <function-ref name="toggle" scoped="" ref="0x1b6210f0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6211d0"/>
        <function-ref name="get" scoped="" ref="0x1b6212b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b621390"/>
        <function-ref name="set" scoped="" ref="0x1b621470"/>
        <function-ref name="clr" scoped="" ref="0x1b621550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b620718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b620718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6208f0"/>
        <function-ref name="isInput" scoped="" ref="0x1b6209d0"/>
        <function-ref name="toggle" scoped="" ref="0x1b620ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b620b90"/>
        <function-ref name="get" scoped="" ref="0x1b620c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b620d50"/>
        <function-ref name="set" scoped="" ref="0x1b620e30"/>
        <function-ref name="clr" scoped="" ref="0x1b620f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6580f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6580f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6582d0"/>
        <function-ref name="isInput" scoped="" ref="0x1b6583b0"/>
        <function-ref name="toggle" scoped="" ref="0x1b658490"/>
        <function-ref name="isOutput" scoped="" ref="0x1b658570"/>
        <function-ref name="get" scoped="" ref="0x1b658650"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b658730"/>
        <function-ref name="set" scoped="" ref="0x1b658810"/>
        <function-ref name="clr" scoped="" ref="0x1b6588f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b657ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b657ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b657ca0"/>
        <function-ref name="isInput" scoped="" ref="0x1b657d80"/>
        <function-ref name="toggle" scoped="" ref="0x1b657e60"/>
        <function-ref name="isOutput" scoped="" ref="0x1b656010"/>
        <function-ref name="get" scoped="" ref="0x1b6560f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6561d0"/>
        <function-ref name="set" scoped="" ref="0x1b6562b0"/>
        <function-ref name="clr" scoped="" ref="0x1b656390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b655570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b655570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b655748"/>
        <function-ref name="isInput" scoped="" ref="0x1b655828"/>
        <function-ref name="toggle" scoped="" ref="0x1b655908"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6559e8"/>
        <function-ref name="get" scoped="" ref="0x1b655ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b655ba8"/>
        <function-ref name="set" scoped="" ref="0x1b655c88"/>
        <function-ref name="clr" scoped="" ref="0x1b655d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b653010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b653010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6531e8"/>
        <function-ref name="isInput" scoped="" ref="0x1b6532c8"/>
        <function-ref name="toggle" scoped="" ref="0x1b6533a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1b653488"/>
        <function-ref name="get" scoped="" ref="0x1b653568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b653648"/>
        <function-ref name="set" scoped="" ref="0x1b653728"/>
        <function-ref name="clr" scoped="" ref="0x1b653808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6529e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6529e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b652bc0"/>
        <function-ref name="isInput" scoped="" ref="0x1b652ca0"/>
        <function-ref name="toggle" scoped="" ref="0x1b652d80"/>
        <function-ref name="isOutput" scoped="" ref="0x1b652e60"/>
        <function-ref name="get" scoped="" ref="0x1b651010"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6510f0"/>
        <function-ref name="set" scoped="" ref="0x1b6511d0"/>
        <function-ref name="clr" scoped="" ref="0x1b6512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x1a6f0c88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x1a6f0c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6f0e60"/>
        <function-ref name="isInput" scoped="" ref="0x1a704010"/>
        <function-ref name="toggle" scoped="" ref="0x1a7040f0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7041d0"/>
        <function-ref name="get" scoped="" ref="0x1a7042b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a704390"/>
        <function-ref name="set" scoped="" ref="0x1a704470"/>
        <function-ref name="clr" scoped="" ref="0x1a704550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x1a703988" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x1a703988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a703b60"/>
        <function-ref name="isInput" scoped="" ref="0x1a703c40"/>
        <function-ref name="toggle" scoped="" ref="0x1a703d20"/>
        <function-ref name="isOutput" scoped="" ref="0x1a703e00"/>
        <function-ref name="get" scoped="" ref="0x1a703ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a702010"/>
        <function-ref name="set" scoped="" ref="0x1a7020f0"/>
        <function-ref name="clr" scoped="" ref="0x1a7021d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x1a6f19c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x1a6f19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6f1b98"/>
        <function-ref name="isInput" scoped="" ref="0x1a6f1c78"/>
        <function-ref name="toggle" scoped="" ref="0x1a6f1d58"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6f1e38"/>
        <function-ref name="get" scoped="" ref="0x1a6f1f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6f0010"/>
        <function-ref name="set" scoped="" ref="0x1a6f00f0"/>
        <function-ref name="clr" scoped="" ref="0x1a6f01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x1a7046b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x1a7046b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a704888"/>
        <function-ref name="isInput" scoped="" ref="0x1a704968"/>
        <function-ref name="toggle" scoped="" ref="0x1a704a48"/>
        <function-ref name="isOutput" scoped="" ref="0x1a704b28"/>
        <function-ref name="get" scoped="" ref="0x1a704c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a704ce8"/>
        <function-ref name="set" scoped="" ref="0x1a704dc8"/>
        <function-ref name="clr" scoped="" ref="0x1a704ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x1a702330" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x1a702330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a702508"/>
        <function-ref name="isInput" scoped="" ref="0x1a7025e8"/>
        <function-ref name="toggle" scoped="" ref="0x1a7026c8"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7027a8"/>
        <function-ref name="get" scoped="" ref="0x1a702888"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a702968"/>
        <function-ref name="set" scoped="" ref="0x1a702a48"/>
        <function-ref name="clr" scoped="" ref="0x1a702b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x1a6f0330" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x1a6f0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a6f0508"/>
        <function-ref name="isInput" scoped="" ref="0x1a6f05e8"/>
        <function-ref name="toggle" scoped="" ref="0x1a6f06c8"/>
        <function-ref name="isOutput" scoped="" ref="0x1a6f07a8"/>
        <function-ref name="get" scoped="" ref="0x1a6f0888"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a6f0968"/>
        <function-ref name="set" scoped="" ref="0x1a6f0a48"/>
        <function-ref name="clr" scoped="" ref="0x1a6f0b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x1a703030" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x1a703030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a703208"/>
        <function-ref name="isInput" scoped="" ref="0x1a7032e8"/>
        <function-ref name="toggle" scoped="" ref="0x1a7033c8"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7034a8"/>
        <function-ref name="get" scoped="" ref="0x1a703588"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a703668"/>
        <function-ref name="set" scoped="" ref="0x1a703748"/>
        <function-ref name="clr" scoped="" ref="0x1a703828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x1a702c88" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x1a702c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a702e60"/>
        <function-ref name="isInput" scoped="" ref="0x1a701010"/>
        <function-ref name="toggle" scoped="" ref="0x1a7010f0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7011d0"/>
        <function-ref name="get" scoped="" ref="0x1a7012b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a701390"/>
        <function-ref name="set" scoped="" ref="0x1a701470"/>
        <function-ref name="clr" scoped="" ref="0x1a701550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6637f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6637f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6639d0"/>
        <function-ref name="isInput" scoped="" ref="0x1b663ab0"/>
        <function-ref name="toggle" scoped="" ref="0x1b663b90"/>
        <function-ref name="isOutput" scoped="" ref="0x1b663c70"/>
        <function-ref name="get" scoped="" ref="0x1b663d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b663e30"/>
        <function-ref name="set" scoped="" ref="0x1b663f10"/>
        <function-ref name="clr" scoped="" ref="0x1b662010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b661228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b661228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b661400"/>
        <function-ref name="isInput" scoped="" ref="0x1b6614e0"/>
        <function-ref name="toggle" scoped="" ref="0x1b6615c0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6616a0"/>
        <function-ref name="get" scoped="" ref="0x1b661780"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b661860"/>
        <function-ref name="set" scoped="" ref="0x1b661940"/>
        <function-ref name="clr" scoped="" ref="0x1b661a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b660c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b660c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b660de0"/>
        <function-ref name="isInput" scoped="" ref="0x1b660ec0"/>
        <function-ref name="toggle" scoped="" ref="0x1b699010"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6990f0"/>
        <function-ref name="get" scoped="" ref="0x1b6991d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6992b0"/>
        <function-ref name="set" scoped="" ref="0x1b699390"/>
        <function-ref name="clr" scoped="" ref="0x1b699470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6986c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6986c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b698898"/>
        <function-ref name="isInput" scoped="" ref="0x1b698978"/>
        <function-ref name="toggle" scoped="" ref="0x1b698a58"/>
        <function-ref name="isOutput" scoped="" ref="0x1b698b38"/>
        <function-ref name="get" scoped="" ref="0x1b698c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b698cf8"/>
        <function-ref name="set" scoped="" ref="0x1b698dd8"/>
        <function-ref name="clr" scoped="" ref="0x1b698eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6960b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6960b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b696288"/>
        <function-ref name="isInput" scoped="" ref="0x1b696368"/>
        <function-ref name="toggle" scoped="" ref="0x1b696448"/>
        <function-ref name="isOutput" scoped="" ref="0x1b696528"/>
        <function-ref name="get" scoped="" ref="0x1b696608"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6966e8"/>
        <function-ref name="set" scoped="" ref="0x1b6967c8"/>
        <function-ref name="clr" scoped="" ref="0x1b6968a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b695a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b695a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b695c60"/>
        <function-ref name="isInput" scoped="" ref="0x1b695d40"/>
        <function-ref name="toggle" scoped="" ref="0x1b695e20"/>
        <function-ref name="isOutput" scoped="" ref="0x1b695f00"/>
        <function-ref name="get" scoped="" ref="0x1b694010"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6940f0"/>
        <function-ref name="set" scoped="" ref="0x1b6941d0"/>
        <function-ref name="clr" scoped="" ref="0x1b6942b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b693538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b693538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b693710"/>
        <function-ref name="isInput" scoped="" ref="0x1b6937f0"/>
        <function-ref name="toggle" scoped="" ref="0x1b6938d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6939b0"/>
        <function-ref name="get" scoped="" ref="0x1b693a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b693b70"/>
        <function-ref name="set" scoped="" ref="0x1b693c50"/>
        <function-ref name="clr" scoped="" ref="0x1b693d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b691010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b691010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6911e8"/>
        <function-ref name="isInput" scoped="" ref="0x1b6912c8"/>
        <function-ref name="toggle" scoped="" ref="0x1b6913a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1b691488"/>
        <function-ref name="get" scoped="" ref="0x1b691568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b691648"/>
        <function-ref name="set" scoped="" ref="0x1b691728"/>
        <function-ref name="clr" scoped="" ref="0x1b691808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x1a713410" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x1a713410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a7135e8"/>
        <function-ref name="isInput" scoped="" ref="0x1a7136c8"/>
        <function-ref name="toggle" scoped="" ref="0x1a7137a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1a713888"/>
        <function-ref name="get" scoped="" ref="0x1a713968"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a713a48"/>
        <function-ref name="set" scoped="" ref="0x1a713b28"/>
        <function-ref name="clr" scoped="" ref="0x1a713c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x1a710170" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x1a710170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a710348"/>
        <function-ref name="isInput" scoped="" ref="0x1a710428"/>
        <function-ref name="toggle" scoped="" ref="0x1a710508"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7105e8"/>
        <function-ref name="get" scoped="" ref="0x1a7106c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7107a8"/>
        <function-ref name="set" scoped="" ref="0x1a710888"/>
        <function-ref name="clr" scoped="" ref="0x1a710968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x1a7140c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x1a7140c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a714298"/>
        <function-ref name="isInput" scoped="" ref="0x1a714378"/>
        <function-ref name="toggle" scoped="" ref="0x1a714458"/>
        <function-ref name="isOutput" scoped="" ref="0x1a714538"/>
        <function-ref name="get" scoped="" ref="0x1a714618"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7146f8"/>
        <function-ref name="set" scoped="" ref="0x1a7147d8"/>
        <function-ref name="clr" scoped="" ref="0x1a7148b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x1a713d68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x1a713d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a712010"/>
        <function-ref name="isInput" scoped="" ref="0x1a7120f0"/>
        <function-ref name="toggle" scoped="" ref="0x1a7121d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7122b0"/>
        <function-ref name="get" scoped="" ref="0x1a712390"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a712470"/>
        <function-ref name="set" scoped="" ref="0x1a712550"/>
        <function-ref name="clr" scoped="" ref="0x1a712630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x1a710ac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x1a710ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a710ca0"/>
        <function-ref name="isInput" scoped="" ref="0x1a710d80"/>
        <function-ref name="toggle" scoped="" ref="0x1a710e60"/>
        <function-ref name="isOutput" scoped="" ref="0x1a725010"/>
        <function-ref name="get" scoped="" ref="0x1a7250f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7251d0"/>
        <function-ref name="set" scoped="" ref="0x1a7252b0"/>
        <function-ref name="clr" scoped="" ref="0x1a725390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x1a714a18" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x1a714a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a714bf0"/>
        <function-ref name="isInput" scoped="" ref="0x1a714cd0"/>
        <function-ref name="toggle" scoped="" ref="0x1a714db0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a714e90"/>
        <function-ref name="get" scoped="" ref="0x1a713010"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7130f0"/>
        <function-ref name="set" scoped="" ref="0x1a7131d0"/>
        <function-ref name="clr" scoped="" ref="0x1a7132b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x1a712790" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x1a712790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a712968"/>
        <function-ref name="isInput" scoped="" ref="0x1a712a48"/>
        <function-ref name="toggle" scoped="" ref="0x1a712b28"/>
        <function-ref name="isOutput" scoped="" ref="0x1a712c08"/>
        <function-ref name="get" scoped="" ref="0x1a712ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a712dc8"/>
        <function-ref name="set" scoped="" ref="0x1a712ea8"/>
        <function-ref name="clr" scoped="" ref="0x1a710010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x1a7254f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x1a7254f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a7256c8"/>
        <function-ref name="isInput" scoped="" ref="0x1a7257a8"/>
        <function-ref name="toggle" scoped="" ref="0x1a725888"/>
        <function-ref name="isOutput" scoped="" ref="0x1a725968"/>
        <function-ref name="get" scoped="" ref="0x1a725a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a725b28"/>
        <function-ref name="set" scoped="" ref="0x1a725c08"/>
        <function-ref name="clr" scoped="" ref="0x1a725ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6a35e0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6a35e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6a37b8"/>
        <function-ref name="isInput" scoped="" ref="0x1b6a3898"/>
        <function-ref name="toggle" scoped="" ref="0x1b6a3978"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6a3a58"/>
        <function-ref name="get" scoped="" ref="0x1b6a3b38"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6a3c18"/>
        <function-ref name="set" scoped="" ref="0x1b6a3cf8"/>
        <function-ref name="clr" scoped="" ref="0x1b6a3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6a10b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6a10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6a1288"/>
        <function-ref name="isInput" scoped="" ref="0x1b6a1368"/>
        <function-ref name="toggle" scoped="" ref="0x1b6a1448"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6a1528"/>
        <function-ref name="get" scoped="" ref="0x1b6a1608"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6a16e8"/>
        <function-ref name="set" scoped="" ref="0x1b6a17c8"/>
        <function-ref name="clr" scoped="" ref="0x1b6a18a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6a0a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6a0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6a0c60"/>
        <function-ref name="isInput" scoped="" ref="0x1b6a0d40"/>
        <function-ref name="toggle" scoped="" ref="0x1b6a0e20"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6a0f00"/>
        <function-ref name="get" scoped="" ref="0x1b6da010"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6da0f0"/>
        <function-ref name="set" scoped="" ref="0x1b6da1d0"/>
        <function-ref name="clr" scoped="" ref="0x1b6da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6d9538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6d9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6d9710"/>
        <function-ref name="isInput" scoped="" ref="0x1b6d97f0"/>
        <function-ref name="toggle" scoped="" ref="0x1b6d98d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6d99b0"/>
        <function-ref name="get" scoped="" ref="0x1b6d9a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6d9b70"/>
        <function-ref name="set" scoped="" ref="0x1b6d9c50"/>
        <function-ref name="clr" scoped="" ref="0x1b6d9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6d7010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6d7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6d71e8"/>
        <function-ref name="isInput" scoped="" ref="0x1b6d72c8"/>
        <function-ref name="toggle" scoped="" ref="0x1b6d73a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6d7488"/>
        <function-ref name="get" scoped="" ref="0x1b6d7568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6d7648"/>
        <function-ref name="set" scoped="" ref="0x1b6d7728"/>
        <function-ref name="clr" scoped="" ref="0x1b6d7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6d69e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6d69e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6d6bc0"/>
        <function-ref name="isInput" scoped="" ref="0x1b6d6ca0"/>
        <function-ref name="toggle" scoped="" ref="0x1b6d6d80"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6d6e60"/>
        <function-ref name="get" scoped="" ref="0x1b6d4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6d40f0"/>
        <function-ref name="set" scoped="" ref="0x1b6d41d0"/>
        <function-ref name="clr" scoped="" ref="0x1b6d42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6d3538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6d3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6d3710"/>
        <function-ref name="isInput" scoped="" ref="0x1b6d37f0"/>
        <function-ref name="toggle" scoped="" ref="0x1b6d38d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6d39b0"/>
        <function-ref name="get" scoped="" ref="0x1b6d3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6d3b70"/>
        <function-ref name="set" scoped="" ref="0x1b6d3c50"/>
        <function-ref name="clr" scoped="" ref="0x1b6d3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6d1010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6d11e8"/>
        <function-ref name="isInput" scoped="" ref="0x1b6d12c8"/>
        <function-ref name="toggle" scoped="" ref="0x1b6d13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6d1488"/>
        <function-ref name="get" scoped="" ref="0x1b6d1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6d1648"/>
        <function-ref name="set" scoped="" ref="0x1b6d1728"/>
        <function-ref name="clr" scoped="" ref="0x1b6d1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x1a7219e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x1a7219e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a721bc0"/>
        <function-ref name="isInput" scoped="" ref="0x1a721ca0"/>
        <function-ref name="toggle" scoped="" ref="0x1a721d80"/>
        <function-ref name="isOutput" scoped="" ref="0x1a721e60"/>
        <function-ref name="get" scoped="" ref="0x1a720010"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7200f0"/>
        <function-ref name="set" scoped="" ref="0x1a7201d0"/>
        <function-ref name="clr" scoped="" ref="0x1a7202b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x1a735790" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x1a735790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a735968"/>
        <function-ref name="isInput" scoped="" ref="0x1a735a48"/>
        <function-ref name="toggle" scoped="" ref="0x1a735b28"/>
        <function-ref name="isOutput" scoped="" ref="0x1a735c08"/>
        <function-ref name="get" scoped="" ref="0x1a735ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a735dc8"/>
        <function-ref name="set" scoped="" ref="0x1a735ea8"/>
        <function-ref name="clr" scoped="" ref="0x1a734010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x1a7226f8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x1a7226f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a7228d0"/>
        <function-ref name="isInput" scoped="" ref="0x1a7229b0"/>
        <function-ref name="toggle" scoped="" ref="0x1a722a90"/>
        <function-ref name="isOutput" scoped="" ref="0x1a722b70"/>
        <function-ref name="get" scoped="" ref="0x1a722c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a722d30"/>
        <function-ref name="set" scoped="" ref="0x1a722e10"/>
        <function-ref name="clr" scoped="" ref="0x1a722ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x1a720410" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x1a720410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a7205e8"/>
        <function-ref name="isInput" scoped="" ref="0x1a7206c8"/>
        <function-ref name="toggle" scoped="" ref="0x1a7207a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1a720888"/>
        <function-ref name="get" scoped="" ref="0x1a720968"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a720a48"/>
        <function-ref name="set" scoped="" ref="0x1a720b28"/>
        <function-ref name="clr" scoped="" ref="0x1a720c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x1a734170" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x1a734170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a734348"/>
        <function-ref name="isInput" scoped="" ref="0x1a734428"/>
        <function-ref name="toggle" scoped="" ref="0x1a734508"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7345e8"/>
        <function-ref name="get" scoped="" ref="0x1a7346c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7347a8"/>
        <function-ref name="set" scoped="" ref="0x1a734888"/>
        <function-ref name="clr" scoped="" ref="0x1a734968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x1a721090" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x1a721090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a721268"/>
        <function-ref name="isInput" scoped="" ref="0x1a721348"/>
        <function-ref name="toggle" scoped="" ref="0x1a721428"/>
        <function-ref name="isOutput" scoped="" ref="0x1a721508"/>
        <function-ref name="get" scoped="" ref="0x1a7215e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7216c8"/>
        <function-ref name="set" scoped="" ref="0x1a7217a8"/>
        <function-ref name="clr" scoped="" ref="0x1a721888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x1a720d68" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x1a720d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a735010"/>
        <function-ref name="isInput" scoped="" ref="0x1a7350f0"/>
        <function-ref name="toggle" scoped="" ref="0x1a7351d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7352b0"/>
        <function-ref name="get" scoped="" ref="0x1a735390"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a735470"/>
        <function-ref name="set" scoped="" ref="0x1a735550"/>
        <function-ref name="clr" scoped="" ref="0x1a735630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x1a734ac8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x1a734ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a734ca0"/>
        <function-ref name="isInput" scoped="" ref="0x1a734d80"/>
        <function-ref name="toggle" scoped="" ref="0x1a734e60"/>
        <function-ref name="isOutput" scoped="" ref="0x1a733010"/>
        <function-ref name="get" scoped="" ref="0x1a7330f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7331d0"/>
        <function-ref name="set" scoped="" ref="0x1a7332b0"/>
        <function-ref name="clr" scoped="" ref="0x1a733390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6e7d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6e7d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6e7ee0"/>
        <function-ref name="isInput" scoped="" ref="0x1b6e4010"/>
        <function-ref name="toggle" scoped="" ref="0x1b6e40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6e41d0"/>
        <function-ref name="get" scoped="" ref="0x1b6e42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6e4390"/>
        <function-ref name="set" scoped="" ref="0x1b6e4470"/>
        <function-ref name="clr" scoped="" ref="0x1b6e4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6e3718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6e3718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6e38f0"/>
        <function-ref name="isInput" scoped="" ref="0x1b6e39d0"/>
        <function-ref name="toggle" scoped="" ref="0x1b6e3ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6e3b90"/>
        <function-ref name="get" scoped="" ref="0x1b6e3c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6e3d50"/>
        <function-ref name="set" scoped="" ref="0x1b6e3e30"/>
        <function-ref name="clr" scoped="" ref="0x1b6e3f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6e10f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6e10f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6e12d0"/>
        <function-ref name="isInput" scoped="" ref="0x1b6e13b0"/>
        <function-ref name="toggle" scoped="" ref="0x1b6e1490"/>
        <function-ref name="isOutput" scoped="" ref="0x1b6e1570"/>
        <function-ref name="get" scoped="" ref="0x1b6e1650"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b6e1730"/>
        <function-ref name="set" scoped="" ref="0x1b6e1810"/>
        <function-ref name="clr" scoped="" ref="0x1b6e18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b6e0ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b6e0ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b6e0ca0"/>
        <function-ref name="isInput" scoped="" ref="0x1b6e0d80"/>
        <function-ref name="toggle" scoped="" ref="0x1b6e0e60"/>
        <function-ref name="isOutput" scoped="" ref="0x1b71a010"/>
        <function-ref name="get" scoped="" ref="0x1b71a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b71a1d0"/>
        <function-ref name="set" scoped="" ref="0x1b71a2b0"/>
        <function-ref name="clr" scoped="" ref="0x1b71a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b719570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b719570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b719748"/>
        <function-ref name="isInput" scoped="" ref="0x1b719828"/>
        <function-ref name="toggle" scoped="" ref="0x1b719908"/>
        <function-ref name="isOutput" scoped="" ref="0x1b7199e8"/>
        <function-ref name="get" scoped="" ref="0x1b719ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b719ba8"/>
        <function-ref name="set" scoped="" ref="0x1b719c88"/>
        <function-ref name="clr" scoped="" ref="0x1b719d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b717010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b717010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b7171e8"/>
        <function-ref name="isInput" scoped="" ref="0x1b7172c8"/>
        <function-ref name="toggle" scoped="" ref="0x1b7173a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1b717488"/>
        <function-ref name="get" scoped="" ref="0x1b717568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b717648"/>
        <function-ref name="set" scoped="" ref="0x1b717728"/>
        <function-ref name="clr" scoped="" ref="0x1b717808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b7169e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b7169e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b716bc0"/>
        <function-ref name="isInput" scoped="" ref="0x1b716ca0"/>
        <function-ref name="toggle" scoped="" ref="0x1b716d80"/>
        <function-ref name="isOutput" scoped="" ref="0x1b716e60"/>
        <function-ref name="get" scoped="" ref="0x1b715010"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b7150f0"/>
        <function-ref name="set" scoped="" ref="0x1b7151d0"/>
        <function-ref name="clr" scoped="" ref="0x1b7152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1b714538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1b714538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b714710"/>
        <function-ref name="isInput" scoped="" ref="0x1b7147f0"/>
        <function-ref name="toggle" scoped="" ref="0x1b7148d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b7149b0"/>
        <function-ref name="get" scoped="" ref="0x1b714a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b714b70"/>
        <function-ref name="set" scoped="" ref="0x1b714c50"/>
        <function-ref name="clr" scoped="" ref="0x1b714d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1a744228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1a744228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a744400"/>
        <function-ref name="isInput" scoped="" ref="0x1a7444e0"/>
        <function-ref name="toggle" scoped="" ref="0x1a7445c0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7446a0"/>
        <function-ref name="get" scoped="" ref="0x1a744780"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a744860"/>
        <function-ref name="set" scoped="" ref="0x1a744940"/>
        <function-ref name="clr" scoped="" ref="0x1a744a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1a7635e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1a7635e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a7637c0"/>
        <function-ref name="isInput" scoped="" ref="0x1a7638a0"/>
        <function-ref name="toggle" scoped="" ref="0x1a763980"/>
        <function-ref name="isOutput" scoped="" ref="0x1a763a60"/>
        <function-ref name="get" scoped="" ref="0x1a763b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a763c20"/>
        <function-ref name="set" scoped="" ref="0x1a763d00"/>
        <function-ref name="clr" scoped="" ref="0x1a763de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1a761a90" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1a761a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a761c68"/>
        <function-ref name="isInput" scoped="" ref="0x1a761d48"/>
        <function-ref name="toggle" scoped="" ref="0x1a761e28"/>
        <function-ref name="isOutput" scoped="" ref="0x1a761f08"/>
        <function-ref name="get" scoped="" ref="0x1a760010"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7600f0"/>
        <function-ref name="set" scoped="" ref="0x1a7601d0"/>
        <function-ref name="clr" scoped="" ref="0x1a7602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1a774e60" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1a774e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a773050"/>
        <function-ref name="isInput" scoped="" ref="0x1a773130"/>
        <function-ref name="toggle" scoped="" ref="0x1a773210"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7732f0"/>
        <function-ref name="get" scoped="" ref="0x1a7733d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7734b0"/>
        <function-ref name="set" scoped="" ref="0x1a773590"/>
        <function-ref name="clr" scoped="" ref="0x1a773670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1a771228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1a771228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a771400"/>
        <function-ref name="isInput" scoped="" ref="0x1a7714e0"/>
        <function-ref name="toggle" scoped="" ref="0x1a7715c0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7716a0"/>
        <function-ref name="get" scoped="" ref="0x1a771780"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a771860"/>
        <function-ref name="set" scoped="" ref="0x1a771940"/>
        <function-ref name="clr" scoped="" ref="0x1a771a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1a7865e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1a7865e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a7867c0"/>
        <function-ref name="isInput" scoped="" ref="0x1a7868a0"/>
        <function-ref name="toggle" scoped="" ref="0x1a786980"/>
        <function-ref name="isOutput" scoped="" ref="0x1a786a60"/>
        <function-ref name="get" scoped="" ref="0x1a786b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a786c20"/>
        <function-ref name="set" scoped="" ref="0x1a786d00"/>
        <function-ref name="clr" scoped="" ref="0x1a786de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1a783b10" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1a783b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a783ce8"/>
        <function-ref name="isInput" scoped="" ref="0x1a783dc8"/>
        <function-ref name="toggle" scoped="" ref="0x1a783ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x1a782010"/>
        <function-ref name="get" scoped="" ref="0x1a7820f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7821d0"/>
        <function-ref name="set" scoped="" ref="0x1a7822b0"/>
        <function-ref name="clr" scoped="" ref="0x1a782390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1a780010" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1a780010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a7801e8"/>
        <function-ref name="isInput" scoped="" ref="0x1a7802c8"/>
        <function-ref name="toggle" scoped="" ref="0x1a7803a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1a780488"/>
        <function-ref name="get" scoped="" ref="0x1a780568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a780648"/>
        <function-ref name="set" scoped="" ref="0x1a780728"/>
        <function-ref name="clr" scoped="" ref="0x1a780808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1a7942d8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1a7942d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a7944b0"/>
        <function-ref name="isInput" scoped="" ref="0x1a794590"/>
        <function-ref name="toggle" scoped="" ref="0x1a794670"/>
        <function-ref name="isOutput" scoped="" ref="0x1a794750"/>
        <function-ref name="get" scoped="" ref="0x1a794830"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a794910"/>
        <function-ref name="set" scoped="" ref="0x1a7949f0"/>
        <function-ref name="clr" scoped="" ref="0x1a794ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1a792590" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1a792590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a792768"/>
        <function-ref name="isInput" scoped="" ref="0x1a792848"/>
        <function-ref name="toggle" scoped="" ref="0x1a792928"/>
        <function-ref name="isOutput" scoped="" ref="0x1a792a08"/>
        <function-ref name="get" scoped="" ref="0x1a792ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a792bc8"/>
        <function-ref name="set" scoped="" ref="0x1a792ca8"/>
        <function-ref name="clr" scoped="" ref="0x1a792d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1a7a6880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1a7a6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a7a6a58"/>
        <function-ref name="isInput" scoped="" ref="0x1a7a6b38"/>
        <function-ref name="toggle" scoped="" ref="0x1a7a6c18"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7a6cf8"/>
        <function-ref name="get" scoped="" ref="0x1a7a6dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7a6eb8"/>
        <function-ref name="set" scoped="" ref="0x1a7a5010"/>
        <function-ref name="clr" scoped="" ref="0x1a7a50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1a7a4bc0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1a7a4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a7a4d98"/>
        <function-ref name="isInput" scoped="" ref="0x1a7a4e78"/>
        <function-ref name="toggle" scoped="" ref="0x1a7a3010"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7a30f0"/>
        <function-ref name="get" scoped="" ref="0x1a7a31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7a32b0"/>
        <function-ref name="set" scoped="" ref="0x1a7a3390"/>
        <function-ref name="clr" scoped="" ref="0x1a7a3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1a7a2f20" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x1a7a2f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1a7a1110"/>
        <function-ref name="isInput" scoped="" ref="0x1a7a11f0"/>
        <function-ref name="toggle" scoped="" ref="0x1a7a12d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1a7a13b0"/>
        <function-ref name="get" scoped="" ref="0x1a7a1490"/>
        <function-ref name="makeOutput" scoped="" ref="0x1a7a1570"/>
        <function-ref name="set" scoped="" ref="0x1a7a1650"/>
        <function-ref name="clr" scoped="" ref="0x1a7a1730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1a805a40" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="Ch6_GasDetector_101C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1a805a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1aa31368"/>
        <function-ref name="fired" scoped="" ref="0x1a804768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1a804d08"/>
        <function-ref name="isOneShot" scoped="" ref="0x1a804b28"/>
        <function-ref name="getdt" scoped="" ref="0x1aa31728"/>
        <function-ref name="gett0" scoped="" ref="0x1aa31548"/>
        <function-ref name="isRunning" scoped="" ref="0x1a804948"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1a804088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1aa31048"/>
        <function-ref name="startOneShot" scoped="" ref="0x1a804308"/>
        <function-ref name="stop" scoped="" ref="0x1a804588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x1a814848" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x1a814848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1a811170"/>
        <function-ref name="fired" scoped="" ref="0x1a813570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1a813b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x1a813930"/>
        <function-ref name="getdt" scoped="" ref="0x1a811530"/>
        <function-ref name="gett0" scoped="" ref="0x1a811350"/>
        <function-ref name="isRunning" scoped="" ref="0x1a813750"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1a814e70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1a813e30"/>
        <function-ref name="startOneShot" scoped="" ref="0x1a813110"/>
        <function-ref name="stop" scoped="" ref="0x1a813390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x1a823100" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x1a823100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1a821a10"/>
        <function-ref name="fired" scoped="" ref="0x1a823e08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1a8213d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x1a8211f0"/>
        <function-ref name="getdt" scoped="" ref="0x1a821dd0"/>
        <function-ref name="gett0" scoped="" ref="0x1a821bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x1a821010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1a823728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1a8216f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x1a8239a8"/>
        <function-ref name="stop" scoped="" ref="0x1a823c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x1a8339b0" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x1a8339b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1a835010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1a824988" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1a824988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a824b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x1a8501f0" loc="26:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x1a8501f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1a850940"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1a850d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1a850b40"/>
        <function-ref name="overflow" scoped="" ref="0x1a853010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1a846730" loc="24:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1a846730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a846908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x1a856398" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x1a856398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1a843750"/>
        <function-ref name="fired" scoped="" ref="0x1a843010"/>
        <function-ref name="startAt" scoped="" ref="0x1a843410"/>
        <function-ref name="isRunning" scoped="" ref="0x1a843210"/>
        <function-ref name="getAlarm" scoped="" ref="0x1a843950"/>
        <function-ref name="start" scoped="" ref="0x1a856ae8"/>
        <function-ref name="stop" scoped="" ref="0x1a856d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x1a883d90" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x1a883d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x1a886010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x1a8860f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x1a8861d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x1a8862b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x1a886390"/>
        <function-ref name="setControl" scoped="" ref="0x1a886470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1a863708" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1a863708"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x1a0100e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x1a0100e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a8638e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1a894348" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x1a894348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x1a882648"/>
        <function-ref name="fired" scoped="" ref="0x1a894e30"/>
        <function-ref name="get" scoped="" ref="0x1a894990"/>
        <function-ref name="reset" scoped="" ref="0x1a882048"/>
        <function-ref name="isOn" scoped="" ref="0x1a882848"/>
        <function-ref name="set" scoped="" ref="0x1a894b90"/>
        <function-ref name="start" scoped="" ref="0x1a882248"/>
        <function-ref name="stop" scoped="" ref="0x1a882448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1a8725f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1a8725f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x1a861cf8"/>
        <function-ref name="test" scoped="" ref="0x1a8618f8"/>
        <function-ref name="get" scoped="" ref="0x1a872c38"/>
        <function-ref name="setScale" scoped="" ref="0x1a861ef8"/>
        <function-ref name="getScale" scoped="" ref="0x1a8711c0"/>
        <function-ref name="reset" scoped="" ref="0x1a8612f8"/>
        <function-ref name="overflow" scoped="" ref="0x1a8610f8"/>
        <function-ref name="isOn" scoped="" ref="0x1a861af8"/>
        <function-ref name="set" scoped="" ref="0x1a872e38"/>
        <function-ref name="start" scoped="" ref="0x1a8614f8"/>
        <function-ref name="stop" scoped="" ref="0x1a8616f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1a8e4580" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1a8e4580"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x1a0100e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x1a0100e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1a8e4758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1a8e4968" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1a8e4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x1a8f30d8"/>
        <function-ref name="test" scoped="" ref="0x1a8e3cb0"/>
        <function-ref name="get" scoped="" ref="0x1a8e3010"/>
        <function-ref name="setScale" scoped="" ref="0x1a8f32d8"/>
        <function-ref name="getScale" scoped="" ref="0x1a8f3578"/>
        <function-ref name="reset" scoped="" ref="0x1a8e36b0"/>
        <function-ref name="overflow" scoped="" ref="0x1a8e34b0"/>
        <function-ref name="isOn" scoped="" ref="0x1a8e3eb0"/>
        <function-ref name="set" scoped="" ref="0x1a8e3210"/>
        <function-ref name="start" scoped="" ref="0x1a8e38b0"/>
        <function-ref name="stop" scoped="" ref="0x1a8e3ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1a907f20" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x1a907f20"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x1a011f28"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x1a011f28"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1a924278"/>
        <function-ref name="fired" scoped="" ref="0x1a906b28"/>
        <function-ref name="startAt" scoped="" ref="0x1a906f28"/>
        <function-ref name="isRunning" scoped="" ref="0x1a906d28"/>
        <function-ref name="getAlarm" scoped="" ref="0x1a924478"/>
        <function-ref name="start" scoped="" ref="0x1a906688"/>
        <function-ref name="stop" scoped="" ref="0x1a906928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x1a9214f8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x1a9214f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x1a920810"/>
        <function-ref name="fired" scoped="" ref="0x1a920010"/>
        <function-ref name="get" scoped="" ref="0x1a921b40"/>
        <function-ref name="reset" scoped="" ref="0x1a920210"/>
        <function-ref name="isOn" scoped="" ref="0x1a920a10"/>
        <function-ref name="set" scoped="" ref="0x1a921d40"/>
        <function-ref name="start" scoped="" ref="0x1a920410"/>
        <function-ref name="stop" scoped="" ref="0x1a920610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x1a9246c0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x1a9246c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x1a923dc0"/>
        <function-ref name="test" scoped="" ref="0x1a9239c0"/>
        <function-ref name="get" scoped="" ref="0x1a924d08"/>
        <function-ref name="setScale" scoped="" ref="0x1a921010"/>
        <function-ref name="getScale" scoped="" ref="0x1a9212b0"/>
        <function-ref name="reset" scoped="" ref="0x1a9233c0"/>
        <function-ref name="overflow" scoped="" ref="0x1a9231c0"/>
        <function-ref name="isOn" scoped="" ref="0x1a923bc0"/>
        <function-ref name="set" scoped="" ref="0x1a924f08"/>
        <function-ref name="start" scoped="" ref="0x1a9235c0"/>
        <function-ref name="stop" scoped="" ref="0x1a9237c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1a934d48" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1a934d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1a9334e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1a9338e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1a9336e8"/>
        <function-ref name="overflow" scoped="" ref="0x1a933ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1a933d50" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1a933d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x1a9404a8"/>
        <function-ref name="test" scoped="" ref="0x1a9400a8"/>
        <function-ref name="get" scoped="" ref="0x1a9423e0"/>
        <function-ref name="setScale" scoped="" ref="0x1a9406a8"/>
        <function-ref name="getScale" scoped="" ref="0x1a940948"/>
        <function-ref name="reset" scoped="" ref="0x1a942a80"/>
        <function-ref name="overflow" scoped="" ref="0x1a942880"/>
        <function-ref name="isOn" scoped="" ref="0x1a9402a8"/>
        <function-ref name="set" scoped="" ref="0x1a9425e0"/>
        <function-ref name="start" scoped="" ref="0x1a942c80"/>
        <function-ref name="stop" scoped="" ref="0x1a942e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1a954010" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x1a954010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1a992350"/>
        <function-ref name="fired" scoped="" ref="0x1a954c00"/>
        <function-ref name="startAt" scoped="" ref="0x1a992010"/>
        <function-ref name="isRunning" scoped="" ref="0x1a954e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x1a992550"/>
        <function-ref name="start" scoped="" ref="0x1a954760"/>
        <function-ref name="stop" scoped="" ref="0x1a954a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x1a990908" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x1a990908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1a9a7068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1a9a7468"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1a9a7268"/>
        <function-ref name="overflow" scoped="" ref="0x1a9a7668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1a992848" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1a992848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1a990010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1a990410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1a990210"/>
        <function-ref name="overflow" scoped="" ref="0x1a990610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x1a9a7960" loc="64:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x1a9a7960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1a9a5cb8"/>
        <function-ref name="fired" scoped="" ref="0x1a9a5578"/>
        <function-ref name="startAt" scoped="" ref="0x1a9a5978"/>
        <function-ref name="isRunning" scoped="" ref="0x1a9a5778"/>
        <function-ref name="getAlarm" scoped="" ref="0x1a9a5eb8"/>
        <function-ref name="start" scoped="" ref="0x1a9a50d8"/>
        <function-ref name="stop" scoped="" ref="0x1a9a5378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x1a9d12d0" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x1a9d12d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1a9d14a8"/>
        <function-ref name="runTask" scoped="" ref="0x1a9d1588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x1a9d4b60" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x1a9d4b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1a9d2ee8"/>
        <function-ref name="fired" scoped="" ref="0x1a9d27a8"/>
        <function-ref name="startAt" scoped="" ref="0x1a9d2ba8"/>
        <function-ref name="isRunning" scoped="" ref="0x1a9d29a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x1a9d10f8"/>
        <function-ref name="start" scoped="" ref="0x1a9d2308"/>
        <function-ref name="stop" scoped="" ref="0x1a9d25a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1a9b7b60" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1a9b7b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1a9d44c8"/>
        <function-ref name="fired" scoped="" ref="0x1a9b68c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1a9b6e60"/>
        <function-ref name="isOneShot" scoped="" ref="0x1a9b6c80"/>
        <function-ref name="getdt" scoped="" ref="0x1a9d4888"/>
        <function-ref name="gett0" scoped="" ref="0x1a9d46a8"/>
        <function-ref name="isRunning" scoped="" ref="0x1a9b6aa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1a9b61e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1a9d41a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x1a9b6460"/>
        <function-ref name="stop" scoped="" ref="0x1a9b66e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x1aa24c90" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x1aa24c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1aa24e68"/>
        <function-ref name="runTask" scoped="" ref="0x1aa23010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x1aa27dc0" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x1aa27dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1aa246f8"/>
        <function-ref name="fired" scoped="" ref="0x1aa25ae8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1aa240b8"/>
        <function-ref name="isOneShot" scoped="" ref="0x1aa25ea8"/>
        <function-ref name="getdt" scoped="" ref="0x1aa24ab8"/>
        <function-ref name="gett0" scoped="" ref="0x1aa248d8"/>
        <function-ref name="isRunning" scoped="" ref="0x1aa25cc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1aa25408"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1aa243d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x1aa25688"/>
        <function-ref name="stop" scoped="" ref="0x1aa25908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1a9e7da8" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1a9e7da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1aa27768"/>
        <function-ref name="fired" scoped="" ref="0x1a9e6b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1aa27108"/>
        <function-ref name="isOneShot" scoped="" ref="0x1a9e6ee0"/>
        <function-ref name="getdt" scoped="" ref="0x1aa27b48"/>
        <function-ref name="gett0" scoped="" ref="0x1aa27958"/>
        <function-ref name="isRunning" scoped="" ref="0x1a9e6cf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1a9e63f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1aa27438"/>
        <function-ref name="startOneShot" scoped="" ref="0x1a9e6680"/>
        <function-ref name="stop" scoped="" ref="0x1a9e6910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x1aa204c8" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x1aa204c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1aa20b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1aa20de8" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1aa20de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1aa38570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1aa38970"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1aa38770"/>
        <function-ref name="overflow" scoped="" ref="0x1aa38b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x1ac5b4b0" loc="47:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="Ch6_GasDetector_101C.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x1ac5b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1ac5bad8"/>
        <function-ref name="readDone" scoped="" ref="0x1ac5bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x1aa468d8" loc="46:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="Ch6_GasDetector_101C.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x1aa468d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1aa46f00"/>
        <function-ref name="readDone" scoped="" ref="0x1ac5b108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x1b7b6cc8" loc="50:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Ch6_GasDetector_101C.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Hum" scoped="" ref="0x1b7b6cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x1b7b6ea0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x1b7b5010"/>
        <function-ref name="measureHumidity" scoped="" ref="0x1b7b50f0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x1b7b51d0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x1b7b52b0"/>
        <function-ref name="reset" scoped="" ref="0x1b7b5390"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x1b7b5470"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x1b7b5550"/>
        <function-ref name="resetDone" scoped="" ref="0x1b7b5630"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x1b7b5710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x1b7b9850" loc="45:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Ch6_GasDetector_101C.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x1b7b9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b7b9e78"/>
        <function-ref name="readDone" scoped="" ref="0x1b7b8068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x1b7b8380" loc="47:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Ch6_GasDetector_101C.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x1b7b8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b7b8558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b7b8638"/>
        <function-ref name="request" scoped="" ref="0x1b7b8718"/>
        <function-ref name="granted" scoped="" ref="0x1b7b87f8"/>
        <function-ref name="isOwner" scoped="" ref="0x1b7b88d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x1b7b6190" loc="49:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Ch6_GasDetector_101C.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Temp" scoped="" ref="0x1b7b6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x1b7b6368"/>
        <function-ref name="readStatusReg" scoped="" ref="0x1b7b6448"/>
        <function-ref name="measureHumidity" scoped="" ref="0x1b7b6528"/>
        <function-ref name="measureTemperature" scoped="" ref="0x1b7b6608"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x1b7b66e8"/>
        <function-ref name="reset" scoped="" ref="0x1b7b67c8"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x1b7b68a8"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x1b7b6988"/>
        <function-ref name="resetDone" scoped="" ref="0x1b7b6a68"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x1b7b6b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x1b7b8a58" loc="48:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Ch6_GasDetector_101C.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x1b7b8a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b7b8c30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b7b8d10"/>
        <function-ref name="request" scoped="" ref="0x1b7b8df0"/>
        <function-ref name="granted" scoped="" ref="0x1b7b8ed0"/>
        <function-ref name="isOwner" scoped="" ref="0x1b7b6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x1b7bac78" loc="44:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Ch6_GasDetector_101C.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x1b7bac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b7b92c8"/>
        <function-ref name="readDone" scoped="" ref="0x1b7b94a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x1aa94ad0" loc="45:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x1aa94ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x1aa94ca8"/>
        <function-ref name="readStatusReg" scoped="" ref="0x1aa94d88"/>
        <function-ref name="measureHumidity" scoped="" ref="0x1aa94e68"/>
        <function-ref name="measureTemperature" scoped="" ref="0x1aa92010"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x1aa920f0"/>
        <function-ref name="reset" scoped="" ref="0x1aa921d0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x1aa922b0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x1aa92390"/>
        <function-ref name="resetDone" scoped="" ref="0x1aa92470"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x1aa92550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1aa94178" loc="44:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1aa94178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1aa94350"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1aa94430"/>
        <function-ref name="request" scoped="" ref="0x1aa94510"/>
        <function-ref name="granted" scoped="" ref="0x1aa945f0"/>
        <function-ref name="isOwner" scoped="" ref="0x1aa946d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x1ab03358" loc="58:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x1ab03358"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab03530"/>
        <function-ref name="disable" scoped="" ref="0x1ab03610"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1ab036f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1ab037d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x1ab19948" loc="102:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x1ab19948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1ab19b20"/>
        <function-ref name="runTask" scoped="" ref="0x1ab19c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x1ab19510" loc="103:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalStatusDone" scoped="" ref="0x1ab19510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1ab196e8"/>
        <function-ref name="runTask" scoped="" ref="0x1ab197c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x1ab049c8" loc="57:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x1ab049c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ab04ba0"/>
        <function-ref name="isInput" scoped="" ref="0x1ab04c80"/>
        <function-ref name="toggle" scoped="" ref="0x1ab04d60"/>
        <function-ref name="isOutput" scoped="" ref="0x1ab04e40"/>
        <function-ref name="get" scoped="" ref="0x1ab04f20"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ab03018"/>
        <function-ref name="set" scoped="" ref="0x1ab030f8"/>
        <function-ref name="clr" scoped="" ref="0x1ab031d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x1ab054d8" loc="54:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x1ab054d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x1ab056c0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x1ab057a0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x1ab05880"/>
        <function-ref name="measureTemperature" scoped="" ref="0x1ab05960"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x1ab05a40"/>
        <function-ref name="reset" scoped="" ref="0x1ab05b20"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x1ab05c00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x1ab05ce0"/>
        <function-ref name="resetDone" scoped="" ref="0x1ab05dc0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x1ab05ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x1ab04050" loc="56:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x1ab04050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ab04228"/>
        <function-ref name="isInput" scoped="" ref="0x1ab04308"/>
        <function-ref name="toggle" scoped="" ref="0x1ab043e8"/>
        <function-ref name="isOutput" scoped="" ref="0x1ab044c8"/>
        <function-ref name="get" scoped="" ref="0x1ab045a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ab04688"/>
        <function-ref name="set" scoped="" ref="0x1ab04768"/>
        <function-ref name="clr" scoped="" ref="0x1ab04848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1ab018a8" loc="62:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x1ab018a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1ab01a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1ab01b60"/>
        <function-ref name="led1On" scoped="" ref="0x1ab01c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1ab01d20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1ab01e00"/>
        <function-ref name="get" scoped="" ref="0x1ab01ee0"/>
        <function-ref name="led1Off" scoped="" ref="0x1ab19010"/>
        <function-ref name="led2On" scoped="" ref="0x1ab19390"/>
        <function-ref name="set" scoped="" ref="0x1ab191d0"/>
        <function-ref name="led2Off" scoped="" ref="0x1ab190f0"/>
        <function-ref name="led0On" scoped="" ref="0x1ab192b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1ab039c0" loc="60:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1ab039c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1ab01330"/>
        <function-ref name="fired" scoped="" ref="0x1ab026f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1ab02c90"/>
        <function-ref name="isOneShot" scoped="" ref="0x1ab02ab0"/>
        <function-ref name="getdt" scoped="" ref="0x1ab016f0"/>
        <function-ref name="gett0" scoped="" ref="0x1ab01510"/>
        <function-ref name="isRunning" scoped="" ref="0x1ab028d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1ab02010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1ab01010"/>
        <function-ref name="startOneShot" scoped="" ref="0x1ab02290"/>
        <function-ref name="stop" scoped="" ref="0x1ab02510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x1ab12d00" loc="47:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x1ab12d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab12ed8"/>
        <function-ref name="disable" scoped="" ref="0x1ab11010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1ab110f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1ab111d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x1ab12368" loc="46:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x1ab12368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ab12540"/>
        <function-ref name="isInput" scoped="" ref="0x1ab12620"/>
        <function-ref name="toggle" scoped="" ref="0x1ab12700"/>
        <function-ref name="isOutput" scoped="" ref="0x1ab127e0"/>
        <function-ref name="get" scoped="" ref="0x1ab128c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ab129a0"/>
        <function-ref name="set" scoped="" ref="0x1ab12a80"/>
        <function-ref name="clr" scoped="" ref="0x1ab12b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x1ab139c0" loc="45:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x1ab139c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ab13b98"/>
        <function-ref name="isInput" scoped="" ref="0x1ab13c78"/>
        <function-ref name="toggle" scoped="" ref="0x1ab13d58"/>
        <function-ref name="isOutput" scoped="" ref="0x1ab13e38"/>
        <function-ref name="get" scoped="" ref="0x1ab13f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ab12010"/>
        <function-ref name="set" scoped="" ref="0x1ab120f0"/>
        <function-ref name="clr" scoped="" ref="0x1ab121d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1ab132d0" loc="44:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1ab132d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1ab134a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1ab13588"/>
        <function-ref name="request" scoped="" ref="0x1ab13668"/>
        <function-ref name="granted" scoped="" ref="0x1ab13748"/>
        <function-ref name="isOwner" scoped="" ref="0x1ab13828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1ab27e20" loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x1ab27e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1ab26010"/>
        <function-ref name="stopDone" scoped="" ref="0x1ab260f0"/>
        <function-ref name="start" scoped="" ref="0x1ab261d0"/>
        <function-ref name="stop" scoped="" ref="0x1ab262b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x1ab22ba0" loc="49:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x1ab22ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1ab22d78"/>
        <function-ref name="runTask" scoped="" ref="0x1ab22e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x1ab23d70" loc="46:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x1ab23d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ab22010"/>
        <function-ref name="isInput" scoped="" ref="0x1ab220f0"/>
        <function-ref name="toggle" scoped="" ref="0x1ab221d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1ab222b0"/>
        <function-ref name="get" scoped="" ref="0x1ab22390"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ab22470"/>
        <function-ref name="set" scoped="" ref="0x1ab22550"/>
        <function-ref name="clr" scoped="" ref="0x1ab22630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x1ab233e0" loc="45:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x1ab233e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ab235b8"/>
        <function-ref name="isInput" scoped="" ref="0x1ab23698"/>
        <function-ref name="toggle" scoped="" ref="0x1ab23778"/>
        <function-ref name="isOutput" scoped="" ref="0x1ab23858"/>
        <function-ref name="get" scoped="" ref="0x1ab23938"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ab23a18"/>
        <function-ref name="set" scoped="" ref="0x1ab23af8"/>
        <function-ref name="clr" scoped="" ref="0x1ab23bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1ab264b0" loc="44:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1ab264b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1ab25dd0"/>
        <function-ref name="fired" scoped="" ref="0x1ab251f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1ab25790"/>
        <function-ref name="isOneShot" scoped="" ref="0x1ab255b0"/>
        <function-ref name="getdt" scoped="" ref="0x1ab231f0"/>
        <function-ref name="gett0" scoped="" ref="0x1ab23010"/>
        <function-ref name="isRunning" scoped="" ref="0x1ab253d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1ab26ad8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1ab25ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x1ab26d58"/>
        <function-ref name="stop" scoped="" ref="0x1ab25010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1ab288c8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1ab288c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1ab35208"/>
        <function-ref name="fired" scoped="" ref="0x1ab37600"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1ab37ba0"/>
        <function-ref name="isOneShot" scoped="" ref="0x1ab379c0"/>
        <function-ref name="getdt" scoped="" ref="0x1ab355c8"/>
        <function-ref name="gett0" scoped="" ref="0x1ab353e8"/>
        <function-ref name="isRunning" scoped="" ref="0x1ab377e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1ab28ef0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1ab37ec0"/>
        <function-ref name="startOneShot" scoped="" ref="0x1ab371a0"/>
        <function-ref name="stop" scoped="" ref="0x1ab37420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x1ab44430" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x1ab44430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab44608"/>
        <function-ref name="fired" scoped="" ref="0x1ab446e8"/>
        <function-ref name="disable" scoped="" ref="0x1ab447c8"/>
        <function-ref name="edge" scoped="" ref="0x1ab448a8"/>
        <function-ref name="enable" scoped="" ref="0x1ab44988"/>
        <function-ref name="getValue" scoped="" ref="0x1ab44a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x1ab45ba8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x1ab45ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab45d80"/>
        <function-ref name="fired" scoped="" ref="0x1ab45e60"/>
        <function-ref name="disable" scoped="" ref="0x1ab48010"/>
        <function-ref name="edge" scoped="" ref="0x1ab480f0"/>
        <function-ref name="enable" scoped="" ref="0x1ab481d0"/>
        <function-ref name="getValue" scoped="" ref="0x1ab482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x1ab47430" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x1ab47430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab47608"/>
        <function-ref name="fired" scoped="" ref="0x1ab476e8"/>
        <function-ref name="disable" scoped="" ref="0x1ab477c8"/>
        <function-ref name="edge" scoped="" ref="0x1ab478a8"/>
        <function-ref name="enable" scoped="" ref="0x1ab47988"/>
        <function-ref name="getValue" scoped="" ref="0x1ab47a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x1ab44be8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x1ab44be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab44dc0"/>
        <function-ref name="fired" scoped="" ref="0x1ab44ea0"/>
        <function-ref name="disable" scoped="" ref="0x1ab43010"/>
        <function-ref name="edge" scoped="" ref="0x1ab430f0"/>
        <function-ref name="enable" scoped="" ref="0x1ab431d0"/>
        <function-ref name="getValue" scoped="" ref="0x1ab432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x1ab48430" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x1ab48430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab48608"/>
        <function-ref name="fired" scoped="" ref="0x1ab486e8"/>
        <function-ref name="disable" scoped="" ref="0x1ab487c8"/>
        <function-ref name="edge" scoped="" ref="0x1ab488a8"/>
        <function-ref name="enable" scoped="" ref="0x1ab48988"/>
        <function-ref name="getValue" scoped="" ref="0x1ab48a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x1ab47be8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x1ab47be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab47dc0"/>
        <function-ref name="fired" scoped="" ref="0x1ab47ea0"/>
        <function-ref name="disable" scoped="" ref="0x1ab44010"/>
        <function-ref name="edge" scoped="" ref="0x1ab440f0"/>
        <function-ref name="enable" scoped="" ref="0x1ab441d0"/>
        <function-ref name="getValue" scoped="" ref="0x1ab442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x1ab453f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x1ab453f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab455c8"/>
        <function-ref name="fired" scoped="" ref="0x1ab456a8"/>
        <function-ref name="disable" scoped="" ref="0x1ab45788"/>
        <function-ref name="edge" scoped="" ref="0x1ab45868"/>
        <function-ref name="enable" scoped="" ref="0x1ab45948"/>
        <function-ref name="getValue" scoped="" ref="0x1ab45a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x1ab48be8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x1ab48be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab48dc0"/>
        <function-ref name="fired" scoped="" ref="0x1ab48ea0"/>
        <function-ref name="disable" scoped="" ref="0x1ab47010"/>
        <function-ref name="edge" scoped="" ref="0x1ab470f0"/>
        <function-ref name="enable" scoped="" ref="0x1ab471d0"/>
        <function-ref name="getValue" scoped="" ref="0x1ab472b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x1ab56a78" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x1ab56a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab56c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x1ab54848" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x1ab54848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab54a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x1ab56388" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x1ab56388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab56560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x1ab56df0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x1ab56df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab55010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x1ab54bc0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x1ab54bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab54d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x1ab56700" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x1ab56700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab568d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x1ab544d0" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x1ab544d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab546a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x1ab56010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x1ab56010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab561e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x1ab60010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x1ab60010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab601e8"/>
        <function-ref name="fired" scoped="" ref="0x1ab602c8"/>
        <function-ref name="disable" scoped="" ref="0x1ab603a8"/>
        <function-ref name="edge" scoped="" ref="0x1ab60488"/>
        <function-ref name="enable" scoped="" ref="0x1ab60568"/>
        <function-ref name="getValue" scoped="" ref="0x1ab60648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x1ab607c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x1ab607c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab609a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x1ab8a010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x1ab8a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab8a1e8"/>
        <function-ref name="fired" scoped="" ref="0x1ab8a2c8"/>
        <function-ref name="disable" scoped="" ref="0x1ab8a3a8"/>
        <function-ref name="edge" scoped="" ref="0x1ab8a488"/>
        <function-ref name="enable" scoped="" ref="0x1ab8a568"/>
        <function-ref name="getValue" scoped="" ref="0x1ab8a648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x1ab8a7c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x1ab8a7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab8a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x1ab88010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x1ab88010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab881e8"/>
        <function-ref name="fired" scoped="" ref="0x1ab882c8"/>
        <function-ref name="disable" scoped="" ref="0x1ab883a8"/>
        <function-ref name="edge" scoped="" ref="0x1ab88488"/>
        <function-ref name="enable" scoped="" ref="0x1ab88568"/>
        <function-ref name="getValue" scoped="" ref="0x1ab88648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x1ab887c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x1ab887c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab889a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x1ab86010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x1ab86010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab861e8"/>
        <function-ref name="fired" scoped="" ref="0x1ab862c8"/>
        <function-ref name="disable" scoped="" ref="0x1ab863a8"/>
        <function-ref name="edge" scoped="" ref="0x1ab86488"/>
        <function-ref name="enable" scoped="" ref="0x1ab86568"/>
        <function-ref name="getValue" scoped="" ref="0x1ab86648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x1ab867c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x1ab867c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab869a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x1ab830b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x1ab830b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab83288"/>
        <function-ref name="fired" scoped="" ref="0x1ab83368"/>
        <function-ref name="disable" scoped="" ref="0x1ab83448"/>
        <function-ref name="edge" scoped="" ref="0x1ab83528"/>
        <function-ref name="enable" scoped="" ref="0x1ab83608"/>
        <function-ref name="getValue" scoped="" ref="0x1ab836e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x1ab83868" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x1ab83868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab83a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x1ab81150" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x1ab81150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab81328"/>
        <function-ref name="fired" scoped="" ref="0x1ab81408"/>
        <function-ref name="disable" scoped="" ref="0x1ab814e8"/>
        <function-ref name="edge" scoped="" ref="0x1ab815c8"/>
        <function-ref name="enable" scoped="" ref="0x1ab816a8"/>
        <function-ref name="getValue" scoped="" ref="0x1ab81788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x1ab81908" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x1ab81908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab81ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x1ab9a228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x1ab9a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab9a400"/>
        <function-ref name="fired" scoped="" ref="0x1ab9a4e0"/>
        <function-ref name="disable" scoped="" ref="0x1ab9a5c0"/>
        <function-ref name="edge" scoped="" ref="0x1ab9a6a0"/>
        <function-ref name="enable" scoped="" ref="0x1ab9a780"/>
        <function-ref name="getValue" scoped="" ref="0x1ab9a860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x1ab9a9e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x1ab9a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab9abb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x1ab982d0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x1ab982d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab984a8"/>
        <function-ref name="fired" scoped="" ref="0x1ab98588"/>
        <function-ref name="disable" scoped="" ref="0x1ab98668"/>
        <function-ref name="edge" scoped="" ref="0x1ab98748"/>
        <function-ref name="enable" scoped="" ref="0x1ab98828"/>
        <function-ref name="getValue" scoped="" ref="0x1ab98908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x1ab98a88" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x1ab98a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab98c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x1ab92b38" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x1ab92b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ab92d10"/>
        <function-ref name="fired" scoped="" ref="0x1ab92df0"/>
        <function-ref name="disable" scoped="" ref="0x1ab92ed0"/>
        <function-ref name="edge" scoped="" ref="0x1ab91010"/>
        <function-ref name="enable" scoped="" ref="0x1ab910f0"/>
        <function-ref name="getValue" scoped="" ref="0x1ab911d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x1ab92540" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x1ab92540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ab92718"/>
        <function-ref name="disable" scoped="" ref="0x1ab927f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1ab928d8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1ab929b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1aba25c8" loc="82:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x1aba25c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1aba27b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1aba2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1ac17528" loc="86:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1ac17528"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1ac17710"/>
        <function-ref name="configure" scoped="" ref="0x1ac177f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x1aba29d0" loc="83:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x1aba29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1aba2ba8"/>
        <function-ref name="requested" scoped="" ref="0x1aba2c88"/>
        <function-ref name="granted" scoped="" ref="0x1aba2d68"/>
        <function-ref name="isOwner" scoped="" ref="0x1aba2e48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1aba2f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1aba3e78" loc="81:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1aba3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1aba2070"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1aba2150"/>
        <function-ref name="request" scoped="" ref="0x1aba2230"/>
        <function-ref name="granted" scoped="" ref="0x1aba2310"/>
        <function-ref name="isOwner" scoped="" ref="0x1aba23f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1ac17078" loc="84:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x1ac17078"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1ac17250"/>
        <function-ref name="userId" scoped="" ref="0x1ac17330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b84b628" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b84b628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b84b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x1b84b960" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x1b84b960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1b84bb38"/>
        <function-ref name="isEmpty" scoped="" ref="0x1b84bc18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1b84bcf8"/>
        <function-ref name="dequeue" scoped="" ref="0x1b84bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1b8483a8" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x1b8483a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1b848590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1b848670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1b847338" loc="59:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1b847338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1b847520"/>
        <function-ref name="configure" scoped="" ref="0x1b847600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x1b847760" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x1b847760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1b847938"/>
        <function-ref name="isEmpty" scoped="" ref="0x1b847a18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1b847af8"/>
        <function-ref name="dequeue" scoped="" ref="0x1b847bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x1b8487b0" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x1b8487b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b848988"/>
        <function-ref name="requested" scoped="" ref="0x1b848a68"/>
        <function-ref name="granted" scoped="" ref="0x1b848b48"/>
        <function-ref name="isOwner" scoped="" ref="0x1b848c28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1b848d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1b847d18" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x1b847d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1b847ef0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1b846010"/>
        <function-ref name="led1On" scoped="" ref="0x1b8460f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1b8461d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1b8462b0"/>
        <function-ref name="get" scoped="" ref="0x1b846390"/>
        <function-ref name="led1Off" scoped="" ref="0x1b846470"/>
        <function-ref name="led0On" scoped="" ref="0x1b8467f0"/>
        <function-ref name="set" scoped="" ref="0x1b846630"/>
        <function-ref name="led2On" scoped="" ref="0x1b846550"/>
        <function-ref name="led2Off" scoped="" ref="0x1b846710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1b84abc0" loc="53:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1b84abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b84ada8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b84ae88"/>
        <function-ref name="request" scoped="" ref="0x1b848010"/>
        <function-ref name="granted" scoped="" ref="0x1b8480f0"/>
        <function-ref name="isOwner" scoped="" ref="0x1b8481d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1b848e48" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x1b848e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1b847050"/>
        <function-ref name="userId" scoped="" ref="0x1b847130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x1b846970" loc="73:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x1b846970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1b846b48"/>
        <function-ref name="runTask" scoped="" ref="0x1b846c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x1ac14aa8" loc="59:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x1ac14aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1ac14c80"/>
        <function-ref name="stopDone" scoped="" ref="0x1ac14d60"/>
        <function-ref name="start" scoped="" ref="0x1ac14e40"/>
        <function-ref name="stop" scoped="" ref="0x1ac14f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x1ac13078" loc="61:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x1ac13078"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x1ac13250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x1ac13390" loc="62:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x1ac13390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1ac13568"/>
        <function-ref name="requested" scoped="" ref="0x1ac13648"/>
        <function-ref name="granted" scoped="" ref="0x1ac13728"/>
        <function-ref name="isOwner" scoped="" ref="0x1ac13808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1ac138e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x1ac13a28" loc="63:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x1ac13a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1ac13c00"/>
        <function-ref name="userId" scoped="" ref="0x1ac13ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x1b86ca80" loc="51:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x1b86ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1b86cc58"/>
        <function-ref name="stopDone" scoped="" ref="0x1b86cd38"/>
        <function-ref name="start" scoped="" ref="0x1b86ce18"/>
        <function-ref name="stop" scoped="" ref="0x1b86cef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x1b86b070" loc="53:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x1b86b070"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x1b86b248"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x1b86be58" loc="68:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x1b86be58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1b869050"/>
        <function-ref name="runTask" scoped="" ref="0x1b869130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x1b86b388" loc="54:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x1b86b388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b86b560"/>
        <function-ref name="requested" scoped="" ref="0x1b86b640"/>
        <function-ref name="granted" scoped="" ref="0x1b86b720"/>
        <function-ref name="isOwner" scoped="" ref="0x1b86b800"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1b86b8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x1b8692b0" loc="63:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x1b8692b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1b869488"/>
        <function-ref name="runTask" scoped="" ref="0x1b869568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x1b86c688" loc="50:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x1b86c688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b86c860"/>
        <function-ref name="stop" scoped="" ref="0x1b86c940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x1b86ba20" loc="55:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x1b86ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1b86bbf8"/>
        <function-ref name="userId" scoped="" ref="0x1b86bcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1ac47a48" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1ac47a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1ac44368"/>
        <function-ref name="fired" scoped="" ref="0x1ac45768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1ac45d08"/>
        <function-ref name="isOneShot" scoped="" ref="0x1ac45b28"/>
        <function-ref name="getdt" scoped="" ref="0x1ac44728"/>
        <function-ref name="gett0" scoped="" ref="0x1ac44548"/>
        <function-ref name="isRunning" scoped="" ref="0x1ac45948"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1ac45088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1ac44048"/>
        <function-ref name="startOneShot" scoped="" ref="0x1ac45308"/>
        <function-ref name="stop" scoped="" ref="0x1ac45588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1ac52ac8" loc="21:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoSensorC.nc">
      <component-ref qname="Ch6_GasDetector_101C.PhotoSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1ac52ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1ac58108"/>
        <function-ref name="readDone" scoped="" ref="0x1ac582e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1b85ec48" loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoC.nc">
      <component-ref qname="Ch6_GasDetector_101C.PhotoSensorC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1b85ec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b85d288"/>
        <function-ref name="readDone" scoped="" ref="0x1b85d468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1b85c3d8" loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <component-ref qname="Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1b85c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b85ca00"/>
        <function-ref name="readDone" scoped="" ref="0x1b85cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x1b85b010" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <component-ref qname="Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x1b85b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b85b638"/>
        <function-ref name="readDone" scoped="" ref="0x1b85b818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1b85a3b8" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoProC.nc">
      <component-ref qname="Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.PhotoProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1b85a3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b85a9e0"/>
        <function-ref name="readDone" scoped="" ref="0x1b85abc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1b8569d0" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1b8569d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1b856ba8"/>
        <function-ref name="configure" scoped="" ref="0x1b856c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1b857980" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1b857980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b856010"/>
        <function-ref name="readDone" scoped="" ref="0x1b8561f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x1b8564f8" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch6_GasDetector_101C.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1b8564f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x1b8566d0"/>
        <function-ref name="getChannel" scoped="" ref="0x1b8567b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x1b856890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1ac8a878" loc="18:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1ac8a878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1ac8aea0"/>
        <function-ref name="readDone" scoped="" ref="0x1ac88098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x1ac83390" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x1ac83390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1ac839d8"/>
        <function-ref name="readDone" scoped="" ref="0x1ac83bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x1ac861a8" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1ac861a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x1ac86380"/>
        <function-ref name="getChannel" scoped="" ref="0x1ac86460"/>
        <function-ref name="getPrescaler" scoped="" ref="0x1ac86540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x1ac86920" loc="23:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1ac86920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1ac86af8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1ac86bd8"/>
        <function-ref name="request" scoped="" ref="0x1ac86cb8"/>
        <function-ref name="granted" scoped="" ref="0x1ac86d98"/>
        <function-ref name="isOwner" scoped="" ref="0x1ac86e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1ac96100" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1ac96100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1ac962d8"/>
        <function-ref name="configure" scoped="" ref="0x1ac963b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x1aca99c0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x1aca99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1aca9b98"/>
        <function-ref name="dataReady" scoped="" ref="0x1aca9c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x1ac93568" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x1ac93568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1ac93740"/>
        <function-ref name="cancel" scoped="" ref="0x1ac93820"/>
        <function-ref name="dataReady" scoped="" ref="0x1ac93900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1ac9a6e8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1ac9a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1ac9a8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1ac9a9a0"/>
        <function-ref name="request" scoped="" ref="0x1ac9aa80"/>
        <function-ref name="granted" scoped="" ref="0x1ac9ab60"/>
        <function-ref name="isOwner" scoped="" ref="0x1ac9ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1aca6d30" loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1aca6d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1aca6f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x1aca3040" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x1aca3040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1aca3218"/>
        <function-ref name="dataReady" scoped="" ref="0x1aca32f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x1aca1b18" loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x1aca1b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1aca1cf0"/>
        <function-ref name="cancel" scoped="" ref="0x1aca1dd0"/>
        <function-ref name="dataReady" scoped="" ref="0x1aca1eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x1acb3468" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x1acb3468"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x1acb3640"/>
        <function-ref name="getAdmux" scoped="" ref="0x1acb3720"/>
        <function-ref name="setPrescaler" scoped="" ref="0x1acb3800"/>
        <function-ref name="isEnabled" scoped="" ref="0x1acb38e0"/>
        <function-ref name="enableAdc" scoped="" ref="0x1acb39c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x1acb3aa0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x1acb3b80"/>
        <function-ref name="isComplete" scoped="" ref="0x1acb3c60"/>
        <function-ref name="cancel" scoped="" ref="0x1acb3d40"/>
        <function-ref name="disableAdc" scoped="" ref="0x1acb3e20"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x1acb3f00"/>
        <function-ref name="disableInterruption" scoped="" ref="0x1aca0010"/>
        <function-ref name="startConversion" scoped="" ref="0x1aca00f0"/>
        <function-ref name="isStarted" scoped="" ref="0x1aca0250"/>
        <function-ref name="setAdcsra" scoped="" ref="0x1aca0330"/>
        <function-ref name="setContinuous" scoped="" ref="0x1aca0410"/>
        <function-ref name="getAdcsra" scoped="" ref="0x1aca04f0"/>
        <function-ref name="getValue" scoped="" ref="0x1aca05d0"/>
        <function-ref name="dataReady" scoped="" ref="0x1aca06b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x1aca1710" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x1aca1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1aca18e8"/>
        <function-ref name="stop" scoped="" ref="0x1aca19c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x1aca0800" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x1aca0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x1aca09d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x1aca0ab8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x1aca0b98"/>
        <function-ref name="actualMicro" scoped="" ref="0x1aca0c78"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x1aca0d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x1acd1468" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x1acd1468"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x1acd1640"/>
        <function-ref name="getAdmux" scoped="" ref="0x1acd1720"/>
        <function-ref name="setPrescaler" scoped="" ref="0x1acd1800"/>
        <function-ref name="isEnabled" scoped="" ref="0x1acd18e0"/>
        <function-ref name="enableAdc" scoped="" ref="0x1acd19c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x1acd1aa0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x1acd1b80"/>
        <function-ref name="isComplete" scoped="" ref="0x1acd1c60"/>
        <function-ref name="cancel" scoped="" ref="0x1acd1d40"/>
        <function-ref name="disableAdc" scoped="" ref="0x1acd1e20"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x1acd1f00"/>
        <function-ref name="disableInterruption" scoped="" ref="0x1acd0010"/>
        <function-ref name="startConversion" scoped="" ref="0x1acd00f0"/>
        <function-ref name="isStarted" scoped="" ref="0x1acd0250"/>
        <function-ref name="setAdcsra" scoped="" ref="0x1acd0330"/>
        <function-ref name="setContinuous" scoped="" ref="0x1acd0410"/>
        <function-ref name="getAdcsra" scoped="" ref="0x1acd04f0"/>
        <function-ref name="getValue" scoped="" ref="0x1acd05d0"/>
        <function-ref name="dataReady" scoped="" ref="0x1acd06b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x1ace9c70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x1ace9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x1ace9e48"/>
        <function-ref name="getAdmux" scoped="" ref="0x1ace9f28"/>
        <function-ref name="setPrescaler" scoped="" ref="0x1ace8018"/>
        <function-ref name="isEnabled" scoped="" ref="0x1ace80f8"/>
        <function-ref name="enableAdc" scoped="" ref="0x1ace81d8"/>
        <function-ref name="setAdmux" scoped="" ref="0x1ace82b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x1ace8398"/>
        <function-ref name="isComplete" scoped="" ref="0x1ace8478"/>
        <function-ref name="cancel" scoped="" ref="0x1ace8558"/>
        <function-ref name="disableAdc" scoped="" ref="0x1ace8638"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x1ace8718"/>
        <function-ref name="disableInterruption" scoped="" ref="0x1ace87f8"/>
        <function-ref name="startConversion" scoped="" ref="0x1ace88d8"/>
        <function-ref name="isStarted" scoped="" ref="0x1ace8a38"/>
        <function-ref name="setAdcsra" scoped="" ref="0x1ace8b18"/>
        <function-ref name="setContinuous" scoped="" ref="0x1ace8bf8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x1ace8cd8"/>
        <function-ref name="getValue" scoped="" ref="0x1ace8db8"/>
        <function-ref name="dataReady" scoped="" ref="0x1ace8e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x1ace7040" loc="37:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x1ace7040"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x1ace7218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1ad26c28" loc="82:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x1ad26c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1ad26e10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1ad26ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1ad25bb8" loc="86:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1ad25bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1ad25da0"/>
        <function-ref name="configure" scoped="" ref="0x1ad25e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x1ad25070" loc="83:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x1ad25070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1ad25248"/>
        <function-ref name="requested" scoped="" ref="0x1ad25328"/>
        <function-ref name="granted" scoped="" ref="0x1ad25408"/>
        <function-ref name="isOwner" scoped="" ref="0x1ad254e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1ad255c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1ad264e8" loc="81:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1ad264e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1ad266d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1ad267b0"/>
        <function-ref name="request" scoped="" ref="0x1ad26890"/>
        <function-ref name="granted" scoped="" ref="0x1ad26970"/>
        <function-ref name="isOwner" scoped="" ref="0x1ad26a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1ad25708" loc="84:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x1ad25708"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1ad258e0"/>
        <function-ref name="userId" scoped="" ref="0x1ad259c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b88b908" loc="34:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b88b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b88bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x1b88bc40" loc="35:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x1b88bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1b88be18"/>
        <function-ref name="isEmpty" scoped="" ref="0x1b88bef8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1b888010"/>
        <function-ref name="dequeue" scoped="" ref="0x1b8880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1b887568" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x1b887568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1b887750"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1b887830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1b8864f0" loc="59:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1b8864f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1b8866d8"/>
        <function-ref name="configure" scoped="" ref="0x1b8867b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x1b886918" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x1b886918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1b886af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x1b886bd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1b886cb0"/>
        <function-ref name="dequeue" scoped="" ref="0x1b886d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x1b887970" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x1b887970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b887b48"/>
        <function-ref name="requested" scoped="" ref="0x1b887c28"/>
        <function-ref name="granted" scoped="" ref="0x1b887d08"/>
        <function-ref name="isOwner" scoped="" ref="0x1b887de8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1b887ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1b886ed0" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x1b886ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1b8850c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1b8851a0"/>
        <function-ref name="led1On" scoped="" ref="0x1b885280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1b885360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1b885440"/>
        <function-ref name="get" scoped="" ref="0x1b885520"/>
        <function-ref name="led1Off" scoped="" ref="0x1b885600"/>
        <function-ref name="led0On" scoped="" ref="0x1b885980"/>
        <function-ref name="set" scoped="" ref="0x1b8857c0"/>
        <function-ref name="led2On" scoped="" ref="0x1b8856e0"/>
        <function-ref name="led2Off" scoped="" ref="0x1b8858a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1b888dc8" loc="53:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1b888dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b887010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b8870f0"/>
        <function-ref name="request" scoped="" ref="0x1b8871d0"/>
        <function-ref name="granted" scoped="" ref="0x1b8872b0"/>
        <function-ref name="isOwner" scoped="" ref="0x1b887390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1b886030" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x1b886030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1b886208"/>
        <function-ref name="userId" scoped="" ref="0x1b8862e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x1b885b00" loc="73:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x1b885b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1b885cd8"/>
        <function-ref name="runTask" scoped="" ref="0x1b885db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x1ad22428" loc="62:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x1ad22428"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x1ad22600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x1ad22740" loc="63:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x1ad22740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1ad22918"/>
        <function-ref name="requested" scoped="" ref="0x1ad229f8"/>
        <function-ref name="granted" scoped="" ref="0x1ad22ad8"/>
        <function-ref name="isOwner" scoped="" ref="0x1ad22bb8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1ad22c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x1ad22030" loc="60:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x1ad22030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1ad22208"/>
        <function-ref name="stop" scoped="" ref="0x1ad222e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x1ad22dd8" loc="64:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x1ad22dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1ad21010"/>
        <function-ref name="userId" scoped="" ref="0x1ad210f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x1b8b9150" loc="52:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x1b8b9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x1b8b9328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x1b8b9468" loc="53:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x1b8b9468"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b8b9640"/>
        <function-ref name="requested" scoped="" ref="0x1b8b9720"/>
        <function-ref name="granted" scoped="" ref="0x1b8b9800"/>
        <function-ref name="isOwner" scoped="" ref="0x1b8b98e0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1b8b99c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x1b8bbd10" loc="50:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x1b8bbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b8bbee8"/>
        <function-ref name="stop" scoped="" ref="0x1b8b9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x1b8b9b00" loc="54:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x1b8b9b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1b8b9cd8"/>
        <function-ref name="userId" scoped="" ref="0x1b8b9db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1ad498c8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1ad498c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1ad49ef0"/>
        <function-ref name="readDone" scoped="" ref="0x1ad48108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x1ad48718" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x1ad48718"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1ad48d60"/>
        <function-ref name="readDone" scoped="" ref="0x1ad46010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x1ad46ab0" loc="53:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1ad46ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x1ad46c88"/>
        <function-ref name="getChannel" scoped="" ref="0x1ad46d68"/>
        <function-ref name="getPrescaler" scoped="" ref="0x1ad46e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x1ad46338" loc="52:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x1ad46338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x1ad46510"/>
        <function-ref name="cancel" scoped="" ref="0x1ad465f0"/>
        <function-ref name="dataReady" scoped="" ref="0x1ad466d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x1ad5bf20" loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x1ad5bf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1ad5a110"/>
        <function-ref name="runTask" scoped="" ref="0x1ad5a1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1ad50888" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1ad50888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1ad50ec0"/>
        <function-ref name="readDone" scoped="" ref="0x1ad6c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x1ad6c538" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x1ad6c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1ad6cb70"/>
        <function-ref name="readDone" scoped="" ref="0x1ad6cd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x1ad7c108" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1ad7c108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1ad7c2f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1ad7c3d0"/>
        <function-ref name="request" scoped="" ref="0x1ad7c4b0"/>
        <function-ref name="granted" scoped="" ref="0x1ad7c590"/>
        <function-ref name="isOwner" scoped="" ref="0x1ad7c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1ad75878" loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <component-ref qname="PhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1ad75878"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1ad75a50"/>
        <function-ref name="configure" scoped="" ref="0x1ad75b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x1ad75c80" loc="32:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <component-ref qname="PhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1ad75c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x1ad75e58"/>
        <function-ref name="getChannel" scoped="" ref="0x1ad74010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x1ad740f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1ad70040" loc="30:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1ad70040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1ad70218"/>
        <function-ref name="configure" scoped="" ref="0x1ad702f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoPin" ref="0x1ad709a0" loc="34:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoPin" scoped="" ref="0x1ad709a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ad70b78"/>
        <function-ref name="isInput" scoped="" ref="0x1ad70c58"/>
        <function-ref name="toggle" scoped="" ref="0x1ad70d38"/>
        <function-ref name="isOutput" scoped="" ref="0x1ad70e18"/>
        <function-ref name="get" scoped="" ref="0x1ad70ef8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ad8d010"/>
        <function-ref name="set" scoped="" ref="0x1ad8d0f0"/>
        <function-ref name="clr" scoped="" ref="0x1ad8d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x1ad70448" loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1ad70448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x1ad70620"/>
        <function-ref name="getChannel" scoped="" ref="0x1ad70700"/>
        <function-ref name="getPrescaler" scoped="" ref="0x1ad707e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1ad895f0" loc="36:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x1ad895f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1ad897c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1ad898a8"/>
        <function-ref name="led1On" scoped="" ref="0x1ad89988"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1ad89a68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1ad89b48"/>
        <function-ref name="get" scoped="" ref="0x1ad89c28"/>
        <function-ref name="led1Off" scoped="" ref="0x1ad89d08"/>
        <function-ref name="led2Off" scoped="" ref="0x1ad8b0f0"/>
        <function-ref name="set" scoped="" ref="0x1ad89de8"/>
        <function-ref name="led0On" scoped="" ref="0x1ad89ec8"/>
        <function-ref name="led2On" scoped="" ref="0x1ad8b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoAdc" ref="0x1ad892d0" loc="35:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoAdc" scoped="" ref="0x1ad892d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad894a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x1ad9b068" loc="40:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x1ad9b068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad9b240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x1ad825e8" loc="32:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x1ad825e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ad827c0"/>
        <function-ref name="isInput" scoped="" ref="0x1ad828a0"/>
        <function-ref name="toggle" scoped="" ref="0x1ad82980"/>
        <function-ref name="isOutput" scoped="" ref="0x1ad82a60"/>
        <function-ref name="get" scoped="" ref="0x1ad82b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ad82c20"/>
        <function-ref name="set" scoped="" ref="0x1ad82d00"/>
        <function-ref name="clr" scoped="" ref="0x1ad82de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x1ad80348" loc="35:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x1ad80348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ad80520"/>
        <function-ref name="isInput" scoped="" ref="0x1ad80600"/>
        <function-ref name="toggle" scoped="" ref="0x1ad806e0"/>
        <function-ref name="isOutput" scoped="" ref="0x1ad807c0"/>
        <function-ref name="get" scoped="" ref="0x1ad808a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ad80980"/>
        <function-ref name="set" scoped="" ref="0x1ad80a60"/>
        <function-ref name="clr" scoped="" ref="0x1ad80b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x1ad9ba58" loc="43:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x1ad9ba58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad9bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x1ad9a1c8" loc="45:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x1ad9a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad9a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x1ad83268" loc="30:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x1ad83268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ad83440"/>
        <function-ref name="isInput" scoped="" ref="0x1ad83520"/>
        <function-ref name="toggle" scoped="" ref="0x1ad83600"/>
        <function-ref name="isOutput" scoped="" ref="0x1ad836e0"/>
        <function-ref name="get" scoped="" ref="0x1ad837c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ad838a0"/>
        <function-ref name="set" scoped="" ref="0x1ad83980"/>
        <function-ref name="clr" scoped="" ref="0x1ad83a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x1ad81010" loc="33:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x1ad81010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ad811e8"/>
        <function-ref name="isInput" scoped="" ref="0x1ad812c8"/>
        <function-ref name="toggle" scoped="" ref="0x1ad813a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1ad81488"/>
        <function-ref name="get" scoped="" ref="0x1ad81568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ad81648"/>
        <function-ref name="set" scoped="" ref="0x1ad81728"/>
        <function-ref name="clr" scoped="" ref="0x1ad81808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x1ad9d6c8" loc="37:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x1ad9d6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ad9d8a0"/>
        <function-ref name="isInput" scoped="" ref="0x1ad9d980"/>
        <function-ref name="toggle" scoped="" ref="0x1ad9da60"/>
        <function-ref name="isOutput" scoped="" ref="0x1ad9db40"/>
        <function-ref name="get" scoped="" ref="0x1ad9dc20"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ad9dd00"/>
        <function-ref name="set" scoped="" ref="0x1ad9dde0"/>
        <function-ref name="clr" scoped="" ref="0x1ad9dec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x1ad9b3b8" loc="41:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x1ad9b3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad9b590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x1ad80cb8" loc="36:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x1ad80cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ad80e90"/>
        <function-ref name="isInput" scoped="" ref="0x1ad9d010"/>
        <function-ref name="toggle" scoped="" ref="0x1ad9d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x1ad9d1d0"/>
        <function-ref name="get" scoped="" ref="0x1ad9d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ad9d390"/>
        <function-ref name="set" scoped="" ref="0x1ad9d470"/>
        <function-ref name="clr" scoped="" ref="0x1ad9d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x1ad9a518" loc="46:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x1ad9a518"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad9a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x1ad83bd8" loc="31:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x1ad83bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ad83db0"/>
        <function-ref name="isInput" scoped="" ref="0x1ad83e90"/>
        <function-ref name="toggle" scoped="" ref="0x1ad82010"/>
        <function-ref name="isOutput" scoped="" ref="0x1ad820f0"/>
        <function-ref name="get" scoped="" ref="0x1ad821d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ad822b0"/>
        <function-ref name="set" scoped="" ref="0x1ad82390"/>
        <function-ref name="clr" scoped="" ref="0x1ad82470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x1ad81980" loc="34:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x1ad81980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ad81b58"/>
        <function-ref name="isInput" scoped="" ref="0x1ad81c38"/>
        <function-ref name="toggle" scoped="" ref="0x1ad81d18"/>
        <function-ref name="isOutput" scoped="" ref="0x1ad81df8"/>
        <function-ref name="get" scoped="" ref="0x1ad81ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ad80010"/>
        <function-ref name="set" scoped="" ref="0x1ad800f0"/>
        <function-ref name="clr" scoped="" ref="0x1ad801d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x1ad9b708" loc="42:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x1ad9b708"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad9b8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x1ad9be28" loc="44:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x1ad9be28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad9a050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x1ad9a868" loc="47:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x1ad9a868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad9aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x1ad84818" loc="29:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x1ad84818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ad849f0"/>
        <function-ref name="isInput" scoped="" ref="0x1ad84ad0"/>
        <function-ref name="toggle" scoped="" ref="0x1ad84bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x1ad84c90"/>
        <function-ref name="get" scoped="" ref="0x1ad84d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ad84e50"/>
        <function-ref name="set" scoped="" ref="0x1ad83010"/>
        <function-ref name="clr" scoped="" ref="0x1ad830f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x1ad99ae0" loc="29:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x1ad99ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad99cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x1ad95518" loc="32:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x1ad95518"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad956f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x1ad95bb8" loc="34:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x1ad95bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad95d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x1ad99e30" loc="30:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x1ad99e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad95050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x1ad95f08" loc="35:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x1ad95f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad940f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x1ad951c8" loc="31:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x1ad951c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x1ad95868" loc="33:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x1ad95868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad95a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x1ad94268" loc="36:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x1ad94268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1ad94440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1ad76990" loc="21:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredSensorC.nc">
      <component-ref qname="Ch6_GasDetector_101C.UltraredSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1ad76990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1ada9010"/>
        <function-ref name="readDone" scoped="" ref="0x1ada91f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1b8ae448" loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredC.nc">
      <component-ref qname="Ch6_GasDetector_101C.UltraredSensorC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1b8ae448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b8aea70"/>
        <function-ref name="readDone" scoped="" ref="0x1b8aec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1b8accb0" loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <component-ref qname="Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1b8accb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b8ab2e8"/>
        <function-ref name="readDone" scoped="" ref="0x1b8ab4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x1b8ab870" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <component-ref qname="Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x1b8ab870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b8abe98"/>
        <function-ref name="readDone" scoped="" ref="0x1b8aa098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1b8aac08" loc="30:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredProC.nc">
      <component-ref qname="Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.UltraredProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1b8aac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b8a9258"/>
        <function-ref name="readDone" scoped="" ref="0x1b8a9438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1b8a5230" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1b8a5230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1b8a5408"/>
        <function-ref name="configure" scoped="" ref="0x1b8a54e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1b8a61d0" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1b8a61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b8a67f8"/>
        <function-ref name="readDone" scoped="" ref="0x1b8a69d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x1b8a6ce0" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch6_GasDetector_101C.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1b8a6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x1b8a6eb8"/>
        <function-ref name="getChannel" scoped="" ref="0x1b8a5010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x1b8a50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1adb1060" loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <component-ref qname="UltraredDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1adb1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1adb1238"/>
        <function-ref name="configure" scoped="" ref="0x1adb1318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x1adb1468" loc="32:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <component-ref qname="UltraredDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1adb1468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x1adb1640"/>
        <function-ref name="getChannel" scoped="" ref="0x1adb1720"/>
        <function-ref name="getPrescaler" scoped="" ref="0x1adb1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1adcb760" loc="30:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1adcb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1adcb938"/>
        <function-ref name="configure" scoped="" ref="0x1adcba18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UltraredAdc" ref="0x1adcaa58" loc="35:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UltraredAdc" scoped="" ref="0x1adcaa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x1adcac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UltraredPin" ref="0x1adca0e0" loc="34:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UltraredPin" scoped="" ref="0x1adca0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1adca2b8"/>
        <function-ref name="isInput" scoped="" ref="0x1adca398"/>
        <function-ref name="toggle" scoped="" ref="0x1adca478"/>
        <function-ref name="isOutput" scoped="" ref="0x1adca558"/>
        <function-ref name="get" scoped="" ref="0x1adca638"/>
        <function-ref name="makeOutput" scoped="" ref="0x1adca718"/>
        <function-ref name="set" scoped="" ref="0x1adca7f8"/>
        <function-ref name="clr" scoped="" ref="0x1adca8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x1adcbb68" loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1adcbb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x1adcbd40"/>
        <function-ref name="getChannel" scoped="" ref="0x1adcbe20"/>
        <function-ref name="getPrescaler" scoped="" ref="0x1adcbf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1adcc9d8" loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageC.nc">
      <component-ref qname="Ch6_GasDetector_101C.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1adcc9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1adc5010"/>
        <function-ref name="readDone" scoped="" ref="0x1adc51f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1b8a07c0" loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <component-ref qname="Ch6_GasDetector_101C.VoltageC.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1b8a07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b8a0de8"/>
        <function-ref name="readDone" scoped="" ref="0x1b8dd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x1b8dd3b8" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <component-ref qname="Ch6_GasDetector_101C.VoltageC.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x1b8dd3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b8dd9e0"/>
        <function-ref name="readDone" scoped="" ref="0x1b8ddbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1b8db778" loc="30:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageProC.nc">
      <component-ref qname="Ch6_GasDetector_101C.VoltageC.VoltageProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1b8db778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b8dbda0"/>
        <function-ref name="readDone" scoped="" ref="0x1b8da010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1b8d8d80" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch6_GasDetector_101C.VoltageC.VoltageProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1b8d8d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1b8d6010"/>
        <function-ref name="configure" scoped="" ref="0x1b8d60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x1b8d9d50" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch6_GasDetector_101C.VoltageC.VoltageProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x1b8d9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b8d83c0"/>
        <function-ref name="readDone" scoped="" ref="0x1b8d85a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x1b8d88a8" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch6_GasDetector_101C.VoltageC.VoltageProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1b8d88a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x1b8d8a80"/>
        <function-ref name="getChannel" scoped="" ref="0x1b8d8b60"/>
        <function-ref name="getPrescaler" scoped="" ref="0x1b8d8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1add2010" loc="22:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
      <component-ref qname="VoltageDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1add2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1add21e8"/>
        <function-ref name="configure" scoped="" ref="0x1add22c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x1add3ac8" loc="21:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
      <component-ref qname="VoltageDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x1add3ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x1add3ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x1add3d80"/>
        <function-ref name="getPrescaler" scoped="" ref="0x1add3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1adec290" loc="33:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1adec290"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1adec468"/>
        <function-ref name="configure" scoped="" ref="0x1adec548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageConfig" ref="0x1adec6c8" loc="34:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageConfig" scoped="" ref="0x1adec6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x1adec8a0"/>
        <function-ref name="getChannel" scoped="" ref="0x1adec980"/>
        <function-ref name="getPrescaler" scoped="" ref="0x1adeca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BatMon" ref="0x1adecc08" loc="36:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BatMon" scoped="" ref="0x1adecc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1adecde0"/>
        <function-ref name="isInput" scoped="" ref="0x1adecec0"/>
        <function-ref name="toggle" scoped="" ref="0x1adeb010"/>
        <function-ref name="isOutput" scoped="" ref="0x1adeb0f0"/>
        <function-ref name="get" scoped="" ref="0x1adeb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1adeb2b0"/>
        <function-ref name="set" scoped="" ref="0x1adeb390"/>
        <function-ref name="clr" scoped="" ref="0x1adeb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1add0cc0" loc="49:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x1add0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1add0e98"/>
        <function-ref name="stopDone" scoped="" ref="0x1ade4010"/>
        <function-ref name="start" scoped="" ref="0x1ade40f0"/>
        <function-ref name="stop" scoped="" ref="0x1ade41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1ade45a8" loc="51:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x1ade45a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1ade4780"/>
        <function-ref name="getPayload" scoped="" ref="0x1ade4860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1ade4940"/>
        <function-ref name="cancel" scoped="" ref="0x1ade4a20"/>
        <function-ref name="sendDone" scoped="" ref="0x1ade4b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x1ade3680" loc="53:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x1ade3680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x1ade3858"/>
        <function-ref name="receive" scoped="" ref="0x1ade3938"/>
        <function-ref name="getPayload" scoped="" ref="0x1ade3a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1adfbe20" loc="55:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x1adfbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ade1010"/>
        <function-ref name="payloadLength" scoped="" ref="0x1ade10f0"/>
        <function-ref name="getPayload" scoped="" ref="0x1ade11d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1ade12b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1ade1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1ade4ed8" loc="52:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x1ade4ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x1ade30c0"/>
        <function-ref name="receive" scoped="" ref="0x1ade31a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1ade3280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x1ae0eeb0" loc="57:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1ae0eeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1adf10c0"/>
        <function-ref name="noAck" scoped="" ref="0x1adf11a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x1adf1280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1adf23b8" loc="56:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x1adf23b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x1adf2590"/>
        <function-ref name="address" scoped="" ref="0x1adf2670"/>
        <function-ref name="destination" scoped="" ref="0x1adf2750"/>
        <function-ref name="setSource" scoped="" ref="0x1adf2830"/>
        <function-ref name="setDestination" scoped="" ref="0x1adf2910"/>
        <function-ref name="type" scoped="" ref="0x1adf29f0"/>
        <function-ref name="setType" scoped="" ref="0x1adf2ad0"/>
        <function-ref name="isForMe" scoped="" ref="0x1adf2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1ae0b878" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x1ae0b878"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1ae0ba50"/>
        <function-ref name="stopDone" scoped="" ref="0x1ae0bb30"/>
        <function-ref name="start" scoped="" ref="0x1ae0bc10"/>
        <function-ref name="stop" scoped="" ref="0x1ae0bcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1ae0a100" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x1ae0a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1ae0a2d8"/>
        <function-ref name="getPayload" scoped="" ref="0x1ae0a3b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1ae0a498"/>
        <function-ref name="cancel" scoped="" ref="0x1ae0a578"/>
        <function-ref name="sendDone" scoped="" ref="0x1ae0a658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x1ae081e8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x1ae081e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x1ae083c0"/>
        <function-ref name="receive" scoped="" ref="0x1ae084a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1ae08580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1ae07040" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x1ae07040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ae07218"/>
        <function-ref name="payloadLength" scoped="" ref="0x1ae072f8"/>
        <function-ref name="getPayload" scoped="" ref="0x1ae073d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1ae074b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1ae07598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x1ae02b48" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x1ae02b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1ae02d20"/>
        <function-ref name="getRssi" scoped="" ref="0x1ae02e00"/>
        <function-ref name="getPower" scoped="" ref="0x1ae02ee0"/>
        <function-ref name="getLqi" scoped="" ref="0x1ae05010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1ae0aa30" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x1ae0aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x1ae0ac08"/>
        <function-ref name="receive" scoped="" ref="0x1ae0ace8"/>
        <function-ref name="getPayload" scoped="" ref="0x1ae0adc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x1ae05168" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1ae05168"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1ae05340"/>
        <function-ref name="noAck" scoped="" ref="0x1ae05420"/>
        <function-ref name="wasAcked" scoped="" ref="0x1ae05500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1ae086d0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x1ae086d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x1ae088a8"/>
        <function-ref name="address" scoped="" ref="0x1ae08988"/>
        <function-ref name="destination" scoped="" ref="0x1ae08a68"/>
        <function-ref name="setSource" scoped="" ref="0x1ae08b48"/>
        <function-ref name="setDestination" scoped="" ref="0x1ae08c28"/>
        <function-ref name="type" scoped="" ref="0x1ae08d08"/>
        <function-ref name="setType" scoped="" ref="0x1ae08de8"/>
        <function-ref name="isForMe" scoped="" ref="0x1ae08ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1ae136c8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x1ae136c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1ae138a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1ae13980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1ae13a60"/>
        <function-ref name="cancel" scoped="" ref="0x1ae13b40"/>
        <function-ref name="sendDone" scoped="" ref="0x1ae13c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1ae13d98" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x1ae13d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x1ae18010"/>
        <function-ref name="receive" scoped="" ref="0x1ae180f0"/>
        <function-ref name="getPayload" scoped="" ref="0x1ae181d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1ae1d848" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x1ae1d848"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1ae1da20"/>
        <function-ref name="getPayload" scoped="" ref="0x1ae1db00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1ae1dbe0"/>
        <function-ref name="cancel" scoped="" ref="0x1ae1dcc0"/>
        <function-ref name="sendDone" scoped="" ref="0x1ae1dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x1ae1c938" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x1ae1c938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x1ae1cb10"/>
        <function-ref name="receive" scoped="" ref="0x1ae1cbf0"/>
        <function-ref name="getPayload" scoped="" ref="0x1ae1ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1ae1b778" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x1ae1b778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1ae1b950"/>
        <function-ref name="payloadLength" scoped="" ref="0x1ae1ba30"/>
        <function-ref name="getPayload" scoped="" ref="0x1ae1bb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1ae1bbf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1ae1bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1ae1c1a0" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x1ae1c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x1ae1c378"/>
        <function-ref name="receive" scoped="" ref="0x1ae1c458"/>
        <function-ref name="getPayload" scoped="" ref="0x1ae1c538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1ae1ce20" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x1ae1ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x1ae1b010"/>
        <function-ref name="address" scoped="" ref="0x1ae1b0f0"/>
        <function-ref name="destination" scoped="" ref="0x1ae1b1d0"/>
        <function-ref name="setSource" scoped="" ref="0x1ae1b2b0"/>
        <function-ref name="setDestination" scoped="" ref="0x1ae1b390"/>
        <function-ref name="type" scoped="" ref="0x1ae1b470"/>
        <function-ref name="setType" scoped="" ref="0x1ae1b550"/>
        <function-ref name="isForMe" scoped="" ref="0x1ae1b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1ae44010" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x1ae44010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1ae441e8"/>
        <function-ref name="stopDone" scoped="" ref="0x1ae442c8"/>
        <function-ref name="start" scoped="" ref="0x1ae443a8"/>
        <function-ref name="stop" scoped="" ref="0x1ae44488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1ae445f0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x1ae445f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1ae447c8"/>
        <function-ref name="getPayload" scoped="" ref="0x1ae448a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1ae44988"/>
        <function-ref name="cancel" scoped="" ref="0x1ae44a68"/>
        <function-ref name="sendDone" scoped="" ref="0x1ae44b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1ae44cb0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x1ae44cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x1ae44e88"/>
        <function-ref name="receive" scoped="" ref="0x1ae43010"/>
        <function-ref name="getPayload" scoped="" ref="0x1ae430f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1ae43260" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x1ae43260"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x1ae43438"/>
        <function-ref name="address" scoped="" ref="0x1ae43518"/>
        <function-ref name="destination" scoped="" ref="0x1ae435f8"/>
        <function-ref name="setSource" scoped="" ref="0x1ae436d8"/>
        <function-ref name="setDestination" scoped="" ref="0x1ae437b8"/>
        <function-ref name="type" scoped="" ref="0x1ae43898"/>
        <function-ref name="setType" scoped="" ref="0x1ae43978"/>
        <function-ref name="isForMe" scoped="" ref="0x1ae43a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1ae41cd8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x1ae41cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1ae41eb0"/>
        <function-ref name="stopDone" scoped="" ref="0x1ae5d010"/>
        <function-ref name="start" scoped="" ref="0x1ae5d0f0"/>
        <function-ref name="stop" scoped="" ref="0x1ae5d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x1ae51e68" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x1ae51e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1ae55050"/>
        <function-ref name="cancel" scoped="" ref="0x1ae55130"/>
        <function-ref name="modify" scoped="" ref="0x1ae55210"/>
        <function-ref name="sendDone" scoped="" ref="0x1ae552f0"/>
        <function-ref name="resendCCA" scoped="" ref="0x1ae553d0"/>
        <function-ref name="resend" scoped="" ref="0x1ae554b0"/>
        <function-ref name="sendCCA" scoped="" ref="0x1ae55590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1ae5d338" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x1ae5d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1ae5d510"/>
        <function-ref name="getPayload" scoped="" ref="0x1ae5d5f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1ae5d6d0"/>
        <function-ref name="cancel" scoped="" ref="0x1ae5d7b0"/>
        <function-ref name="sendDone" scoped="" ref="0x1ae5d890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x1ae69690" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x1ae69690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1ae69868"/>
        <function-ref name="rand32" scoped="" ref="0x1ae69948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1ae41990" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1ae41990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1ae41b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x1ae5a610" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x1ae5a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1ae5a7e8"/>
        <function-ref name="stop" scoped="" ref="0x1ae5a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x1ae57c28" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x1ae57c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x1ae57e00"/>
        <function-ref name="rfOff" scoped="" ref="0x1ae57ee0"/>
        <function-ref name="rxOn" scoped="" ref="0x1ae5a010"/>
        <function-ref name="startVReg" scoped="" ref="0x1ae5a0f0"/>
        <function-ref name="stopVReg" scoped="" ref="0x1ae5a1d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x1ae5a2b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x1ae5a390"/>
        <function-ref name="startVRegDone" scoped="" ref="0x1ae5a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1ae6b4f8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x1ae6b4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1ae6b6d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1ae6b7b0"/>
        <function-ref name="led1On" scoped="" ref="0x1ae6b890"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1ae6b970"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1ae6ba50"/>
        <function-ref name="get" scoped="" ref="0x1ae6bb30"/>
        <function-ref name="led1Off" scoped="" ref="0x1ae6bc10"/>
        <function-ref name="led2Off" scoped="" ref="0x1ae6a010"/>
        <function-ref name="set" scoped="" ref="0x1ae6bcf0"/>
        <function-ref name="led0On" scoped="" ref="0x1ae6bdd0"/>
        <function-ref name="led2On" scoped="" ref="0x1ae6beb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x1ae5da00" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1ae5da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1ae5dbd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1ae5dcb8"/>
        <function-ref name="request" scoped="" ref="0x1ae5dd98"/>
        <function-ref name="granted" scoped="" ref="0x1ae5de78"/>
        <function-ref name="isOwner" scoped="" ref="0x1ae5c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CsmaBackoff" ref="0x1ae6ced8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x1ae6ced8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x1ae6e0c0"/>
        <function-ref name="initial" scoped="" ref="0x1ae6e1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1ae69ab8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x1ae69ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x1ae69c90"/>
        <function-ref name="address" scoped="" ref="0x1ae69d70"/>
        <function-ref name="destination" scoped="" ref="0x1ae69e50"/>
        <function-ref name="setSource" scoped="" ref="0x1ae6b010"/>
        <function-ref name="setDestination" scoped="" ref="0x1ae6b0f0"/>
        <function-ref name="type" scoped="" ref="0x1ae6b1d0"/>
        <function-ref name="setType" scoped="" ref="0x1ae6b2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x1ae6b390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x1ae676b8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x1ae676b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1ae67890"/>
        <function-ref name="runTask" scoped="" ref="0x1ae67970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x1ae68e60" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x1ae68e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1ae670e0"/>
        <function-ref name="runTask" scoped="" ref="0x1ae671c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x1ae68730" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x1ae68730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1ae68908"/>
        <function-ref name="runTask" scoped="" ref="0x1ae689e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x1ae80dd8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x1ae80dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x1ae84010"/>
        <function-ref name="setChannel" scoped="" ref="0x1ae840f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x1ae841d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x1ae842b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x1ae84390"/>
        <function-ref name="sync" scoped="" ref="0x1ae84470"/>
        <function-ref name="getChannel" scoped="" ref="0x1ae84550"/>
        <function-ref name="getPanAddr" scoped="" ref="0x1ae84630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1ae87578" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1ae87578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1ae87750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x1ae847a0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x1ae847a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x1ae84978"/>
        <function-ref name="rfOff" scoped="" ref="0x1ae84a58"/>
        <function-ref name="rxOn" scoped="" ref="0x1ae84b38"/>
        <function-ref name="startVReg" scoped="" ref="0x1ae84c18"/>
        <function-ref name="stopVReg" scoped="" ref="0x1ae84cf8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x1ae84dd8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x1ae84eb8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x1ae83010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1ae878c0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1ae878c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1ae87a98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1ae87b78"/>
        <function-ref name="request" scoped="" ref="0x1ae87c58"/>
        <function-ref name="granted" scoped="" ref="0x1ae87d38"/>
        <function-ref name="isOwner" scoped="" ref="0x1ae87e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1ae83180" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x1ae83180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x1ae83358"/>
        <function-ref name="address" scoped="" ref="0x1ae83438"/>
        <function-ref name="destination" scoped="" ref="0x1ae83518"/>
        <function-ref name="setSource" scoped="" ref="0x1ae835f8"/>
        <function-ref name="setDestination" scoped="" ref="0x1ae836d8"/>
        <function-ref name="type" scoped="" ref="0x1ae837b8"/>
        <function-ref name="setType" scoped="" ref="0x1ae83898"/>
        <function-ref name="isForMe" scoped="" ref="0x1ae83978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x1ae9b728" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x1ae9b728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x1ae9b900"/>
        <function-ref name="setChannel" scoped="" ref="0x1ae9b9e0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x1ae9bac0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x1ae9bba0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x1ae9bc80"/>
        <function-ref name="sync" scoped="" ref="0x1ae9bd60"/>
        <function-ref name="getChannel" scoped="" ref="0x1ae9be40"/>
        <function-ref name="getPanAddr" scoped="" ref="0x1ae9bf20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x1ae9ab70" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x1ae9ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="T32khz" ref="0x1a140cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1ae98ee8"/>
        <function-ref name="fired" scoped="" ref="0x1ae987a8"/>
        <function-ref name="startAt" scoped="" ref="0x1ae98ba8"/>
        <function-ref name="isRunning" scoped="" ref="0x1ae989a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x1ae970f8"/>
        <function-ref name="start" scoped="" ref="0x1ae98308"/>
        <function-ref name="stop" scoped="" ref="0x1ae985a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x1ae91030" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x1ae91030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1ae91208"/>
        <function-ref name="write" scoped="" ref="0x1ae912e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x1ae97c78" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x1ae97c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ae97e50"/>
        <function-ref name="isInput" scoped="" ref="0x1ae96010"/>
        <function-ref name="toggle" scoped="" ref="0x1ae960f0"/>
        <function-ref name="isOutput" scoped="" ref="0x1ae961d0"/>
        <function-ref name="get" scoped="" ref="0x1ae962b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ae96390"/>
        <function-ref name="set" scoped="" ref="0x1ae96470"/>
        <function-ref name="clr" scoped="" ref="0x1ae96550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x1aeab6e0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x1aeab6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1aeab938"/>
        <function-ref name="write" scoped="" ref="0x1aeaba18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x1ae972e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x1ae972e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ae974c0"/>
        <function-ref name="isInput" scoped="" ref="0x1ae975a0"/>
        <function-ref name="toggle" scoped="" ref="0x1ae97680"/>
        <function-ref name="isOutput" scoped="" ref="0x1ae97760"/>
        <function-ref name="get" scoped="" ref="0x1ae97840"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ae97920"/>
        <function-ref name="set" scoped="" ref="0x1ae97a00"/>
        <function-ref name="clr" scoped="" ref="0x1ae97ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x1ae966e8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x1ae966e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1ae968c0"/>
        <function-ref name="isInput" scoped="" ref="0x1ae969a0"/>
        <function-ref name="toggle" scoped="" ref="0x1ae96a80"/>
        <function-ref name="isOutput" scoped="" ref="0x1ae96b60"/>
        <function-ref name="get" scoped="" ref="0x1ae96c40"/>
        <function-ref name="makeOutput" scoped="" ref="0x1ae96d20"/>
        <function-ref name="set" scoped="" ref="0x1ae96e00"/>
        <function-ref name="clr" scoped="" ref="0x1ae96ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1ae9cce8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1ae9cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1ae9cec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x1ae91488" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x1ae91488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1ae91660"/>
        <function-ref name="write" scoped="" ref="0x1ae91740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x1ae956a8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x1ae956a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1ae95880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1ae95960"/>
        <function-ref name="request" scoped="" ref="0x1ae95a40"/>
        <function-ref name="granted" scoped="" ref="0x1ae95b20"/>
        <function-ref name="isOwner" scoped="" ref="0x1ae95c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x1aeaa580" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x1aeaa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1aeaa758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x1aeaa8f0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x1aeaa8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1aeaaac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x1aea9610" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x1aea9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1aea97e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1aea98c8"/>
        <function-ref name="request" scoped="" ref="0x1aea99a8"/>
        <function-ref name="granted" scoped="" ref="0x1aea9a88"/>
        <function-ref name="isOwner" scoped="" ref="0x1aea9b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x1ae9a0a8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x1ae9a0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x1ae9a280"/>
        <function-ref name="rfOff" scoped="" ref="0x1ae9a360"/>
        <function-ref name="rxOn" scoped="" ref="0x1ae9a440"/>
        <function-ref name="startVReg" scoped="" ref="0x1ae9a520"/>
        <function-ref name="stopVReg" scoped="" ref="0x1ae9a600"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x1ae9a6e0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x1ae9a7c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x1ae9a8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x1aeab290" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x1aeab290"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1aeab468"/>
        <function-ref name="write" scoped="" ref="0x1aeab548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x1aeabbb0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x1aeabbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1aeabd88"/>
        <function-ref name="write" scoped="" ref="0x1aeabe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1ae9b060" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1ae9b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1ae9b238"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1ae9b318"/>
        <function-ref name="request" scoped="" ref="0x1ae9b3f8"/>
        <function-ref name="granted" scoped="" ref="0x1ae9b4d8"/>
        <function-ref name="isOwner" scoped="" ref="0x1ae9b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x1aeae0b0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x1aeae0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1aeae288"/>
        <function-ref name="write" scoped="" ref="0x1aeae368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x1aea8e80" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x1aea8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1aeaa070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x1ae95090" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x1ae95090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1ae95268"/>
        <function-ref name="disable" scoped="" ref="0x1ae95348"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1ae95428"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1ae95508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1aeaac38" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x1aeaac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x1aeaae10"/>
        <function-ref name="address" scoped="" ref="0x1aeaaef0"/>
        <function-ref name="destination" scoped="" ref="0x1aea9010"/>
        <function-ref name="setSource" scoped="" ref="0x1aea90f0"/>
        <function-ref name="setDestination" scoped="" ref="0x1aea91d0"/>
        <function-ref name="type" scoped="" ref="0x1aea92b0"/>
        <function-ref name="setType" scoped="" ref="0x1aea9390"/>
        <function-ref name="isForMe" scoped="" ref="0x1aea9470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1aea9cd0" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x1aea9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1aea9ea8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1aea7010"/>
        <function-ref name="led1On" scoped="" ref="0x1aea70f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1aea71d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1aea72b0"/>
        <function-ref name="get" scoped="" ref="0x1aea7390"/>
        <function-ref name="led1Off" scoped="" ref="0x1aea7470"/>
        <function-ref name="led2Off" scoped="" ref="0x1aea77f0"/>
        <function-ref name="set" scoped="" ref="0x1aea7550"/>
        <function-ref name="led0On" scoped="" ref="0x1aea7630"/>
        <function-ref name="led2On" scoped="" ref="0x1aea7710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x1aeaa208" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x1aeaa208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1aeaa3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone_task" ref="0x1aea4260" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone_task" scoped="" ref="0x1aea4260"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1aea4438"/>
        <function-ref name="runTask" scoped="" ref="0x1aea4518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1aedfb10" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1aedfb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1aedfce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x1aede010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x1aede010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="T32khz" ref="0x1a140cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1aedd350"/>
        <function-ref name="fired" scoped="" ref="0x1aedec00"/>
        <function-ref name="startAt" scoped="" ref="0x1aedd010"/>
        <function-ref name="isRunning" scoped="" ref="0x1aedee00"/>
        <function-ref name="getAlarm" scoped="" ref="0x1aedd550"/>
        <function-ref name="start" scoped="" ref="0x1aede760"/>
        <function-ref name="stop" scoped="" ref="0x1aedea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1aeda358" loc="67:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x1aeda358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="T32khz" ref="0x1a140cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1b050750"/>
        <function-ref name="fired" scoped="" ref="0x1b050010"/>
        <function-ref name="startAt" scoped="" ref="0x1b050410"/>
        <function-ref name="isRunning" scoped="" ref="0x1b050210"/>
        <function-ref name="getAlarm" scoped="" ref="0x1b050950"/>
        <function-ref name="start" scoped="" ref="0x1aedaaa8"/>
        <function-ref name="stop" scoped="" ref="0x1aedad48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b050b08" loc="68:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b050b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b050ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1b8c9758" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x1b8c9758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="T32khz" ref="0x1a140cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1b8c7ab0"/>
        <function-ref name="fired" scoped="" ref="0x1b8c7370"/>
        <function-ref name="startAt" scoped="" ref="0x1b8c7770"/>
        <function-ref name="isRunning" scoped="" ref="0x1b8c7570"/>
        <function-ref name="getAlarm" scoped="" ref="0x1b8c7cb0"/>
        <function-ref name="start" scoped="" ref="0x1b8c9ea8"/>
        <function-ref name="stop" scoped="" ref="0x1b8c7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1b8c42c8" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x1b8c42c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="TOne" ref="0x1a1e1ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1b8c3618"/>
        <function-ref name="fired" scoped="" ref="0x1b8c4eb8"/>
        <function-ref name="startAt" scoped="" ref="0x1b8c32d8"/>
        <function-ref name="isRunning" scoped="" ref="0x1b8c30d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x1b8c3818"/>
        <function-ref name="start" scoped="" ref="0x1b8c4a18"/>
        <function-ref name="stop" scoped="" ref="0x1b8c4cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x1aefbb98" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x1aefbb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x1aefbd70"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x1aefbe50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x1aee0010"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x1aee00f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x1aee01d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x1aee02b0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x1aee0390"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x1aee0470"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x1aee0550"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x1aee0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1aef5b48" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x1aef5b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x1aef4410"/>
        <function-ref name="test" scoped="" ref="0x1aef4010"/>
        <function-ref name="get" scoped="" ref="0x1aefa200"/>
        <function-ref name="captured" scoped="" ref="0x1aefa6a0"/>
        <function-ref name="reset" scoped="" ref="0x1aefa940"/>
        <function-ref name="isOn" scoped="" ref="0x1aef4210"/>
        <function-ref name="set" scoped="" ref="0x1aefa400"/>
        <function-ref name="start" scoped="" ref="0x1aefab40"/>
        <function-ref name="stop" scoped="" ref="0x1aefad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1aef49b8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x1aef49b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x1aef3cb0"/>
        <function-ref name="fired" scoped="" ref="0x1aef34b0"/>
        <function-ref name="get" scoped="" ref="0x1aef3010"/>
        <function-ref name="reset" scoped="" ref="0x1aef36b0"/>
        <function-ref name="isOn" scoped="" ref="0x1aef3eb0"/>
        <function-ref name="set" scoped="" ref="0x1aef3210"/>
        <function-ref name="start" scoped="" ref="0x1aef38b0"/>
        <function-ref name="stop" scoped="" ref="0x1aef3ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1aee4368" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1aee4368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x1aee3a68"/>
        <function-ref name="test" scoped="" ref="0x1aee3668"/>
        <function-ref name="get" scoped="" ref="0x1aee49b0"/>
        <function-ref name="setScale" scoped="" ref="0x1aee3c68"/>
        <function-ref name="getScale" scoped="" ref="0x1aee3f08"/>
        <function-ref name="reset" scoped="" ref="0x1aee3068"/>
        <function-ref name="overflow" scoped="" ref="0x1aee4e50"/>
        <function-ref name="isOn" scoped="" ref="0x1aee3868"/>
        <function-ref name="set" scoped="" ref="0x1aee4bb0"/>
        <function-ref name="start" scoped="" ref="0x1aee3268"/>
        <function-ref name="stop" scoped="" ref="0x1aee3468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x1af0b370" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x1af0b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x1af0b548"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x1af0b628"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x1af0b708"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x1af0b7e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x1af0b8c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x1af0b9a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x1af0ba88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x1af0bb68"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x1af0bc48"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x1af0bd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x1af01220" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x1af01220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x1af013f8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x1af014d8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x1af015b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x1af01698"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x1af01778"/>
        <function-ref name="setControl" scoped="" ref="0x1af01858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x1af08b30" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x1af08b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x1af07ea0"/>
        <function-ref name="fired" scoped="" ref="0x1af076a0"/>
        <function-ref name="get" scoped="" ref="0x1af07200"/>
        <function-ref name="reset" scoped="" ref="0x1af078a0"/>
        <function-ref name="isOn" scoped="" ref="0x1af050b8"/>
        <function-ref name="set" scoped="" ref="0x1af07400"/>
        <function-ref name="start" scoped="" ref="0x1af07aa0"/>
        <function-ref name="stop" scoped="" ref="0x1af07ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1af09010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x1af09010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x1af08810"/>
        <function-ref name="test" scoped="" ref="0x1af08410"/>
        <function-ref name="get" scoped="" ref="0x1af09658"/>
        <function-ref name="captured" scoped="" ref="0x1af09af8"/>
        <function-ref name="reset" scoped="" ref="0x1af09d98"/>
        <function-ref name="isOn" scoped="" ref="0x1af08610"/>
        <function-ref name="set" scoped="" ref="0x1af09858"/>
        <function-ref name="start" scoped="" ref="0x1af08010"/>
        <function-ref name="stop" scoped="" ref="0x1af08210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x1af05338" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x1af05338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x1af04648"/>
        <function-ref name="fired" scoped="" ref="0x1af05e20"/>
        <function-ref name="get" scoped="" ref="0x1af05980"/>
        <function-ref name="reset" scoped="" ref="0x1af04048"/>
        <function-ref name="isOn" scoped="" ref="0x1af04848"/>
        <function-ref name="set" scoped="" ref="0x1af05b80"/>
        <function-ref name="start" scoped="" ref="0x1af04248"/>
        <function-ref name="stop" scoped="" ref="0x1af04448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x1af04ac8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x1af04ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x1af03dc8"/>
        <function-ref name="fired" scoped="" ref="0x1af035c8"/>
        <function-ref name="get" scoped="" ref="0x1af03128"/>
        <function-ref name="reset" scoped="" ref="0x1af037c8"/>
        <function-ref name="isOn" scoped="" ref="0x1af01010"/>
        <function-ref name="set" scoped="" ref="0x1af03328"/>
        <function-ref name="start" scoped="" ref="0x1af039c8"/>
        <function-ref name="stop" scoped="" ref="0x1af03bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1af0d5d8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1af0d5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x1af0ccd8"/>
        <function-ref name="test" scoped="" ref="0x1af0c8d8"/>
        <function-ref name="get" scoped="" ref="0x1af0dc20"/>
        <function-ref name="setScale" scoped="" ref="0x1af0ced8"/>
        <function-ref name="getScale" scoped="" ref="0x1af0b190"/>
        <function-ref name="reset" scoped="" ref="0x1af0c2d8"/>
        <function-ref name="overflow" scoped="" ref="0x1af0c0d8"/>
        <function-ref name="isOn" scoped="" ref="0x1af0cad8"/>
        <function-ref name="set" scoped="" ref="0x1af0de20"/>
        <function-ref name="start" scoped="" ref="0x1af0c4d8"/>
        <function-ref name="stop" scoped="" ref="0x1af0c6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1afabf28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1afabf28"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x1a0100e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x1a0100e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1afaa110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1afaa320" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1afaa320"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x1afa8a48"/>
        <function-ref name="test" scoped="" ref="0x1afa8648"/>
        <function-ref name="get" scoped="" ref="0x1afaa968"/>
        <function-ref name="setScale" scoped="" ref="0x1afa8c48"/>
        <function-ref name="getScale" scoped="" ref="0x1afa8ee8"/>
        <function-ref name="reset" scoped="" ref="0x1afa8048"/>
        <function-ref name="overflow" scoped="" ref="0x1afaae08"/>
        <function-ref name="isOn" scoped="" ref="0x1afa8848"/>
        <function-ref name="set" scoped="" ref="0x1afaab68"/>
        <function-ref name="start" scoped="" ref="0x1afa8248"/>
        <function-ref name="stop" scoped="" ref="0x1afa8448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1b8f77f0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x1b8f77f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x1a011f28"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x1a011f28"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="TOne" ref="0x1a1e1ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1b8f6bf0"/>
        <function-ref name="fired" scoped="" ref="0x1b8f64b0"/>
        <function-ref name="startAt" scoped="" ref="0x1b8f68b0"/>
        <function-ref name="isRunning" scoped="" ref="0x1b8f66b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x1b8f6df0"/>
        <function-ref name="start" scoped="" ref="0x1b8f6010"/>
        <function-ref name="stop" scoped="" ref="0x1b8f62b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x1b8f4ef8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x1b8f4ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x1b8f1248"/>
        <function-ref name="fired" scoped="" ref="0x1b8f2a18"/>
        <function-ref name="get" scoped="" ref="0x1b8f2578"/>
        <function-ref name="reset" scoped="" ref="0x1b8f2c18"/>
        <function-ref name="isOn" scoped="" ref="0x1b8f1448"/>
        <function-ref name="set" scoped="" ref="0x1b8f2778"/>
        <function-ref name="start" scoped="" ref="0x1b8f2e18"/>
        <function-ref name="stop" scoped="" ref="0x1b8f1048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x1b8f5058" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x1b8f5058"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x1b8f4810"/>
        <function-ref name="test" scoped="" ref="0x1b8f4410"/>
        <function-ref name="get" scoped="" ref="0x1b8f56a0"/>
        <function-ref name="setScale" scoped="" ref="0x1b8f4a10"/>
        <function-ref name="getScale" scoped="" ref="0x1b8f4cb0"/>
        <function-ref name="reset" scoped="" ref="0x1b8f5d40"/>
        <function-ref name="overflow" scoped="" ref="0x1b8f5b40"/>
        <function-ref name="isOn" scoped="" ref="0x1b8f4610"/>
        <function-ref name="set" scoped="" ref="0x1b8f58a0"/>
        <function-ref name="start" scoped="" ref="0x1b8f4010"/>
        <function-ref name="stop" scoped="" ref="0x1b8f4210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1afcadb0" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1afcadb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="T32khz" ref="0x1a140cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1afc9518"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1afc9918"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1afc9718"/>
        <function-ref name="overflow" scoped="" ref="0x1afc9b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1afc4150" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1afc4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="TOne" ref="0x1a1e1ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1afc48a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1afc4ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1afc4aa0"/>
        <function-ref name="overflow" scoped="" ref="0x1afc4ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1afc2e88" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1afc2e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="TOne" ref="0x1a1e1ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1afc1600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1afc1a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1afc1800"/>
        <function-ref name="overflow" scoped="" ref="0x1afc1c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1afc1e68" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1afc1e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x1afef610"/>
        <function-ref name="test" scoped="" ref="0x1afef210"/>
        <function-ref name="get" scoped="" ref="0x1aff04d8"/>
        <function-ref name="setScale" scoped="" ref="0x1afef810"/>
        <function-ref name="getScale" scoped="" ref="0x1afefab0"/>
        <function-ref name="reset" scoped="" ref="0x1aff0b78"/>
        <function-ref name="overflow" scoped="" ref="0x1aff0978"/>
        <function-ref name="isOn" scoped="" ref="0x1afef410"/>
        <function-ref name="set" scoped="" ref="0x1aff06d8"/>
        <function-ref name="start" scoped="" ref="0x1aff0d78"/>
        <function-ref name="stop" scoped="" ref="0x1afef010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x1afec620" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x1afec620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="T32khz" ref="0x1a140cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1afecd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1b00f210"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1b00f010"/>
        <function-ref name="overflow" scoped="" ref="0x1b00f410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1afed5c0" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1afed5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="T32khz" ref="0x1a140cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1afedd10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1afec128"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1afedf10"/>
        <function-ref name="overflow" scoped="" ref="0x1afec328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1b8c29f8" loc="50:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x1b8c29f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="T32khz" ref="0x1a140cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1b8c1de0"/>
        <function-ref name="fired" scoped="" ref="0x1b8c16a0"/>
        <function-ref name="startAt" scoped="" ref="0x1b8c1aa0"/>
        <function-ref name="isRunning" scoped="" ref="0x1b8c18a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x1b8fd010"/>
        <function-ref name="start" scoped="" ref="0x1b8c1200"/>
        <function-ref name="stop" scoped="" ref="0x1b8c14a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x1b8fc340" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x1b8fc340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="TOne" ref="0x1a1e1ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1b8fb750"/>
        <function-ref name="fired" scoped="" ref="0x1b8fb010"/>
        <function-ref name="startAt" scoped="" ref="0x1b8fb410"/>
        <function-ref name="isRunning" scoped="" ref="0x1b8fb210"/>
        <function-ref name="getAlarm" scoped="" ref="0x1b8fb950"/>
        <function-ref name="start" scoped="" ref="0x1b8fca90"/>
        <function-ref name="stop" scoped="" ref="0x1b8fcd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1b8fd2e8" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1b8fd2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="T32khz" ref="0x1a140cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1b8fda38"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1b8fde38"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1b8fdc38"/>
        <function-ref name="overflow" scoped="" ref="0x1b8fc048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b04f280" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b04f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b04f458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x1b04a268" loc="68:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x1b04a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b04a440"/>
        <function-ref name="isInput" scoped="" ref="0x1b04a520"/>
        <function-ref name="toggle" scoped="" ref="0x1b04a600"/>
        <function-ref name="isOutput" scoped="" ref="0x1b04a6e0"/>
        <function-ref name="get" scoped="" ref="0x1b04a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b04a8a0"/>
        <function-ref name="set" scoped="" ref="0x1b04a980"/>
        <function-ref name="clr" scoped="" ref="0x1b04aa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x1b04abd8" loc="69:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x1b04abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b04adb0"/>
        <function-ref name="isInput" scoped="" ref="0x1b04ae90"/>
        <function-ref name="toggle" scoped="" ref="0x1b049010"/>
        <function-ref name="isOutput" scoped="" ref="0x1b0490f0"/>
        <function-ref name="get" scoped="" ref="0x1b0491d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b0492b0"/>
        <function-ref name="set" scoped="" ref="0x1b049390"/>
        <function-ref name="clr" scoped="" ref="0x1b049470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x1b0495e8" loc="70:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x1b0495e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b0497c0"/>
        <function-ref name="isInput" scoped="" ref="0x1b0498a0"/>
        <function-ref name="toggle" scoped="" ref="0x1b049980"/>
        <function-ref name="isOutput" scoped="" ref="0x1b049a60"/>
        <function-ref name="get" scoped="" ref="0x1b049b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b049c20"/>
        <function-ref name="set" scoped="" ref="0x1b049d00"/>
        <function-ref name="clr" scoped="" ref="0x1b049de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x1b04b858" loc="67:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x1b04b858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b04ba30"/>
        <function-ref name="isInput" scoped="" ref="0x1b04bb10"/>
        <function-ref name="toggle" scoped="" ref="0x1b04bbf0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b04bcd0"/>
        <function-ref name="get" scoped="" ref="0x1b04bdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b04be90"/>
        <function-ref name="set" scoped="" ref="0x1b04a010"/>
        <function-ref name="clr" scoped="" ref="0x1b04a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x1b048980" loc="72:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x1b048980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b048b58"/>
        <function-ref name="isInput" scoped="" ref="0x1b048c38"/>
        <function-ref name="toggle" scoped="" ref="0x1b048d18"/>
        <function-ref name="isOutput" scoped="" ref="0x1b048df8"/>
        <function-ref name="get" scoped="" ref="0x1b048ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b047010"/>
        <function-ref name="set" scoped="" ref="0x1b0470f0"/>
        <function-ref name="clr" scoped="" ref="0x1b0471d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x1aec1ea0" loc="66:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x1aec1ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b04b0c0"/>
        <function-ref name="isInput" scoped="" ref="0x1b04b1a0"/>
        <function-ref name="toggle" scoped="" ref="0x1b04b280"/>
        <function-ref name="isOutput" scoped="" ref="0x1b04b360"/>
        <function-ref name="get" scoped="" ref="0x1b04b440"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b04b520"/>
        <function-ref name="set" scoped="" ref="0x1b04b600"/>
        <function-ref name="clr" scoped="" ref="0x1b04b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x1b048010" loc="71:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x1b048010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b0481e8"/>
        <function-ref name="isInput" scoped="" ref="0x1b0482c8"/>
        <function-ref name="toggle" scoped="" ref="0x1b0483a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1b048488"/>
        <function-ref name="get" scoped="" ref="0x1b048568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b048648"/>
        <function-ref name="set" scoped="" ref="0x1b048728"/>
        <function-ref name="clr" scoped="" ref="0x1b048808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x1b06fed0" loc="39:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x1b06fed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x1b0710c0"/>
        <function-ref name="disable" scoped="" ref="0x1b0711a0"/>
        <function-ref name="captured" scoped="" ref="0x1b071280"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x1b071360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x1b071500" loc="40:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x1b071500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1b0716d8"/>
        <function-ref name="disable" scoped="" ref="0x1b0717b8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1b071898"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1b071978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x1b071b18" loc="41:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x1b071b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1b071cf0"/>
        <function-ref name="disable" scoped="" ref="0x1b071dd0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1b071eb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1b070010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1b06c690" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x1b06c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x1b06c868"/>
        <function-ref name="disable" scoped="" ref="0x1b06c948"/>
        <function-ref name="captured" scoped="" ref="0x1b06ca28"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x1b06cb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x1b06cd18" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x1b06cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x1b0624d8"/>
        <function-ref name="test" scoped="" ref="0x1b0620d8"/>
        <function-ref name="get" scoped="" ref="0x1b06b370"/>
        <function-ref name="captured" scoped="" ref="0x1b06b810"/>
        <function-ref name="reset" scoped="" ref="0x1b06bab0"/>
        <function-ref name="isOn" scoped="" ref="0x1b0622d8"/>
        <function-ref name="set" scoped="" ref="0x1b06b570"/>
        <function-ref name="start" scoped="" ref="0x1b06bcb0"/>
        <function-ref name="stop" scoped="" ref="0x1b06beb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x1b061cb0" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x1b061cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1b061e88"/>
        <function-ref name="fired" scoped="" ref="0x1b060010"/>
        <function-ref name="disable" scoped="" ref="0x1b0600f0"/>
        <function-ref name="edge" scoped="" ref="0x1b0601d0"/>
        <function-ref name="enable" scoped="" ref="0x1b0602b0"/>
        <function-ref name="getValue" scoped="" ref="0x1b060390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x1b0616b8" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x1b0616b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1b061890"/>
        <function-ref name="disable" scoped="" ref="0x1b061970"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1b061a50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1b061b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATimer" ref="0x1b08c300" loc="71:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATimer" scoped="" ref="0x1b08c300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1b08ac28"/>
        <function-ref name="fired" scoped="" ref="0x1b08a048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1b08a5e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x1b08a408"/>
        <function-ref name="getdt" scoped="" ref="0x1b089010"/>
        <function-ref name="gett0" scoped="" ref="0x1b08ae08"/>
        <function-ref name="isRunning" scoped="" ref="0x1b08a228"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1b08c928"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1b08a908"/>
        <function-ref name="startOneShot" scoped="" ref="0x1b08cba8"/>
        <function-ref name="stop" scoped="" ref="0x1b08ce28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x1b085d70" loc="113:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x1b085d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1b084010"/>
        <function-ref name="runTask" scoped="" ref="0x1b0840f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x1b08d870" loc="70:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x1b08d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b08da48"/>
        <function-ref name="isInput" scoped="" ref="0x1b08db28"/>
        <function-ref name="toggle" scoped="" ref="0x1b08dc08"/>
        <function-ref name="isOutput" scoped="" ref="0x1b08dce8"/>
        <function-ref name="get" scoped="" ref="0x1b08ddc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b08dea8"/>
        <function-ref name="set" scoped="" ref="0x1b08c010"/>
        <function-ref name="clr" scoped="" ref="0x1b08c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x1b08d240" loc="67:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x1b08d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1b08d418"/>
        <function-ref name="disable" scoped="" ref="0x1b08d4f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1b08d5d8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1b08d6b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x1b089d70" loc="87:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x1b089d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1b088010"/>
        <function-ref name="runTask" scoped="" ref="0x1b0880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1b08ea78" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplCC2420InterruptsC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1b08ea78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1b0af388"/>
        <function-ref name="fired" scoped="" ref="0x1b0b0798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1b0b0d38"/>
        <function-ref name="isOneShot" scoped="" ref="0x1b0b0b58"/>
        <function-ref name="getdt" scoped="" ref="0x1b0af748"/>
        <function-ref name="gett0" scoped="" ref="0x1b0af568"/>
        <function-ref name="isRunning" scoped="" ref="0x1b0b0978"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1b0b00b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1b0af068"/>
        <function-ref name="startOneShot" scoped="" ref="0x1b0b0338"/>
        <function-ref name="stop" scoped="" ref="0x1b0b05b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x1b22c9a8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x1b22c9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b22cb80"/>
        <function-ref name="write" scoped="" ref="0x1b22cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x1b22e260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x1b22e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b22e438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x1b22b270" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x1b22b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b22b448"/>
        <function-ref name="write" scoped="" ref="0x1b22b528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1b22a368" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1b22a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b22a540"/>
        <function-ref name="write" scoped="" ref="0x1b22a620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x1b22c0b8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x1b22c0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b22c290"/>
        <function-ref name="write" scoped="" ref="0x1b22c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x1b22f190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x1b22f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b22f368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x1b22e910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x1b22e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b22eae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x1b22cde0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x1b22cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b22b010"/>
        <function-ref name="write" scoped="" ref="0x1b22b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x1b22e5b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x1b22e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b22e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x1b22bf18" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x1b22bf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b22a108"/>
        <function-ref name="write" scoped="" ref="0x1b22a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x1b22f4e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x1b22f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b22f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x1b22a7a0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x1b22a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1b22a978"/>
        <function-ref name="writeDone" scoped="" ref="0x1b22aa58"/>
        <function-ref name="write" scoped="" ref="0x1b22ab38"/>
        <function-ref name="beginRead" scoped="" ref="0x1b22ac18"/>
        <function-ref name="readDone" scoped="" ref="0x1b22acf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x1b22c4f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x1b22c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b22c748"/>
        <function-ref name="write" scoped="" ref="0x1b22c828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x1b22ec68" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x1b22ec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b22ee40"/>
        <function-ref name="write" scoped="" ref="0x1b22ef20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x1b22f840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x1b22f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b22fa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1b2306e8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1b2306e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b2308c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b2309a0"/>
        <function-ref name="request" scoped="" ref="0x1b230a80"/>
        <function-ref name="granted" scoped="" ref="0x1b230b60"/>
        <function-ref name="isOwner" scoped="" ref="0x1b230c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1b22bae0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x1b22bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b22bcb8"/>
        <function-ref name="write" scoped="" ref="0x1b22bd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x1b22b6a8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x1b22b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b22b880"/>
        <function-ref name="write" scoped="" ref="0x1b22b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x1b230dc0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x1b230dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b22f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x1b22fef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x1b22fef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b22e0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x1b22fb98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x1b22fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b22fd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1b22ae78" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x1b22ae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1b229070"/>
        <function-ref name="writeDone" scoped="" ref="0x1b229150"/>
        <function-ref name="write" scoped="" ref="0x1b229230"/>
        <function-ref name="beginRead" scoped="" ref="0x1b229310"/>
        <function-ref name="readDone" scoped="" ref="0x1b2293f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x1b0cbc50" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x1b0cbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1b0cbe28"/>
        <function-ref name="writeDone" scoped="" ref="0x1b0cbf08"/>
        <function-ref name="write" scoped="" ref="0x1b0ca010"/>
        <function-ref name="beginRead" scoped="" ref="0x1b0ca0f0"/>
        <function-ref name="readDone" scoped="" ref="0x1b0ca1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x1b0ca600" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x1b0ca600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b0ca7d8"/>
        <function-ref name="write" scoped="" ref="0x1b0ca8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x1b0cace0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x1b0cace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b0caeb8"/>
        <function-ref name="write" scoped="" ref="0x1b0c8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1b0cb2d0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1b0cb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b0cb4a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b0cb588"/>
        <function-ref name="request" scoped="" ref="0x1b0cb668"/>
        <function-ref name="granted" scoped="" ref="0x1b0cb748"/>
        <function-ref name="isOwner" scoped="" ref="0x1b0cb828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x1b0c8438" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x1b0c8438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b0c8610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x1b0ecc08" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x1b0ecc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b0ecde0"/>
        <function-ref name="sendDone" scoped="" ref="0x1b0ecec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x1b0c3158" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x1b0c3158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1b0c3330"/>
        <function-ref name="writeDone" scoped="" ref="0x1b0c3410"/>
        <function-ref name="write" scoped="" ref="0x1b0c34f0"/>
        <function-ref name="beginRead" scoped="" ref="0x1b0c35d0"/>
        <function-ref name="readDone" scoped="" ref="0x1b0c36b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x1b0ef438" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x1b0ef438"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1b0ef610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x1b0c2c40" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x1b0c2c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b0c2e18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b0c2ef8"/>
        <function-ref name="request" scoped="" ref="0x1b0c0010"/>
        <function-ref name="granted" scoped="" ref="0x1b0c00f0"/>
        <function-ref name="isOwner" scoped="" ref="0x1b0c01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x1b0c3ae0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x1b0c3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b0c3cb8"/>
        <function-ref name="write" scoped="" ref="0x1b0c3d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x1b0c21e8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x1b0c21e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b0c23c0"/>
        <function-ref name="write" scoped="" ref="0x1b0c24a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1b0f0040" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x1b0f0040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1b0f0218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1b0f02f8"/>
        <function-ref name="led1On" scoped="" ref="0x1b0f03d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1b0f04b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1b0f0598"/>
        <function-ref name="get" scoped="" ref="0x1b0f0678"/>
        <function-ref name="led1Off" scoped="" ref="0x1b0f0758"/>
        <function-ref name="led2Off" scoped="" ref="0x1b0f0ad8"/>
        <function-ref name="set" scoped="" ref="0x1b0f0838"/>
        <function-ref name="led0On" scoped="" ref="0x1b0f0918"/>
        <function-ref name="led2On" scoped="" ref="0x1b0f09f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1b0c47b0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1b0c47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b0c4988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b0c4a68"/>
        <function-ref name="request" scoped="" ref="0x1b0c4b48"/>
        <function-ref name="granted" scoped="" ref="0x1b0c4c28"/>
        <function-ref name="isOwner" scoped="" ref="0x1b0c4d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x1b0c28c8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x1b0c28c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b0c2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1b12ea80" loc="43:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x1b12ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b12ec58"/>
        <function-ref name="sendDone" scoped="" ref="0x1b12ed38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1b12e748" loc="42:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x1b12e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1b12e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b12fd28" loc="39:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b12fd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b12ff00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1b12e090" loc="40:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1b12e090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b12e268"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b12e348"/>
        <function-ref name="request" scoped="" ref="0x1b12e428"/>
        <function-ref name="granted" scoped="" ref="0x1b12e508"/>
        <function-ref name="isOwner" scoped="" ref="0x1b12e5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1b1284c0" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x1b1284c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b128698"/>
        <function-ref name="sendDone" scoped="" ref="0x1b128778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1b128178" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x1b128178"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1b128350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b12cdd0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b12cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b128010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1b128b78" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1b128b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b128d50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b128e30"/>
        <function-ref name="request" scoped="" ref="0x1b128f10"/>
        <function-ref name="granted" scoped="" ref="0x1b127010"/>
        <function-ref name="isOwner" scoped="" ref="0x1b1270f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1b1239d8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x1b1239d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b123bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x1b123c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x1b151500" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x1b151500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b1516d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b1517b8"/>
        <function-ref name="request" scoped="" ref="0x1b151898"/>
        <function-ref name="granted" scoped="" ref="0x1b151978"/>
        <function-ref name="isOwner" scoped="" ref="0x1b151a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1b1236b0" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x1b1236b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1b123888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b123390" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b123390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b123568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x1b144998" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x1b144998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x1b144b70"/>
        <function-ref name="sleep" scoped="" ref="0x1b151010"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x1b144d30"/>
        <function-ref name="dataReady" scoped="" ref="0x1b1510f0"/>
        <function-ref name="initMaster" scoped="" ref="0x1b144ef0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x1b152010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x1b1520f0"/>
        <function-ref name="read" scoped="" ref="0x1b1521d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x1b1522b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x1b152390"/>
        <function-ref name="setClock" scoped="" ref="0x1b152470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1b152550"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x1b152630"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x1b152790"/>
        <function-ref name="setDataOrder" scoped="" ref="0x1b152870"/>
        <function-ref name="write" scoped="" ref="0x1b152950"/>
        <function-ref name="enableSpi" scoped="" ref="0x1b152a30"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x1b152b10"/>
        <function-ref name="getClockPhase" scoped="" ref="0x1b152bf0"/>
        <function-ref name="getClock" scoped="" ref="0x1b152cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x1b152db0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x1b144c50"/>
        <function-ref name="setClockPhase" scoped="" ref="0x1b144e10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x1b152e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1b121100" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1b121100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b1212d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b1213b8"/>
        <function-ref name="request" scoped="" ref="0x1b121498"/>
        <function-ref name="granted" scoped="" ref="0x1b121578"/>
        <function-ref name="isOwner" scoped="" ref="0x1b121658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x1b143010" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x1b143010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x1b1431e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x1b151ba8" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x1b151ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1b151d80"/>
        <function-ref name="userId" scoped="" ref="0x1b151e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x1b18a0f0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x1b18a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x1b18a2c8"/>
        <function-ref name="sleep" scoped="" ref="0x1b189710"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x1b18a488"/>
        <function-ref name="dataReady" scoped="" ref="0x1b1897f0"/>
        <function-ref name="initMaster" scoped="" ref="0x1b18a648"/>
        <function-ref name="setMasterBit" scoped="" ref="0x1b18a728"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x1b18a808"/>
        <function-ref name="read" scoped="" ref="0x1b18a8e8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x1b18a9c8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x1b18aaa8"/>
        <function-ref name="setClock" scoped="" ref="0x1b18ab88"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1b18ac68"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x1b18ad48"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x1b18aea8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x1b189010"/>
        <function-ref name="write" scoped="" ref="0x1b1890f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x1b1891d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x1b1892b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x1b189390"/>
        <function-ref name="getClock" scoped="" ref="0x1b189470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x1b189550"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x1b18a3a8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x1b18a568"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x1b189630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x1b181808" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x1b181808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b1819e0"/>
        <function-ref name="isInput" scoped="" ref="0x1b181ac0"/>
        <function-ref name="toggle" scoped="" ref="0x1b181ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b181c80"/>
        <function-ref name="get" scoped="" ref="0x1b181d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b181e40"/>
        <function-ref name="set" scoped="" ref="0x1b181f20"/>
        <function-ref name="clr" scoped="" ref="0x1b180018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x1b182508" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x1b182508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b1826e0"/>
        <function-ref name="isInput" scoped="" ref="0x1b1827c0"/>
        <function-ref name="toggle" scoped="" ref="0x1b1828a0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b182980"/>
        <function-ref name="get" scoped="" ref="0x1b182a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b182b40"/>
        <function-ref name="set" scoped="" ref="0x1b182c20"/>
        <function-ref name="clr" scoped="" ref="0x1b182d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x1b183b20" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x1b183b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b183cf8"/>
        <function-ref name="isInput" scoped="" ref="0x1b183dd8"/>
        <function-ref name="toggle" scoped="" ref="0x1b183eb8"/>
        <function-ref name="isOutput" scoped="" ref="0x1b182010"/>
        <function-ref name="get" scoped="" ref="0x1b1820f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b1821d0"/>
        <function-ref name="set" scoped="" ref="0x1b1822b0"/>
        <function-ref name="clr" scoped="" ref="0x1b182390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x1b1836c0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x1b1836c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b183898"/>
        <function-ref name="stop" scoped="" ref="0x1b183978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x1b180190" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x1b180190"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x1b180368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x1b185db8" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x1b185db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x1b184010"/>
        <function-ref name="sleep" scoped="" ref="0x1b183470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x1b1841d0"/>
        <function-ref name="dataReady" scoped="" ref="0x1b183550"/>
        <function-ref name="initMaster" scoped="" ref="0x1b184390"/>
        <function-ref name="setMasterBit" scoped="" ref="0x1b184470"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x1b184550"/>
        <function-ref name="read" scoped="" ref="0x1b184630"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x1b184710"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x1b1847f0"/>
        <function-ref name="setClock" scoped="" ref="0x1b1848d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1b1849b0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x1b184a90"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x1b184bf0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x1b184cd0"/>
        <function-ref name="write" scoped="" ref="0x1b184db0"/>
        <function-ref name="enableSpi" scoped="" ref="0x1b184e90"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x1b183010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x1b1830f0"/>
        <function-ref name="getClock" scoped="" ref="0x1b1831d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x1b1832b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x1b1840f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x1b1842b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x1b183390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x1b182e78" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x1b182e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b181070"/>
        <function-ref name="isInput" scoped="" ref="0x1b181150"/>
        <function-ref name="toggle" scoped="" ref="0x1b181230"/>
        <function-ref name="isOutput" scoped="" ref="0x1b181310"/>
        <function-ref name="get" scoped="" ref="0x1b1813f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b1814d0"/>
        <function-ref name="set" scoped="" ref="0x1b1815b0"/>
        <function-ref name="clr" scoped="" ref="0x1b181690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1b1c0750" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x1b1c0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1b1c0938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1b1c0a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1b204030" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1b204030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1b204218"/>
        <function-ref name="configure" scoped="" ref="0x1b2042f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1b1c0010" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1b1c0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b1c01f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b1c02d8"/>
        <function-ref name="request" scoped="" ref="0x1b1c03b8"/>
        <function-ref name="granted" scoped="" ref="0x1b1c0498"/>
        <function-ref name="isOwner" scoped="" ref="0x1b1c0578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1b1c0b58" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x1b1c0b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1b1c0d30"/>
        <function-ref name="userId" scoped="" ref="0x1b1c0e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b93f200" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b93f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b93f3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x1b93f538" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x1b93f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1b93f710"/>
        <function-ref name="isEmpty" scoped="" ref="0x1b93f7f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1b93f8d0"/>
        <function-ref name="dequeue" scoped="" ref="0x1b93f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1b93dcb8" loc="54:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x1b93dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1b93dea0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1b93c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1b93c610" loc="58:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x1b93c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1b93c7f8"/>
        <function-ref name="configure" scoped="" ref="0x1b93c8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x1b93ca38" loc="59:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x1b93ca38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1b93cc10"/>
        <function-ref name="isEmpty" scoped="" ref="0x1b93ccf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1b93cdd0"/>
        <function-ref name="dequeue" scoped="" ref="0x1b93ceb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1b93d578" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1b93d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b93d760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b93d840"/>
        <function-ref name="request" scoped="" ref="0x1b93d920"/>
        <function-ref name="granted" scoped="" ref="0x1b93da00"/>
        <function-ref name="isOwner" scoped="" ref="0x1b93dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1b93c150" loc="55:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x1b93c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1b93c328"/>
        <function-ref name="userId" scoped="" ref="0x1b93c408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x1b93b050" loc="71:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x1b93b050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1b93b228"/>
        <function-ref name="runTask" scoped="" ref="0x1b93b308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x1b2220b0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x1b2220b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b222288"/>
        <function-ref name="write" scoped="" ref="0x1b222368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x1b224880" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x1b224880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b224a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x1b222920" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x1b222920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b222af8"/>
        <function-ref name="write" scoped="" ref="0x1b222bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1b221ae0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1b221ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b221cb8"/>
        <function-ref name="write" scoped="" ref="0x1b221d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x1b2237a0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x1b2237a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b223978"/>
        <function-ref name="write" scoped="" ref="0x1b223a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x1b226788" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x1b226788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b226960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x1b223010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x1b223010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b2231e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x1b2224e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x1b2224e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b2226c0"/>
        <function-ref name="write" scoped="" ref="0x1b2227a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x1b224bd8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x1b224bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b224db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x1b2216a8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x1b2216a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b221880"/>
        <function-ref name="write" scoped="" ref="0x1b221960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x1b226ae0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x1b226ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b226cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x1b221f18" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x1b221f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1b220108"/>
        <function-ref name="writeDone" scoped="" ref="0x1b2201e8"/>
        <function-ref name="write" scoped="" ref="0x1b2202c8"/>
        <function-ref name="beginRead" scoped="" ref="0x1b2203a8"/>
        <function-ref name="readDone" scoped="" ref="0x1b220488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x1b223bd8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x1b223bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b223e30"/>
        <function-ref name="write" scoped="" ref="0x1b223f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x1b223368" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x1b223368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b223540"/>
        <function-ref name="write" scoped="" ref="0x1b223620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x1b226e38" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x1b226e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b224050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1b227d28" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1b227d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b227f00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b226010"/>
        <function-ref name="request" scoped="" ref="0x1b2260f0"/>
        <function-ref name="granted" scoped="" ref="0x1b2261d0"/>
        <function-ref name="isOwner" scoped="" ref="0x1b2262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1b221270" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x1b221270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b221448"/>
        <function-ref name="write" scoped="" ref="0x1b221528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x1b222d58" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x1b222d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b221010"/>
        <function-ref name="write" scoped="" ref="0x1b2210f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x1b226430" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x1b226430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b226608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x1b224528" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x1b224528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b224700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x1b2241d0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x1b2241d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b2243a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1b220608" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x1b220608"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1b2207e0"/>
        <function-ref name="writeDone" scoped="" ref="0x1b2208c0"/>
        <function-ref name="write" scoped="" ref="0x1b2209a0"/>
        <function-ref name="beginRead" scoped="" ref="0x1b220a80"/>
        <function-ref name="readDone" scoped="" ref="0x1b220b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x1b249488" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x1b249488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b249660"/>
        <function-ref name="cancel" scoped="" ref="0x1b249740"/>
        <function-ref name="modify" scoped="" ref="0x1b249820"/>
        <function-ref name="sendDone" scoped="" ref="0x1b249900"/>
        <function-ref name="resendCCA" scoped="" ref="0x1b2499e0"/>
        <function-ref name="resend" scoped="" ref="0x1b249ac0"/>
        <function-ref name="sendCCA" scoped="" ref="0x1b249ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b24dcf0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b24dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b24dec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x1b249060" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x1b249060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b249238"/>
        <function-ref name="stop" scoped="" ref="0x1b249318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x1b249d10" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x1b249d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x1b249ee8"/>
        <function-ref name="initial" scoped="" ref="0x1b248010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x1b244bf8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x1b244bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x1b244dd0"/>
        <function-ref name="receivedSFD" scoped="" ref="0x1b244eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x1b26d1f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x1b26d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b26d3c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x1b271010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x1b271010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x1b2711e8"/>
        <function-ref name="disable" scoped="" ref="0x1b2712c8"/>
        <function-ref name="captured" scoped="" ref="0x1b2713a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x1b271488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x1b240860" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x1b240860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140b70"/>
            <typename><typedef-ref name="T32khz" ref="0x1a140cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1b273bf0"/>
        <function-ref name="fired" scoped="" ref="0x1b2734b0"/>
        <function-ref name="startAt" scoped="" ref="0x1b2738b0"/>
        <function-ref name="isRunning" scoped="" ref="0x1b2736b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x1b273df0"/>
        <function-ref name="start" scoped="" ref="0x1b273010"/>
        <function-ref name="stop" scoped="" ref="0x1b2732b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x1b26e1b0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1b26e1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b26e408"/>
        <function-ref name="write" scoped="" ref="0x1b26e4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1b2415d0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x1b2415d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b2417a8"/>
        <function-ref name="cancel" scoped="" ref="0x1b241888"/>
        <function-ref name="modify" scoped="" ref="0x1b241968"/>
        <function-ref name="sendDone" scoped="" ref="0x1b241a48"/>
        <function-ref name="resendCCA" scoped="" ref="0x1b241b28"/>
        <function-ref name="resend" scoped="" ref="0x1b241c08"/>
        <function-ref name="sendCCA" scoped="" ref="0x1b241ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x1b26e680" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x1b26e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b26e858"/>
        <function-ref name="write" scoped="" ref="0x1b26e938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x1b26d568" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x1b26d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b26d740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x1b270010" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x1b270010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b2701e8"/>
        <function-ref name="isInput" scoped="" ref="0x1b2702c8"/>
        <function-ref name="toggle" scoped="" ref="0x1b2703a8"/>
        <function-ref name="isOutput" scoped="" ref="0x1b270488"/>
        <function-ref name="get" scoped="" ref="0x1b270568"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b270648"/>
        <function-ref name="set" scoped="" ref="0x1b270728"/>
        <function-ref name="clr" scoped="" ref="0x1b270808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x1b2685b8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x1b2685b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1b268790"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x1b268870"/>
        <function-ref name="sfd" scoped="" ref="0x1b268950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b246d98" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b246d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b241010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x1b26f370" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x1b26f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b26f548"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b26f628"/>
        <function-ref name="request" scoped="" ref="0x1b26f708"/>
        <function-ref name="granted" scoped="" ref="0x1b26f7e8"/>
        <function-ref name="isOwner" scoped="" ref="0x1b26f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x1b271620" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x1b271620"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b2717f8"/>
        <function-ref name="isInput" scoped="" ref="0x1b2718d8"/>
        <function-ref name="toggle" scoped="" ref="0x1b2719b8"/>
        <function-ref name="isOutput" scoped="" ref="0x1b271a98"/>
        <function-ref name="get" scoped="" ref="0x1b271b78"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b271c58"/>
        <function-ref name="set" scoped="" ref="0x1b271d38"/>
        <function-ref name="clr" scoped="" ref="0x1b271e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x1b26ead0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x1b26ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b26eca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x1b2709a0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x1b2709a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b270b78"/>
        <function-ref name="isInput" scoped="" ref="0x1b270c58"/>
        <function-ref name="toggle" scoped="" ref="0x1b270d38"/>
        <function-ref name="isOutput" scoped="" ref="0x1b270e18"/>
        <function-ref name="get" scoped="" ref="0x1b270ef8"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b26f010"/>
        <function-ref name="set" scoped="" ref="0x1b26f0f0"/>
        <function-ref name="clr" scoped="" ref="0x1b26f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1b268ab8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x1b268ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1b268c90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1b268d70"/>
        <function-ref name="led1On" scoped="" ref="0x1b268e50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1b26b010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1b26b0f0"/>
        <function-ref name="get" scoped="" ref="0x1b26b1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x1b26b2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x1b26b630"/>
        <function-ref name="set" scoped="" ref="0x1b26b390"/>
        <function-ref name="led0On" scoped="" ref="0x1b26b470"/>
        <function-ref name="led2On" scoped="" ref="0x1b26b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x1b241180" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x1b241180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b241358"/>
        <function-ref name="stop" scoped="" ref="0x1b241438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x1b241e58" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x1b241e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x1b240050"/>
        <function-ref name="initial" scoped="" ref="0x1b240130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x1b2402d8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x1b2402d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x1b2404b0"/>
        <function-ref name="receivedSFD" scoped="" ref="0x1b240590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x1b26fa60" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x1b26fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1b26fc38"/>
        <function-ref name="writeDone" scoped="" ref="0x1b26fd18"/>
        <function-ref name="write" scoped="" ref="0x1b26fdf8"/>
        <function-ref name="beginRead" scoped="" ref="0x1b26fed8"/>
        <function-ref name="readDone" scoped="" ref="0x1b26e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x1b26ee40" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x1b26ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b26d050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x1b2cd900" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x1b2cd900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b2cdad8"/>
        <function-ref name="write" scoped="" ref="0x1b2cdbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x1b2cf190" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x1b2cf190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b2cf368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x1b2cc190" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x1b2cc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b2cc368"/>
        <function-ref name="write" scoped="" ref="0x1b2cc448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1b2cb2b0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1b2cb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b2cb488"/>
        <function-ref name="write" scoped="" ref="0x1b2cb568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x1b2cd010" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x1b2cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b2cd1e8"/>
        <function-ref name="write" scoped="" ref="0x1b2cd2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x1b2d00b0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x1b2d00b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b2d0288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x1b2cf840" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x1b2cf840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b2cfa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x1b2cdd38" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x1b2cdd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b2cdf10"/>
        <function-ref name="write" scoped="" ref="0x1b2cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x1b2cf4e8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x1b2cf4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b2cf6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x1b2cce38" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x1b2cce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b2cb050"/>
        <function-ref name="write" scoped="" ref="0x1b2cb130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x1b2d0408" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x1b2d0408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b2d05e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x1b2cb6e8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x1b2cb6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1b2cb8c0"/>
        <function-ref name="writeDone" scoped="" ref="0x1b2cb9a0"/>
        <function-ref name="write" scoped="" ref="0x1b2cba80"/>
        <function-ref name="beginRead" scoped="" ref="0x1b2cbb60"/>
        <function-ref name="readDone" scoped="" ref="0x1b2cbc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x1b2cd448" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x1b2cd448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b2cd6a0"/>
        <function-ref name="write" scoped="" ref="0x1b2cd780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x1b2cfb98" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x1b2cfb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b2cfd70"/>
        <function-ref name="write" scoped="" ref="0x1b2cfe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x1b2d0760" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x1b2d0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b2d0938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1b2d1650" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1b2d1650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b2d1828"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b2d1908"/>
        <function-ref name="request" scoped="" ref="0x1b2d19e8"/>
        <function-ref name="granted" scoped="" ref="0x1b2d1ac8"/>
        <function-ref name="isOwner" scoped="" ref="0x1b2d1ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1b2cca00" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x1b2cca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b2ccbd8"/>
        <function-ref name="write" scoped="" ref="0x1b2cccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x1b2cc5c8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x1b2cc5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b2cc7a0"/>
        <function-ref name="write" scoped="" ref="0x1b2cc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x1b2d1d28" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x1b2d1d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b2d1f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x1b2d0e10" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x1b2d0e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b2cf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x1b2d0ab8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x1b2d0ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b2d0c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1b2cbdc0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x1b2cbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1b2ca010"/>
        <function-ref name="writeDone" scoped="" ref="0x1b2ca0f0"/>
        <function-ref name="write" scoped="" ref="0x1b2ca1d0"/>
        <function-ref name="beginRead" scoped="" ref="0x1b2ca2b0"/>
        <function-ref name="readDone" scoped="" ref="0x1b2ca390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x1b2c4780" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x1b2c4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1b2c4958"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x1b2c4a38"/>
        <function-ref name="sfd" scoped="" ref="0x1b2c4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b2c4010" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b2c4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b2c41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1b2c4c80" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x1b2c4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x1b2c4e58"/>
        <function-ref name="receive" scoped="" ref="0x1b2c3010"/>
        <function-ref name="getPayload" scoped="" ref="0x1b2c30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x1b2c4358" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x1b2c4358"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b2c4530"/>
        <function-ref name="stop" scoped="" ref="0x1b2c4610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x1b2f3c18" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x1b2f3c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b2f3df0"/>
        <function-ref name="isInput" scoped="" ref="0x1b2f3ed0"/>
        <function-ref name="toggle" scoped="" ref="0x1b2f2010"/>
        <function-ref name="isOutput" scoped="" ref="0x1b2f20f0"/>
        <function-ref name="get" scoped="" ref="0x1b2f21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b2f22b0"/>
        <function-ref name="set" scoped="" ref="0x1b2f2390"/>
        <function-ref name="clr" scoped="" ref="0x1b2f2470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x1b2eb178" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x1b2eb178"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1b2eb350"/>
        <function-ref name="runTask" scoped="" ref="0x1b2eb430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x1b2f2608" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x1b2f2608"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b2f27e0"/>
        <function-ref name="isInput" scoped="" ref="0x1b2f28c0"/>
        <function-ref name="toggle" scoped="" ref="0x1b2f29a0"/>
        <function-ref name="isOutput" scoped="" ref="0x1b2f2a80"/>
        <function-ref name="get" scoped="" ref="0x1b2f2b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b2f2c40"/>
        <function-ref name="set" scoped="" ref="0x1b2f2d20"/>
        <function-ref name="clr" scoped="" ref="0x1b2f2e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x1b2f4780" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x1b2f4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1b2f4958"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x1b2f4a38"/>
        <function-ref name="sfd" scoped="" ref="0x1b2f4b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x1b2ef448" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x1b2ef448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b2ef620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x1b2f3288" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x1b2f3288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1b2f3460"/>
        <function-ref name="isInput" scoped="" ref="0x1b2f3540"/>
        <function-ref name="toggle" scoped="" ref="0x1b2f3620"/>
        <function-ref name="isOutput" scoped="" ref="0x1b2f3700"/>
        <function-ref name="get" scoped="" ref="0x1b2f37e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1b2f38c0"/>
        <function-ref name="set" scoped="" ref="0x1b2f39a0"/>
        <function-ref name="clr" scoped="" ref="0x1b2f3a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b2f4010" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b2f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b2f41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1b2f4c80" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x1b2f4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x1b2f4e58"/>
        <function-ref name="receive" scoped="" ref="0x1b2f3010"/>
        <function-ref name="getPayload" scoped="" ref="0x1b2f30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x1b2f0628" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x1b2f0628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b2f0800"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b2f08e0"/>
        <function-ref name="request" scoped="" ref="0x1b2f09c0"/>
        <function-ref name="granted" scoped="" ref="0x1b2f0aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x1b2f0b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x1b2f0d18" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x1b2f0d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1b2f0ef0"/>
        <function-ref name="writeDone" scoped="" ref="0x1b2ef010"/>
        <function-ref name="write" scoped="" ref="0x1b2ef0f0"/>
        <function-ref name="beginRead" scoped="" ref="0x1b2ef1d0"/>
        <function-ref name="readDone" scoped="" ref="0x1b2ef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1b2efb00" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x1b2efb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1b2efd58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1b2efe38"/>
        <function-ref name="led1On" scoped="" ref="0x1b2eff18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1b2ee010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1b2ee0f0"/>
        <function-ref name="get" scoped="" ref="0x1b2ee1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x1b2ee2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x1b2ee630"/>
        <function-ref name="set" scoped="" ref="0x1b2ee390"/>
        <function-ref name="led0On" scoped="" ref="0x1b2ee470"/>
        <function-ref name="led2On" scoped="" ref="0x1b2ee550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x1b2f4358" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x1b2f4358"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b2f4530"/>
        <function-ref name="stop" scoped="" ref="0x1b2f4610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x1b2f0010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x1b2f0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1b2f01e8"/>
        <function-ref name="disable" scoped="" ref="0x1b2f02c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1b2f03a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1b2f0488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x1b2ef7c0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x1b2ef7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b2ef998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x1b3319a8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x1b3319a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b331b80"/>
        <function-ref name="write" scoped="" ref="0x1b331c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x1b332260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x1b332260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b332438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x1b330270" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x1b330270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b330448"/>
        <function-ref name="write" scoped="" ref="0x1b330528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1b32f368" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1b32f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b32f540"/>
        <function-ref name="write" scoped="" ref="0x1b32f620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x1b3310b8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x1b3310b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b331290"/>
        <function-ref name="write" scoped="" ref="0x1b331370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x1b334190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x1b334190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b334368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x1b332910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x1b332910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b332ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x1b331de0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x1b331de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b330010"/>
        <function-ref name="write" scoped="" ref="0x1b3300f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x1b3325b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x1b3325b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b332790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x1b330f18" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x1b330f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b32f108"/>
        <function-ref name="write" scoped="" ref="0x1b32f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x1b3344e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x1b3344e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b3346c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x1b32f7a0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x1b32f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1b32f978"/>
        <function-ref name="writeDone" scoped="" ref="0x1b32fa58"/>
        <function-ref name="write" scoped="" ref="0x1b32fb38"/>
        <function-ref name="beginRead" scoped="" ref="0x1b32fc18"/>
        <function-ref name="readDone" scoped="" ref="0x1b32fcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x1b3314f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x1b3314f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b331748"/>
        <function-ref name="write" scoped="" ref="0x1b331828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x1b332c68" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x1b332c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b332e40"/>
        <function-ref name="write" scoped="" ref="0x1b332f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x1b334840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x1b334840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b334a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1b300690" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x1b300690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1b300868"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1b300948"/>
        <function-ref name="request" scoped="" ref="0x1b300a28"/>
        <function-ref name="granted" scoped="" ref="0x1b300b08"/>
        <function-ref name="isOwner" scoped="" ref="0x1b300be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1b330ae0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x1b330ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b330cb8"/>
        <function-ref name="write" scoped="" ref="0x1b330d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x1b3306a8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x1b3306a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1b330880"/>
        <function-ref name="write" scoped="" ref="0x1b330960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x1b300d68" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x1b300d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b334010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x1b334ef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x1b334ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b3320e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x1b334b98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x1b334b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1b334d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1b32fe78" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x1b32fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1b32e070"/>
        <function-ref name="writeDone" scoped="" ref="0x1b32e150"/>
        <function-ref name="write" scoped="" ref="0x1b32e230"/>
        <function-ref name="beginRead" scoped="" ref="0x1b32e310"/>
        <function-ref name="readDone" scoped="" ref="0x1b32e3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x1b353b38" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x1b353b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1b353d10"/>
        <function-ref name="rand32" scoped="" ref="0x1b353df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x1b353288" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x1b353288"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b3538b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b3235f0" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b3235f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b3237c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x1b350a00" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x1b350a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1b350bd8"/>
        <function-ref name="rand32" scoped="" ref="0x1b350cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x1b350150" loc="33:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x1b350150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b350778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b321d20" loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b321d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b321ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x1b34b968" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x1b34b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1b34bb40"/>
        <function-ref name="rand32" scoped="" ref="0x1b34bc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x1b34b0b8" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x1b34b0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b34b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b34fc78" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b34fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b34fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x1b343c20" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x1b343c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1b343df8"/>
        <function-ref name="getRssi" scoped="" ref="0x1b343ed8"/>
        <function-ref name="getPower" scoped="" ref="0x1b372010"/>
        <function-ref name="getLqi" scoped="" ref="0x1b3720f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x1b372268" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1b372268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1b372440"/>
        <function-ref name="noAck" scoped="" ref="0x1b372520"/>
        <function-ref name="wasAcked" scoped="" ref="0x1b372600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1b3633b8" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="Ch6_GasDetector_101C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x1b3633b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b363590"/>
        <function-ref name="getPayload" scoped="" ref="0x1b363670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1b363750"/>
        <function-ref name="cancel" scoped="" ref="0x1b363830"/>
        <function-ref name="sendDone" scoped="" ref="0x1b363910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1b363a50" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="Ch6_GasDetector_101C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x1b363a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1b363c28"/>
        <function-ref name="payloadLength" scoped="" ref="0x1b363d08"/>
        <function-ref name="getPayload" scoped="" ref="0x1b363de8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1b363ec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1b3cb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1b3cb150" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="Ch6_GasDetector_101C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x1b3cb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x1b3cb328"/>
        <function-ref name="address" scoped="" ref="0x1b3cb408"/>
        <function-ref name="destination" scoped="" ref="0x1b3cb4e8"/>
        <function-ref name="setSource" scoped="" ref="0x1b3cb5c8"/>
        <function-ref name="setDestination" scoped="" ref="0x1b3cb6a8"/>
        <function-ref name="type" scoped="" ref="0x1b3cb788"/>
        <function-ref name="setType" scoped="" ref="0x1b3cb868"/>
        <function-ref name="isForMe" scoped="" ref="0x1b3cb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x1b3cbaa8" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="Ch6_GasDetector_101C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x1b3cbaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1b3cbc80"/>
        <function-ref name="noAck" scoped="" ref="0x1b3cbd60"/>
        <function-ref name="wasAcked" scoped="" ref="0x1b3cbe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1b98e118" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Ch6_GasDetector_101C.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x1b98e118"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b98e2f0"/>
        <function-ref name="getPayload" scoped="" ref="0x1b98e3d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1b98e4b0"/>
        <function-ref name="cancel" scoped="" ref="0x1b98e590"/>
        <function-ref name="sendDone" scoped="" ref="0x1b98e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x1b98e7e0" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Ch6_GasDetector_101C.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x1b98e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b98e9b8"/>
        <function-ref name="getPayload" scoped="" ref="0x1b98ea98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1b98eb78"/>
        <function-ref name="cancel" scoped="" ref="0x1b98ec58"/>
        <function-ref name="sendDone" scoped="" ref="0x1b98ed38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1b98ee78" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Ch6_GasDetector_101C.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x1b98ee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x1b98d070"/>
        <function-ref name="address" scoped="" ref="0x1b98d150"/>
        <function-ref name="destination" scoped="" ref="0x1b98d230"/>
        <function-ref name="setSource" scoped="" ref="0x1b98d310"/>
        <function-ref name="setDestination" scoped="" ref="0x1b98d3f0"/>
        <function-ref name="type" scoped="" ref="0x1b98d4d0"/>
        <function-ref name="setType" scoped="" ref="0x1b98d5b0"/>
        <function-ref name="isForMe" scoped="" ref="0x1b98d690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1b3858c0" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x1b3858c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b385a98"/>
        <function-ref name="getPayload" scoped="" ref="0x1b385b78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1b385c58"/>
        <function-ref name="cancel" scoped="" ref="0x1b385d38"/>
        <function-ref name="sendDone" scoped="" ref="0x1b385e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x1b3d0a28" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x1b3d0a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b3d0c10"/>
        <function-ref name="getPayload" scoped="" ref="0x1b3d0cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1b3d0dd0"/>
        <function-ref name="cancel" scoped="" ref="0x1b3d0eb0"/>
        <function-ref name="sendDone" scoped="" ref="0x1b3cf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1b3d02b8" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x1b3d02b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b3d04a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1b3d0580"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1b3d0660"/>
        <function-ref name="cancel" scoped="" ref="0x1b3d0740"/>
        <function-ref name="sendDone" scoped="" ref="0x1b3d0820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x1b3cfa88" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x1b3cfa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1b3cfc60"/>
        <function-ref name="payloadLength" scoped="" ref="0x1b3cfd40"/>
        <function-ref name="getPayload" scoped="" ref="0x1b3cfe20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1b3cff00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1b3ce010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x1b3ce190" loc="143:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x1b3ce190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1b3ce368"/>
        <function-ref name="runTask" scoped="" ref="0x1b3ce448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1b3cf150" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x1b3cf150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x1b3cf328"/>
        <function-ref name="address" scoped="" ref="0x1b3cf408"/>
        <function-ref name="destination" scoped="" ref="0x1b3cf4e8"/>
        <function-ref name="setSource" scoped="" ref="0x1b3cf5c8"/>
        <function-ref name="setDestination" scoped="" ref="0x1b3cf6a8"/>
        <function-ref name="type" scoped="" ref="0x1b3cf788"/>
        <function-ref name="setType" scoped="" ref="0x1b3cf868"/>
        <function-ref name="isForMe" scoped="" ref="0x1b3cf948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1b3c7030" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="Ch6_GasDetector_101C.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x1b3c7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1b3c7208"/>
        <function-ref name="payloadLength" scoped="" ref="0x1b3c72e8"/>
        <function-ref name="getPayload" scoped="" ref="0x1b3c73c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1b3c74a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1b3c7588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1b3c8b38" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="Ch6_GasDetector_101C.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x1b3c8b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x1b3c8d10"/>
        <function-ref name="receive" scoped="" ref="0x1b3c8df0"/>
        <function-ref name="getPayload" scoped="" ref="0x1b3c8ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1b3c76c8" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="Ch6_GasDetector_101C.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x1b3c76c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x1b3c78a0"/>
        <function-ref name="address" scoped="" ref="0x1b3c7980"/>
        <function-ref name="destination" scoped="" ref="0x1b3c7a60"/>
        <function-ref name="setSource" scoped="" ref="0x1b3c7b40"/>
        <function-ref name="setDestination" scoped="" ref="0x1b3c7c20"/>
        <function-ref name="type" scoped="" ref="0x1b3c7d00"/>
        <function-ref name="setType" scoped="" ref="0x1b3c7de0"/>
        <function-ref name="isForMe" scoped="" ref="0x1b3c7ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GasDetector" ref="0x1b3f4630" loc="27:GasDetectorC.nc">
      <component-ref qname="GasDetectorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GasDetector" scoped="" ref="0x1b3f4630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GasDetector"/>
      </instance>
      <interface-functions>
        <function-ref name="BecomeNormal" scoped="" ref="0x1b3f4808"/>
        <function-ref name="EscapeOfGas" scoped="" ref="0x1b3f48e8"/>
        <function-ref name="Init" scoped="" ref="0x1b3f49c8"/>
        <function-ref name="WatchEscOfGas" scoped="" ref="0x1b3f4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x1b3f2010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="GasDetectorC.IntPin"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x1b3f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1b3f21e8"/>
        <function-ref name="fired" scoped="" ref="0x1b3f22c8"/>
        <function-ref name="disable" scoped="" ref="0x1b3f23a8"/>
        <function-ref name="edge" scoped="" ref="0x1b3f2488"/>
        <function-ref name="enable" scoped="" ref="0x1b3f2568"/>
        <function-ref name="getValue" scoped="" ref="0x1b3f2648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x1b3f27c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="GasDetectorC.IntPin"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x1b3f27c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1b3f29a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x1b3ed290" loc="29:GasDetectorP.nc">
      <component-ref qname="GasDetectorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x1b3ed290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1b3ed468"/>
        <function-ref name="fired" scoped="" ref="0x1b3ed548"/>
        <function-ref name="disable" scoped="" ref="0x1b3ed628"/>
        <function-ref name="edge" scoped="" ref="0x1b3ed708"/>
        <function-ref name="enable" scoped="" ref="0x1b3ed7e8"/>
        <function-ref name="getValue" scoped="" ref="0x1b3ed8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timer" ref="0x1b3edaf0" loc="30:GasDetectorP.nc">
      <component-ref qname="GasDetectorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timer" scoped="" ref="0x1b3edaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1b3eb4c8"/>
        <function-ref name="fired" scoped="" ref="0x1b3ec8c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1b3ece60"/>
        <function-ref name="isOneShot" scoped="" ref="0x1b3ecc80"/>
        <function-ref name="getdt" scoped="" ref="0x1b3eb888"/>
        <function-ref name="gett0" scoped="" ref="0x1b3eb6a8"/>
        <function-ref name="isRunning" scoped="" ref="0x1b3ecaa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1b3ec1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1b3eb1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x1b3ec460"/>
        <function-ref name="stop" scoped="" ref="0x1b3ec6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GasDetector" ref="0x1b3f1be8" loc="27:GasDetectorP.nc">
      <component-ref qname="GasDetectorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GasDetector" scoped="" ref="0x1b3f1be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GasDetector"/>
      </instance>
      <interface-functions>
        <function-ref name="BecomeNormal" scoped="" ref="0x1b3f1dc0"/>
        <function-ref name="EscapeOfGas" scoped="" ref="0x1b3f1ea0"/>
        <function-ref name="Init" scoped="" ref="0x1b3ed010"/>
        <function-ref name="WatchEscOfGas" scoped="" ref="0x1b3ed0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendSignal" ref="0x1b3e5010" loc="40:GasDetectorP.nc">
      <component-ref qname="GasDetectorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendSignal" scoped="" ref="0x1b3e5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1b3e51e8"/>
        <function-ref name="runTask" scoped="" ref="0x1b3e52c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1b3e8a48" loc="32:GasDetectorP.nc">
      <component-ref qname="GasDetectorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x1b3e8a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1b3e8c20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1b3e8d00"/>
        <function-ref name="led1On" scoped="" ref="0x1b3e8de0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1b3e8ec0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1b3e7010"/>
        <function-ref name="get" scoped="" ref="0x1b3e70f0"/>
        <function-ref name="led1Off" scoped="" ref="0x1b3e71d0"/>
        <function-ref name="led2Off" scoped="" ref="0x1b3e7550"/>
        <function-ref name="set" scoped="" ref="0x1b3e72b0"/>
        <function-ref name="led0On" scoped="" ref="0x1b3e7390"/>
        <function-ref name="led2On" scoped="" ref="0x1b3e7470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerStop" ref="0x1b3e41e0" loc="48:GasDetectorP.nc">
      <component-ref qname="GasDetectorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerStop" scoped="" ref="0x1b3e41e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1b3e43b8"/>
        <function-ref name="runTask" scoped="" ref="0x1b3e4498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timer1" ref="0x1b3ebb08" loc="31:GasDetectorP.nc">
      <component-ref qname="GasDetectorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timer1" scoped="" ref="0x1b3ebb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1b3e84c8"/>
        <function-ref name="fired" scoped="" ref="0x1b3e98c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1b3e9e60"/>
        <function-ref name="isOneShot" scoped="" ref="0x1b3e9c80"/>
        <function-ref name="getdt" scoped="" ref="0x1b3e8888"/>
        <function-ref name="gett0" scoped="" ref="0x1b3e86a8"/>
        <function-ref name="isRunning" scoped="" ref="0x1b3e9aa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1b3e91e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1b3e81a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x1b3e9460"/>
        <function-ref name="stop" scoped="" ref="0x1b3e96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1b411a38" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="GasDetectorC.T0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1b411a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1b40f368"/>
        <function-ref name="fired" scoped="" ref="0x1b410768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1b410d08"/>
        <function-ref name="isOneShot" scoped="" ref="0x1b410b28"/>
        <function-ref name="getdt" scoped="" ref="0x1b40f728"/>
        <function-ref name="gett0" scoped="" ref="0x1b40f548"/>
        <function-ref name="isRunning" scoped="" ref="0x1b410948"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1b410088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1b40f048"/>
        <function-ref name="startOneShot" scoped="" ref="0x1b410308"/>
        <function-ref name="stop" scoped="" ref="0x1b410588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1b40d3d8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="GasDetectorC.T1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1b40d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140888"/>
            <typename><typedef-ref name="TMilli" ref="0x1a140a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1b40cce8"/>
        <function-ref name="fired" scoped="" ref="0x1b40c108"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1b40c6a8"/>
        <function-ref name="isOneShot" scoped="" ref="0x1b40c4c8"/>
        <function-ref name="getdt" scoped="" ref="0x1b40b0d8"/>
        <function-ref name="gett0" scoped="" ref="0x1b40cec8"/>
        <function-ref name="isRunning" scoped="" ref="0x1b40c2e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1b40da00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1b40c9c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x1b40dc80"/>
        <function-ref name="stop" scoped="" ref="0x1b40df00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x1b432400" loc="42:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x1b432400"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b4325d8"/>
        <function-ref name="receive" scoped="" ref="0x1b4326b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x1b4362b0" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x1b4362b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b436488"/>
        <function-ref name="receivedByte" scoped="" ref="0x1b436568"/>
        <function-ref name="receive" scoped="" ref="0x1b436648"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x1b436728"/>
        <function-ref name="receiveDone" scoped="" ref="0x1b436808"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x1b4368e8"/>
        <function-ref name="sendDone" scoped="" ref="0x1b4369c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x1b407408" loc="40:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x1b407408"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b4075e0"/>
        <function-ref name="stop" scoped="" ref="0x1b4076c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x1b430a10" loc="41:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x1b430a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b430be8"/>
        <function-ref name="receive" scoped="" ref="0x1b430cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x1b430e38" loc="42:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x1b430e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b42f050"/>
        <function-ref name="receivedByte" scoped="" ref="0x1b42f130"/>
        <function-ref name="receive" scoped="" ref="0x1b42f210"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x1b42f2f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x1b42f3d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x1b42f4b0"/>
        <function-ref name="sendDone" scoped="" ref="0x1b42f590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1b42f830" loc="43:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1b42f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140e58"/>
            <typename><typedef-ref name="TMicro" ref="0x1a152010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1b42e010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1b42e410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1b42e210"/>
        <function-ref name="overflow" scoped="" ref="0x1b42e610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x1b4305e8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x1b4305e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b4307c0"/>
        <function-ref name="stop" scoped="" ref="0x1b4308a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x1b42be48" loc="44:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x1b42be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b42a050"/>
        <function-ref name="receive" scoped="" ref="0x1b42a130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x1b42ab28" loc="47:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x1b42ab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b42ad00"/>
        <function-ref name="stop" scoped="" ref="0x1b42ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b42b6f8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b42b6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b42b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x1b42a290" loc="45:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x1b42a290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1b42a468"/>
        <function-ref name="receivedByte" scoped="" ref="0x1b42a548"/>
        <function-ref name="receive" scoped="" ref="0x1b42a628"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x1b42a708"/>
        <function-ref name="receiveDone" scoped="" ref="0x1b42a7e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x1b42a8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x1b42a9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1b4750a0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1b4750a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140e58"/>
            <typename><typedef-ref name="TMicro" ref="0x1a152010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1b4757f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1b475bf0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1b4759f0"/>
        <function-ref name="overflow" scoped="" ref="0x1b475df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x1b476448" loc="49:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x1b476448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1b476620"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1b476700"/>
        <function-ref name="rxDone" scoped="" ref="0x1b4767e0"/>
        <function-ref name="txDone" scoped="" ref="0x1b4768c0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1b4769a0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1b476a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1b476b60"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x1b476c40"/>
        <function-ref name="tx" scoped="" ref="0x1b476d20"/>
        <function-ref name="rx" scoped="" ref="0x1b476e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x1b42ba30" loc="43:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x1b42ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b42bc08"/>
        <function-ref name="stop" scoped="" ref="0x1b42bce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x1b476010" loc="48:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x1b476010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b4761e8"/>
        <function-ref name="stop" scoped="" ref="0x1b4762c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x1b465190" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x1b465190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1b465368"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1b465448"/>
        <function-ref name="rxDone" scoped="" ref="0x1b465528"/>
        <function-ref name="txDone" scoped="" ref="0x1b465608"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1b4656e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1b4657c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1b4658a8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x1b465988"/>
        <function-ref name="tx" scoped="" ref="0x1b465a68"/>
        <function-ref name="rx" scoped="" ref="0x1b465b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x1b4645c8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x1b4645c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1b4647a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1b464880"/>
        <function-ref name="rxDone" scoped="" ref="0x1b464960"/>
        <function-ref name="txDone" scoped="" ref="0x1b464a40"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1b464b20"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1b464c00"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1b464ce0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x1b464dc0"/>
        <function-ref name="tx" scoped="" ref="0x1b464ea0"/>
        <function-ref name="rx" scoped="" ref="0x1b463010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x1b466cc0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x1b466cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b466e98"/>
        <function-ref name="stop" scoped="" ref="0x1b465010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x1b465cc8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x1b465cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b465ea0"/>
        <function-ref name="stop" scoped="" ref="0x1b464010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x1b464190" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x1b464190"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b464368"/>
        <function-ref name="stop" scoped="" ref="0x1b464448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x1b466888" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x1b466888"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b466a60"/>
        <function-ref name="stop" scoped="" ref="0x1b466b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x1b496408" loc="71:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x1b496408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b4965e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x1b495070" loc="74:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x1b495070"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1b495248"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1b495328"/>
        <function-ref name="rxDone" scoped="" ref="0x1b495408"/>
        <function-ref name="txDone" scoped="" ref="0x1b4954e8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1b4955c8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1b4956a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1b495788"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x1b495868"/>
        <function-ref name="tx" scoped="" ref="0x1b495948"/>
        <function-ref name="rx" scoped="" ref="0x1b495a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x1b495bc0" loc="76:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x1b495bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b495d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x1b4948c0" loc="79:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x1b4948c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1b494a98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1b494b78"/>
        <function-ref name="rxDone" scoped="" ref="0x1b494c58"/>
        <function-ref name="txDone" scoped="" ref="0x1b494d38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1b494e18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1b494ef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1b493010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x1b4930f0"/>
        <function-ref name="tx" scoped="" ref="0x1b4931d0"/>
        <function-ref name="rx" scoped="" ref="0x1b4932b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x1b496bd8" loc="73:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x1b496bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b496db0"/>
        <function-ref name="stop" scoped="" ref="0x1b496e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x1b494010" loc="77:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x1b494010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b4941e8"/>
        <function-ref name="stop" scoped="" ref="0x1b4942c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x1b494468" loc="78:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x1b494468"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b494640"/>
        <function-ref name="stop" scoped="" ref="0x1b494720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x1b493420" loc="81:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x1b493420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x1b4935f8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x1b4936d8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x1b4937b8"/>
        <function-ref name="actualMicro" scoped="" ref="0x1b493898"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x1b493978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x1b493ae8" loc="82:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x1b493ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x1b493cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x1b496780" loc="72:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x1b496780"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1b496958"/>
        <function-ref name="stop" scoped="" ref="0x1b496a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1b4ceab0" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1b4ceab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140e58"/>
            <typename><typedef-ref name="TMicro" ref="0x1a152010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1b4cc228"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1b4cc628"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1b4cc428"/>
        <function-ref name="overflow" scoped="" ref="0x1b4cc828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1b4c8e80" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1b4c8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140e58"/>
            <typename><typedef-ref name="TThree" ref="0x1a1e1ca0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1b4c75e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1b4c79e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1b4c77e0"/>
        <function-ref name="overflow" scoped="" ref="0x1b4c7be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x1b4c0ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x1b4c0ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x1b4c0ca0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x1b4c0d80"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x1b4c0e60"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x1b4f7010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x1b4f70f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x1b4f71d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x1b4f72b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x1b4f7390"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x1b4f7470"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x1b4f7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1b4f7770" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x1b4f7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x1b4f4010"/>
        <function-ref name="test" scoped="" ref="0x1b4f6b50"/>
        <function-ref name="get" scoped="" ref="0x1b4f7db8"/>
        <function-ref name="captured" scoped="" ref="0x1b4f62b0"/>
        <function-ref name="reset" scoped="" ref="0x1b4f6550"/>
        <function-ref name="isOn" scoped="" ref="0x1b4f6d50"/>
        <function-ref name="set" scoped="" ref="0x1b4f6010"/>
        <function-ref name="start" scoped="" ref="0x1b4f6750"/>
        <function-ref name="stop" scoped="" ref="0x1b4f6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1b4f45b8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x1b4f45b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x1b4f38b8"/>
        <function-ref name="fired" scoped="" ref="0x1b4f30b8"/>
        <function-ref name="get" scoped="" ref="0x1b4f4c00"/>
        <function-ref name="reset" scoped="" ref="0x1b4f32b8"/>
        <function-ref name="isOn" scoped="" ref="0x1b4f3ab8"/>
        <function-ref name="set" scoped="" ref="0x1b4f4e00"/>
        <function-ref name="start" scoped="" ref="0x1b4f34b8"/>
        <function-ref name="stop" scoped="" ref="0x1b4f36b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1b4c6cf0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1b4c6cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x1b4c0448"/>
        <function-ref name="test" scoped="" ref="0x1b4c0048"/>
        <function-ref name="get" scoped="" ref="0x1b4c2370"/>
        <function-ref name="setScale" scoped="" ref="0x1b4c0648"/>
        <function-ref name="getScale" scoped="" ref="0x1b4c08e8"/>
        <function-ref name="reset" scoped="" ref="0x1b4c2a10"/>
        <function-ref name="overflow" scoped="" ref="0x1b4c2810"/>
        <function-ref name="isOn" scoped="" ref="0x1b4c0248"/>
        <function-ref name="set" scoped="" ref="0x1b4c2570"/>
        <function-ref name="start" scoped="" ref="0x1b4c2c10"/>
        <function-ref name="stop" scoped="" ref="0x1b4c2e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x1b4ece90" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x1b4ece90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x1b4eb080"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x1b4eb160"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x1b4eb240"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x1b4eb320"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x1b4eb400"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x1b4eb4e0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x1b4eb5c0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x1b4eb6a0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x1b4eb780"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x1b4eb860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x1b4e8568" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x1b4e8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x1b4e7868"/>
        <function-ref name="fired" scoped="" ref="0x1b4e7068"/>
        <function-ref name="get" scoped="" ref="0x1b4e8bb0"/>
        <function-ref name="reset" scoped="" ref="0x1b4e7268"/>
        <function-ref name="isOn" scoped="" ref="0x1b4e7a68"/>
        <function-ref name="set" scoped="" ref="0x1b4e8db0"/>
        <function-ref name="start" scoped="" ref="0x1b4e7468"/>
        <function-ref name="stop" scoped="" ref="0x1b4e7668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1b4eba80" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x1b4eba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x1b4e8248"/>
        <function-ref name="test" scoped="" ref="0x1b4eae38"/>
        <function-ref name="get" scoped="" ref="0x1b4ea0f8"/>
        <function-ref name="captured" scoped="" ref="0x1b4ea598"/>
        <function-ref name="reset" scoped="" ref="0x1b4ea838"/>
        <function-ref name="isOn" scoped="" ref="0x1b4e8048"/>
        <function-ref name="set" scoped="" ref="0x1b4ea2f8"/>
        <function-ref name="start" scoped="" ref="0x1b4eaa38"/>
        <function-ref name="stop" scoped="" ref="0x1b4eac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x1b4e7ce8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x1b4e7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x1b4e4048"/>
        <function-ref name="fired" scoped="" ref="0x1b4e5810"/>
        <function-ref name="get" scoped="" ref="0x1b4e5370"/>
        <function-ref name="reset" scoped="" ref="0x1b4e5a10"/>
        <function-ref name="isOn" scoped="" ref="0x1b4e4248"/>
        <function-ref name="set" scoped="" ref="0x1b4e5570"/>
        <function-ref name="start" scoped="" ref="0x1b4e5c10"/>
        <function-ref name="stop" scoped="" ref="0x1b4e5e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x1b4e44c8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x1b4e44c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x1b4e3810"/>
        <function-ref name="fired" scoped="" ref="0x1b4e3010"/>
        <function-ref name="get" scoped="" ref="0x1b4e4b10"/>
        <function-ref name="reset" scoped="" ref="0x1b4e3210"/>
        <function-ref name="isOn" scoped="" ref="0x1b4e3a10"/>
        <function-ref name="set" scoped="" ref="0x1b4e4d10"/>
        <function-ref name="start" scoped="" ref="0x1b4e3410"/>
        <function-ref name="stop" scoped="" ref="0x1b4e3610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1b4ed0b0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1b4ed0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x1b4ec810"/>
        <function-ref name="test" scoped="" ref="0x1b4ec410"/>
        <function-ref name="get" scoped="" ref="0x1b4ed6f8"/>
        <function-ref name="setScale" scoped="" ref="0x1b4eca10"/>
        <function-ref name="getScale" scoped="" ref="0x1b4eccb0"/>
        <function-ref name="reset" scoped="" ref="0x1b4edd98"/>
        <function-ref name="overflow" scoped="" ref="0x1b4edb98"/>
        <function-ref name="isOn" scoped="" ref="0x1b4ec610"/>
        <function-ref name="set" scoped="" ref="0x1b4ed8f8"/>
        <function-ref name="start" scoped="" ref="0x1b4ec010"/>
        <function-ref name="stop" scoped="" ref="0x1b4ec210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1b544b18" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x1b544b18"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x1a0100e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x1a0100e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1b544cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1b544f00" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1b544f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x1b541648"/>
        <function-ref name="test" scoped="" ref="0x1b541248"/>
        <function-ref name="get" scoped="" ref="0x1b542578"/>
        <function-ref name="setScale" scoped="" ref="0x1b541848"/>
        <function-ref name="getScale" scoped="" ref="0x1b541ae8"/>
        <function-ref name="reset" scoped="" ref="0x1b542c18"/>
        <function-ref name="overflow" scoped="" ref="0x1b542a18"/>
        <function-ref name="isOn" scoped="" ref="0x1b541448"/>
        <function-ref name="set" scoped="" ref="0x1b542778"/>
        <function-ref name="start" scoped="" ref="0x1b542e18"/>
        <function-ref name="stop" scoped="" ref="0x1b541048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1b547a20" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1b547a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140e58"/>
            <typename><typedef-ref name="TThree" ref="0x1a1e1ca0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1b577200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1b577600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1b577400"/>
        <function-ref name="overflow" scoped="" ref="0x1b577800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1b577a68" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x1b577a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x1b575210"/>
        <function-ref name="test" scoped="" ref="0x1b576d78"/>
        <function-ref name="get" scoped="" ref="0x1b5760d8"/>
        <function-ref name="setScale" scoped="" ref="0x1b575410"/>
        <function-ref name="getScale" scoped="" ref="0x1b5756b0"/>
        <function-ref name="reset" scoped="" ref="0x1b576778"/>
        <function-ref name="overflow" scoped="" ref="0x1b576578"/>
        <function-ref name="isOn" scoped="" ref="0x1b575010"/>
        <function-ref name="set" scoped="" ref="0x1b5762d8"/>
        <function-ref name="start" scoped="" ref="0x1b576978"/>
        <function-ref name="stop" scoped="" ref="0x1b576b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x1b571078" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x1b571078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140e58"/>
            <typename><typedef-ref name="TThree" ref="0x1a1e1ca0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1b5717c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1b571bc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1b5719c8"/>
        <function-ref name="overflow" scoped="" ref="0x1b571dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1b4c9010" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x1b4c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140e58"/>
            <typename><typedef-ref name="TMicro" ref="0x1a152010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1b4c9760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1b4c9b60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1b4c9960"/>
        <function-ref name="overflow" scoped="" ref="0x1b4c9d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x1b56a930" loc="31:/opt/tinyos-2.x/tos/platforms/homenet/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x1b56a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x1a140e58"/>
            <typename><typedef-ref name="TMicro" ref="0x1a152010"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x1b56d0a8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x1a323ed8" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x1a3117b8" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x1a3427c8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x1a342570" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x1a343268" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x1a343838" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x1a3435c0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x1a343e10" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x1a343b90" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x1a342208" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x1a030010" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x1a0307f8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x1a030428" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x1a050198" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x1a0505a0" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x1a2113c8" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x1a280028" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x1a112338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x1a261ee8" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x1a4417d0" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1a4417d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x1a441c30" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x1a4403c0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1a4417d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x1a440010" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x1a440198" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1a4417d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x1a4e1588" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x1a4d4420"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x1a4e2c18" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x1a4d4420"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x1a4e2dc8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1a4e1010" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1a4f3010" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1a4f4c68" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1a4f4920" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1a4e1cb8" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1a4e18d0" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1a4f44d0" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1a4f4030" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1a4f41b8" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GasDetector" loc="23:GasDetector.nc">
      <documentation loc="23:GasDetector.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function event="" provided="0" name="BecomeNormal" ref="0x1a500358" loc="27:GasDetector.nc">
        <interfacedef-ref qname="GasDetector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="EscapeOfGas" ref="0x1a500650" loc="28:GasDetector.nc">
        <interfacedef-ref qname="GasDetector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="Init" ref="0x1a501d20" loc="24:GasDetector.nc">
        <interfacedef-ref qname="GasDetector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="edge" ref="0x1a501878" loc="24:GasDetector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="nomalcheckTimer" ref="0x1a501a10" loc="24:GasDetector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
          <variable name="minGapTimer" ref="0x1a501ba8" loc="24:GasDetector.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="WatchEscOfGas" ref="0x1a500060" loc="25:GasDetector.nc">
        <interfacedef-ref qname="GasDetector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="payloadLength" ref="0x1a5035e0" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This call is identical&#10; to &#60;TT>Packet.payloadLength&#60;/TT>, and is included in Receive as a&#10; convenience.&#10;&#10; @param  msg      the packet&#10; @return          the length of the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1a503360" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x1a4f0700" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
              <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1a4f1e10" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x1a4f0010" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1a4f0198" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1a503010" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return point to a protocol's payload region in a packet. </short>
          <long>&#10; Return point to a protocol's payload region in a packet.  If len&#10; is not NULL, getPayload will return the length of the payload in&#10; it. This call is identical to &#60;TT>Packet.getPayload&#60;/TT>, and is&#10; included in Receive as a convenience.&#10;&#10; @param  msg      the packet&#10; @param  len      a pointer to where to store the payload length&#10; @return          a pointer to the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1a4f0a48" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1a4f0bf0" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x1a461818" loc="88:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1a461578" loc="88:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x1a460348" loc="110:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1a4600f8" loc="110:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1a461258" loc="79:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if issuing the start command was successful&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x1a461d90" loc="102:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Stop the component and pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;</short>
          <long>&#10; Stop the component and pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10; Return values of SUCCESS will always result in a&#10; &#60;code>stopDone()&#60;/code> event being signalled.&#10;&#10; @return SUCCESS if issuing the stop command was successful&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x1a433720" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x1a433af8" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x1a433e68" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x1a4325e0" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x1a4310e8" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x1a431628" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x1a432208" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x1a431d00" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x1a431960" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x1a4333b0" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x1a432950" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x1a432cc0" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1a4022c8" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1a4022c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x1a412258" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x1a401650" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x1a400690" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x1a400100" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x1a400290" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x1a401db0" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x1a412a70" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x1a412698" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x1a401a20" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x1a402980" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x1a4026d8" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x1a400ee0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x1a4009b8" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x1a400b48" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x1a401010" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x1a402ca8" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1a401318" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x1a5a3248" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x1a5a3560" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x1a5a4be8" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x1a5a3b98" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x1a5a4f00" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x1a5a3878" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x1a5a45c8" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x1a5a48d8" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1a8332d0" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1a8332d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x1a833790" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1a852da0" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1a852da0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1a852eb8" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a852eb8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x1a8513b8" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a852eb8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x1a851b18" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x1a8517d8" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1a851ee8" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1a842cc8" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1a842cc8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1a842de0" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a842de0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x1a840bf0" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a842de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x1a841ba8" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x1a840878" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a842de0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a842de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x1a840350" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a842de0"/></type-var>
          </variable>
          <variable name="dt" ref="0x1a8404e0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a842de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x1a840010" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x1a8560a8" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a842de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x1a8414b8" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a842de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x1a841220" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a842de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1a841870" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x1a8846e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1615c0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x1a161810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x1a883720" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1816f0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x1a181940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x1a884ef0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1703a8"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x1a1705f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x1a8833c8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1703a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x1a1705f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x1a883260" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1703a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x1a1705f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x1a883bd8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1816f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x1a181940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x1a883a70" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1816f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x1a181940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x1a884b98" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1615c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x1a161810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x1a884a30" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1615c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x1a161810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x1a880268" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a880268"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x1a895d40" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x1a895010" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x1a8806e0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a880268"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x1a895348" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x1a894100" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x1a880c00" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a880268"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x1a880a20" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1a880268"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1a895678" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x1a8959a8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x1a876950" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1a876950"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x1a874a68" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x1a8743b0" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x1a876db0" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1a876950"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x1a872010" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x1a874da8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x1a8723a8" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x1a875940" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1a875608" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x1a874740" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x1a8752c0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1a876950"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x1a875100" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1a876950"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1a875c78" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x1a874010" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10;</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x1aa63010" loc="84:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.&#10;&#10;</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x1aa64b70" loc="84:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x1aa64d00" loc="84:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x1aa63408" loc="92:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x1aa64848" loc="76:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.&#10;&#10;</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x1aa65da0" loc="61:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.&#10;&#10;</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x1aa62078" loc="109:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10;</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x1aa63e08" loc="109:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x1aa65500" loc="47:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.&#10;&#10;</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x1aa625b8" loc="116:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.&#10;&#10;</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x1aa623a0" loc="116:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x1aa63ae0" loc="100:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.&#10;&#10;</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x1aa63730" loc="100:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x1aa638b8" loc="100:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x1aa65a18" loc="54:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.&#10;&#10;</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x1aa65820" loc="54:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x1aa644c8" loc="69:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.&#10;&#10;</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x1aa640f8" loc="69:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x1aa64288" loc="69:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.10 $&#10; @date $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x1aa501d0" loc="101:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.&#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x1aa51a48" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x1aa51618" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x1aa51d68" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x1aa505d8" loc="109:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="103:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.1.2.3 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x1aaa0ae0" loc="57:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x1aaa0738" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10;</short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x1aaa0378" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x1aaa0050" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x1ab46548" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x1ab45240" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x1ab461f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edge" ref="0x1ab46ed8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.&#10;</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x1ab46c60" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x1ab30e90" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x1ab46920" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10;</short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x1ab54320" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.5 $&#10; @date $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x1abb8b50" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x1abb70e0" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x1abc8298" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0x1abb1ea0" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceController" loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $Revision: 1.1.2.4 $&#10; @date $Date: 2006/08/15 11:50:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x1abb4ce8" loc="56:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; Release control of the resource&#10;&#10;</short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="requested" ref="0x1abb35d8" loc="73:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x1abb48b8" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x1abb3120" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x1abb3ab0" loc="81:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x1abb03e0" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0x1abb07e0" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x1abdaae8" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x1abc9d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x1abda8b0" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x1abc9d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x1abc0ad0" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x1abda150" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x1abc9d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x1abc0e28" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x1abc9d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x1abda560" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x1abc9d70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x1ac10e28" loc="52:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource. </short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x1ac210f0" loc="73:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x1ac21540" loc="82:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10;</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x1ac71830" loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10;</short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x1ac71468" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.&#10;</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x1ac71bf8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.&#10;</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x1ac84350" loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1ac84350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x1ac847d0" loc="57:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x1ac84ec0" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1ac84350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x1ac84b10" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x1ac84c98" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1ac84350"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10;&#10; from multiple channels using the ATmega128's free-running mode.&#10;&#10;</short>
        <long>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10;&#10; from multiple channels using the ATmega128's free-running mode.&#10;&#10; &#60;p>&#10;&#10; Because of the possibility that samples may be imprecise after &#10;&#10; switching channels and/or reference voltages, and because there&#10;&#10; is a one sample delay on swithcing channels and reference voltages,&#10;&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10;&#10; &#60;ol type=&#34;A&#34;>&#10;&#10; &#60;li>Acquire N samples from channel C:&#10;&#10;    &#60;ol>&#10;&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;&#10;       (note that the choice of prescalers is very limited, so you&#10;&#10;       don't have many choices for sampling rate)&#10;&#10;    &#60;li>ignore the first dataReady event&#10;&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;&#10;       on the last one&#10;&#10;    &#60;/ol>&#10;&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;&#10;    assumes that none of these channels are differential)&#10;&#10;    &#60;ol>&#10;&#10;    &#60;li>call getData to start sampling on channel C1&#10;&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;&#10;       *newChannel&#10;&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;&#10;       (the data from the first dataReady event is ignored)&#10;&#10;    &#60;/ol>&#10;&#10; &#60;/ol>&#10;&#10;&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x1acab538" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10;&#10; Initiates free-running ADC conversions, with the ability to switch &#10;&#10; channels and reference-voltage with a one sample delay.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Initiates free-running ADC conversions, with the ability to switch &#10;&#10; channels and reference-voltage with a one sample delay.&#10;&#10;&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;&#10;   be changed in the dataReady event, though these changes happen&#10;&#10;   with a one-sample delay (this is a hardware restriction).&#10;&#10; @param refVoltage Initial A/D reference voltage. See the&#10;&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;&#10;   the reference voltage can be changed in the dataReady event with&#10;&#10;   a one-sample delay.&#10;&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10;&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;&#10;  See the ATmega128 manual for details.&#10;&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;&#10;   imprecise (due to a change in reference voltage, or switching to a&#10;&#10;   differential input channel)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x1ac909f8" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x1ac90b88" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x1ac90d28" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x1ac90eb8" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x1aca9668" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10;&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10;&#10; Returns the next sample in a free-running conversion. Allow the user&#10;&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10;&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;&#10;   (we assume that the second conversion after a change of reference&#10;&#10;   voltage or after switching to a differential channel is precise)&#10;&#10; @param channel Channel this sample was from.&#10;&#10; @param newChannel Change this parameter to switch to a new channel&#10;&#10;   for the second next sample.&#10;&#10; @param newRefVoltage Change this parameter to change the reference &#10;&#10;   voltage for the second next sample.&#10;&#10;&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1acaba68" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x1acabbf0" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x1acabd78" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x1aca9010" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x1aca91c0" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10;&#10; a single sample from a channel.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10;&#10; a single sample from a channel.&#10;&#10;&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x1ac943a0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Initiates an ADC conversion on a given channel.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Initiates an ADC conversion on a given channel.&#10;&#10;&#10;&#10; @param channel A/D conversion channel.&#10;&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10;&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10;&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;&#10;  See the ATmega128 manual for details.&#10;&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;&#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;&#10;   differential input channel)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x1ac95868" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x1ac959f8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x1ac95b98" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x1ac95d28" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1ac933f0" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Cancel an outstanding getData operation.</short>
          <long>&#10;&#10; Cancel an outstanding getData operation. Use with care, to&#10;&#10; avoid problems with races between the dataReady event and cancel.&#10;&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;&#10;   conversion was already complete. dataReady will be (or has&#10;&#10;   already been) signaled.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x1ac94d58" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Indicates a sample has been recorded by the ADC as the result&#10;&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Indicates a sample has been recorded by the ADC as the result&#10;&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10;&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1ac948b8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x1ac94a40" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x1acb6758" loc="105:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x1acbaa60" loc="44:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10;</short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1a132540"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x1a1327f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x1acb48d0" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10;</short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x1acb46b0" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x1acb6b58" loc="113:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10;</short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x1acb7010" loc="73:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x1acb9010" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10;</short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1a132540"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x1a1327f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x1acbada8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1a132540"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x1a1327f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x1acb7678" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x1acb4370" loc="124:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10;</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1acb4dc8" loc="141:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x1acb7340" loc="77:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x1acb7cf0" loc="90:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x1acb79b8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x1acb60e8" loc="97:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x1acb6f08" loc="118:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10;</short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x1acb98e0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10;</short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1a1418f8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x1a141ce8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x1acb96f8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1a1418f8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x1a141ce8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x1acb6420" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x1acb93b0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10;</short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1a1418f8"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x1a141ce8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x1acb9c78" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10;</short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x1acb32f0" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10;</short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1acb3120" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x1aca1128" loc="73:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x1aca1598" loc="82:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ZigbexBusAdc" loc="27:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusAdc.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusAdc.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x1ad89118" loc="31:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusAdc.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</short>
        </documentation>
        <interfacedef-ref qname="ZigbexBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x1adfc010" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1adfdd98" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x1adfc680" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1adfc360" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1adfbca8" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.  If&#10; len is not NULL, getPayload will return the length of the payload&#10; in it, which is the same as the return value from&#10; payloadLength(). If a protocol does not support variable length&#10; packets, then *len is equal to maxPayloadLength().&#10;&#10; @param msg   the packet&#10; @param len   pointer to where the current payload length should be stored.&#10; @return      a pointer to the packet's data payload for this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1adfb750" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1adfb8f8" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1adfb408" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x1adfcf00" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1adfc9d0" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1adfcb58" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x1ae0e010" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1adf8c30" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x1ae0e6a8" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1ae0e378" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x1ae0ed38" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1ae0ea18" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="source" ref="0x1adf68e8" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x1a4d4420"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1adf6668" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x1adf7d10" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x1a4d4420"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0x1adf6318" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x1a4d4420"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1adf6088" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x1adf5bb8" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x1a4d4420"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1adf55c8" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x1adf5758" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x1a4d4420"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x1adf5280" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x1a4d4420"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1adf6c30" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x1adf6dc0" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x1a4d4420"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x1adf38a8" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1adf3660" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x1adf2240" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1adf3be8" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x1adf3d70" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1a4d4078"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x1adf3318" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1adf5f00" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x1ae03de8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1ae03a30" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x1ae03bb8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x1ae023f8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x194b09c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1ae02190" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x1ae036c8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.&#10;&#10;</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1ae034d8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x1ae029d0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1ae02760" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1ae16b00" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1ae16468" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1ae165f0" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1ae13518" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1ae131f8" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1ae15e98" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1ae15250" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1ae16e48" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1ae15a48" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1ae15598" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1ae15720" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1ae520e0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send a message with CCA disabled.&#10;&#10;</short>
          <long>&#10; Send a message with CCA disabled.&#10;&#10; @param p_msg message to send.&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1ae53e80" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1ae52c20" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.&#10;&#10;</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="modify" ref="0x1ae51cf0" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x1ae516f0" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x1ae51898" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1ae51a20" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1ae513b0" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10;</short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1ae51010" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1ae51198" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resendCCA" ref="0x1ae524b0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send the previous message again with CCA enabled.&#10;&#10;</short>
          <long>&#10; Send the previous message again with CCA enabled.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resend" ref="0x1ae52878" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send the previous message again with CCA disabled.&#10;&#10;</short>
          <long>&#10; Send the previous message again with CCA disabled.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sendCCA" ref="0x1ae53b18" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send a message with CCA enabled.&#10;&#10;</short>
          <long>&#10; Send a message with CCA enabled.&#10;&#10; @param p_msg message to send.&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1ae53900" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x1ae69518" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0x1ae69160" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x194c06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x1ae58c08" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x1ae57ab0" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Disable RX.&#10;&#10;</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x1ae57730" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Enable RX.&#10;&#10;</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x1ae58128" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x1ae58810" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.&#10;&#10;</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x1ae57010" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x1ae573b0" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Stop the oscillator.&#10;&#10;</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x1ae58478" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="29:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.&#10;</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x1ae6cd60" loc="43:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.&#10;</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x1ae6cb10" loc="43:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x1ae6c798" loc="36:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x1ae6c560" loc="36:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x1ae81498" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1ae81330" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x1ae81c48" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x1ae81ae0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x1ae804a0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x1ae80338" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x1ae80c60" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x1ae80af8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x1ae80010" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sync" ref="0x1ae81010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x1ae817c0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the channel of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x1ae807d0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x1aeacaf8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.&#10;&#10;</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1a471320"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1aeac8d8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1aeab0e0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.&#10; &#10;</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1a471320"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1aeace48" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.&#10;</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x1aea8cd0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1a471320"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x1ae905d8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1a471320"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x1ae90010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x1ae901b8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1ae90340" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1ae90ee8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1a471320"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x1ae90920" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x1ae90ac8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1ae90c50" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x1aefb528" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1e2700"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x1a1e2950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x1aefc4d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1b19f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x1a1b1c48"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x1aefc368" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1b19f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x1a1b1c48"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x1aefcce0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1d0558"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x1a1d07a8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x1aefe430" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1a2b78"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x1a1a2dc8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x1aefb1d0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1d0558"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x1a1d07a8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x1aefb068" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1d0558"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x1a1d07a8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x1aefb9e0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1e2700"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x1a1e2950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x1aefb878" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1e2700"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x1a1e2950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x1aefea98" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1b0ae0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x1a1b0d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x1aefe768" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1b19f8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x1a1b1c48"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x1aefc010" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1a2b78"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x1a1a2dc8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x1aefedf0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1a2b78"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x1a1a2dc8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x1aefc988" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1b0ae0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x1a1b0d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x1aefc820" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1a1b0ae0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x1a1b0d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x1aef8420" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1aef8420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x1aef58f8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x1aef5710" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x1aef5050" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x1aef8890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1aef8420"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x1aef6300" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1aef8420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x1aef6120" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1aef8420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x1aef6638" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x1aef53d8" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x1aef8db8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1aef8420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x1aef8bd0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1aef8420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1aef6968" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x1aef6c98" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x1b06f4b0" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x1b06fd18" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x1b06f9e8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1b06f7f8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x1b06f188" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x1b0d1198" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1b0a0d00" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1b0a0e88" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x1b0cfb90" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1b0cf610" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1b0cf798" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x1b0cf920" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1b0cf2b0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1a471320"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1b0d1dd0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1b0cf010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x1b0a0998" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x1a471320"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1b0a0568" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1b0a06f0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x1b0d1a68" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1b0d14f8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1b0d1680" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x1b0d1808" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.1.2.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1b0edf18" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x1b0ed7f8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x1b0ed9a0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1b0edb30" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1b0eca90" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x1b0ec290" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x1b0ec438" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1b0ec5c8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x1b0ec760" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x1b0ef2c0" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x1b0ef088" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x1b14b010" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x1b147920" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x1b1490f0" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x1b147dd8" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x1b147c70" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x1b14dbe0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x1b149d70" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x1b149c08" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x1b14a5e0" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x1b14a478" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x1b14b6c0" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x1b1447e8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x1b144680" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x1b14a908" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0x1b1465e8" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x1b146480" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x1b146c30" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x1b1475f8" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x1b147490" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x1b144338" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x1b1495a0" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x1b149438" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1b14bbc8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1b14b9f8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x1b14adb0" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x1b14ac48" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x1b147140" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x1b146140" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0x1b146908" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x1b144010" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x1b1498c0" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0x1b14b350" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x1b14a138" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1b14bf08" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.&#10;</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x1b2443c8" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1b244030" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x1b2441e0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x1b244a80" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock. </short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1b244710" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.5 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x1b268440" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.&#10;&#10;</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x1b268068" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x1b268218" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1a4e38d8"/>
                <typename><typedef-ref name="message_t" ref="0x1a4e2288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x1b269d10" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sfd" ref="0x1b269950" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.&#10;&#10;</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1b269750" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x1b354920" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1b354920"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x1b353030" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1b354920"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x1b354d20" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1b354920"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.1.2.1 $ $Date: 2006/10/10 19:18:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1b434b00" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x1b4348c0" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x1b432288" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param byte Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x1b434e60" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x1b432010" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.1.2.1 $ $Date: 2006/10/10 19:18:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1b403a28" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param buf Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1b4035f0" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1b403780" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x1b400010" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.&#10;&#10;</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x1b401e08" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x1b4007a8" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param buf Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1b400370" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1b400500" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x1b401710" loc="65:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x1b436138" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.&#10;&#10;</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param buf Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1b400b08" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1b400c98" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x1b400e20" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x1b401ac8" loc="72:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.&#10;&#10;</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1b401310" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.&#10;&#10;</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param buf Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1b403d88" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1b403f18" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x194c0238"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x1b4010b8" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10;</short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.1 $ $Date: 2006/10/10 19:18:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x1b4210d0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x1b423a40" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x1b420380" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1b420218" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x1b421ba0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x1b423400" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x1b423720" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x1b423d60" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x1a052df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x1b4213f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1a0113e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="tx" ref="0x1b421890" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1b421728" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x1b421eb8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x194b0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10;</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1b56be68" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1b56be68"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1b56a010" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1b56a010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x1b56a670" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1b56a010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x1b56a438" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1b56a010"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
